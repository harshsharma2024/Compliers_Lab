Terminals unused in grammar

    OTHERS
    STRUCT
    TYPEDEF
    UNION
    CONSTANT
    HASH


State 317 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | INTEGER_CONSTANT
    3                   | FLOATING_CONSTANT
    4                   | CHARACTER_CONSTANT
    5                   | STRING_LITERAL
    6                   | OPENRB expression CLOSERB

    7 postfix_expression: primary_expression
    8                   | postfix_expression OPENSB expression CLOSESB
    9                   | postfix_expression OPENRB argument_expression_list CLOSERB
   10                   | postfix_expression OPENRB CLOSERB
   11                   | postfix_expression DOT IDENTIFIER
   12                   | postfix_expression RIGHTARROW IDENTIFIER
   13                   | postfix_expression PLUSPLUS
   14                   | postfix_expression MINUSMINS
   15                   | OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   16                   | OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB

   17 argument_expression_list: assignment_expression
   18                         | argument_expression_list COMMA assignment_expression

   19 unary_expression: postfix_expression
   20                 | PLUSPLUS unary_expression
   21                 | MINUSMINS unary_expression
   22                 | unary_operator cast_expression
   23                 | SIZEOF unary_expression
   24                 | SIZEOF OPENRB type_name CLOSERB

   25 unary_operator: BAND
   26               | KSTAR
   27               | PLUS
   28               | MINUS
   29               | TILDA
   30               | NOT

   31 cast_expression: unary_expression
   32                | OPENRB type_name CLOSERB cast_expression

   33 multiplicative_expression: cast_expression
   34                          | multiplicative_expression KSTAR cast_expression
   35                          | multiplicative_expression DIVIDE cast_expression
   36                          | multiplicative_expression MODULO cast_expression

   37 additive_expression: multiplicative_expression
   38                    | additive_expression PLUS multiplicative_expression
   39                    | additive_expression MINUS multiplicative_expression

   40 shift_expression: additive_expression
   41                 | shift_expression LEFTS additive_expression
   42                 | shift_expression RIGHTS additive_expression

   43 relational_expression: shift_expression
   44                      | relational_expression LESSTHAN shift_expression
   45                      | relational_expression GREATERTHAN shift_expression
   46                      | relational_expression LESSEQUAL shift_expression
   47                      | relational_expression GREATEREQUAL shift_expression

   48 equality_expression: relational_expression
   49                    | equality_expression EQUALEQUAL relational_expression
   50                    | equality_expression NOTEQUAL relational_expression

   51 and_expression: equality_expression
   52               | and_expression BAND equality_expression

   53 exclusive_or_expression: and_expression
   54                        | exclusive_or_expression XOR and_expression

   55 inclusive_or_expression: exclusive_or_expression
   56                        | inclusive_or_expression BITWISEOR exclusive_or_expression

   57 logical_and_expression: inclusive_or_expression
   58                       | logical_and_expression AND inclusive_or_expression

   59 logical_or_expression: logical_and_expression
   60                      | logical_or_expression OR logical_and_expression

   61 conditional_expression: logical_or_expression
   62                       | logical_or_expression QUESTIONMARK expression COLON conditional_expression

   63 assignment_expression: conditional_expression
   64                      | unary_expression assignment_operator assignment_expression

   65 assignment_operator: EQUAL
   66                    | MULEQUAL
   67                    | DIVEQUAL
   68                    | MODEQUAL
   69                    | PLUSEQUAL
   70                    | MINUSEQUAL
   71                    | SHIFTLEQUAL
   72                    | SHIFTREQUAL
   73                    | ANDEQUAL
   74                    | XOREQUAL
   75                    | OREQUAL

   76 expression: assignment_expression
   77           | expression COMMA assignment_expression

   78 constant_expression: conditional_expression

   79 declaration: declaration_specifiers init_declarator_list SEMICOLON
   80            | declaration_specifiers SEMICOLON

   81 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   82                       | type_specifier declaration_specifiers_opt
   83                       | type_qualifier declaration_specifiers_opt
   84                       | function_specifier declaration_specifiers_opt

   85 declaration_specifiers_opt: declaration_specifiers
   86                           | ε

   87 init_declarator_list: init_declarator
   88                     | init_declarator_list COMMA init_declarator

   89 init_declarator: declarator
   90                | declarator EQUAL initializer

   91 storage_class_specifier: EXTERN
   92                        | STATIC
   93                        | AUTO
   94                        | REGISTER

   95 type_specifier: VOID
   96               | CHAR
   97               | SHORT
   98               | INT
   99               | LONG
  100               | FLOAT
  101               | DOUBLE
  102               | SIGNED
  103               | UNSIGNED
  104               | _BOOL
  105               | _COMPLEX
  106               | _IMAGINARY
  107               | enum_specifier

  108 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  109                         | type_qualifier specifier_qualifier_list_opt

  110 specifier_qualifier_list_opt: specifier_qualifier_list
  111                             | ε

  112 enum_specifier: ENUM identifier_opt OPENCB enumerator_list CLOSECB
  113               | ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  114               | ENUM IDENTIFIER

  115 identifier_opt: IDENTIFIER
  116               | ε

  117 enumerator_list: enumerator
  118                | enumerator_list COMMA enumerator

  119 enumerator: IDENTIFIER
  120           | IDENTIFIER EQUAL constant_expression

  121 type_qualifier: CONST
  122               | VOLATILE
  123               | RESTRICT

  124 function_specifier: INLINE

  125 declarator: pointer_opt direct_declarator

  126 pointer_opt: pointer
  127            | ε

  128 direct_declarator: IDENTIFIER
  129                  | OPENRB declarator CLOSERB
  130                  | direct_declarator OPENSB type_qualifier_list_opt assignment_expression_opt CLOSESB
  131                  | direct_declarator OPENSB STATIC type_qualifier_list_opt assignment_expression CLOSESB
  132                  | direct_declarator OPENSB type_qualifier_list STATIC assignment_expression CLOSESB
  133                  | direct_declarator OPENSB type_qualifier_list_opt KSTAR CLOSESB
  134                  | direct_declarator OPENRB parameter_type_list CLOSERB
  135                  | direct_declarator OPENRB identifier_list_opt CLOSERB

  136 type_qualifier_list_opt: type_qualifier_list
  137                        | ε

  138 assignment_expression_opt: assignment_expression
  139                          | ε

  140 identifier_list_opt: identifier_list
  141                    | ε

  142 pointer: KSTAR type_qualifier_list_opt
  143        | KSTAR type_qualifier_list_opt pointer

  144 type_qualifier_list: type_qualifier
  145                    | type_qualifier_list type_qualifier

  146 parameter_type_list: parameter_list
  147                    | parameter_list COMMA DOTDOTDOT

  148 parameter_list: parameter_declaration
  149               | parameter_list COMMA parameter_declaration

  150 parameter_declaration: declaration_specifiers declarator
  151                      | declaration_specifiers

  152 identifier_list: IDENTIFIER
  153                | identifier_list COMMA IDENTIFIER

  154 type_name: specifier_qualifier_list

  155 initializer: assignment_expression
  156            | OPENCB initializer_list CLOSECB
  157            | OPENCB initializer_list COMMA CLOSECB

  158 initializer_list: designation_opt initializer
  159                 | initializer_list COMMA designation_opt initializer

  160 designation_opt: designation
  161                | ε

  162 designation: designator_list EQUAL

  163 designator_list: designator
  164                | designator_list designator

  165 designator: OPENSB constant_expression CLOSESB
  166           | DOT IDENTIFIER

  167 statement: labeled_statement
  168          | compound_statement
  169          | expression_statement
  170          | selection_statement
  171          | iteration_statement
  172          | jump_statement

  173 labeled_statement: IDENTIFIER COLON statement
  174                  | CASE constant_expression COLON statement
  175                  | DEFAULT COLON statement

  176 compound_statement: OPENCB CLOSECB
  177                   | OPENCB block_item_list CLOSECB

  178 block_item_list: block_item
  179                | block_item_list block_item

  180 block_item: declaration
  181           | statement

  182 expression_statement: SEMICOLON
  183                     | expression SEMICOLON

  184 selection_statement: IF OPENRB expression CLOSERB statement
  185                    | IF OPENRB expression CLOSERB statement ELSE statement
  186                    | SWITCH OPENRB expression CLOSERB statement

  187 iteration_statement: WHILE OPENRB expression CLOSERB statement
  188                    | DO statement WHILE OPENRB expression CLOSERB SEMICOLON
  189                    | FOR OPENRB expression_opt SEMICOLON expression_opt SEMICOLON expression_opt CLOSERB statement
  190                    | FOR OPENRB declaration expression_opt SEMICOLON expression_opt CLOSERB statement

  191 expression_opt: expression
  192               | ε

  193 jump_statement: GOTO IDENTIFIER SEMICOLON
  194               | CONTINUE SEMICOLON
  195               | BREAK SEMICOLON
  196               | RETURN SEMICOLON
  197               | RETURN expression SEMICOLON

  198 translation_unit: external_declaration
  199                 | translation_unit external_declaration

  200 external_declaration: function_definition
  201                     | declaration

  202 function_definition: declaration_specifiers declarator declaration_list compound_statement
  203                    | declaration_specifiers declarator compound_statement

  204 declaration_list: declaration
  205                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    OTHERS (258)
    AUTO (259) 93
    BREAK (260) 195
    CASE (261) 174
    CHAR (262) 96
    CONST (263) 121
    CONTINUE (264) 194
    DEFAULT (265) 175
    DO (266) 188
    DOUBLE (267) 101
    ELSE (268) 185
    ENUM (269) 112 113 114
    EXTERN (270) 91
    REGISTER (271) 94
    FLOAT (272) 100
    FOR (273) 189 190
    GOTO (274) 193
    IF (275) 184 185
    INLINE (276) 124
    INT (277) 98
    LONG (278) 99
    RESTRICT (279) 123
    RETURN (280) 196 197
    SHORT (281) 97
    SIGNED (282) 102
    SIZEOF (283) 23 24
    STATIC (284) 92 131 132
    STRUCT (285)
    SWITCH (286) 186
    TYPEDEF (287)
    UNION (288)
    UNSIGNED (289) 103
    VOID (290) 95
    VOLATILE (291) 122
    WHILE (292) 187 188
    _BOOL (293) 104
    _COMPLEX (294) 105
    _IMAGINARY (295) 106
    CONSTANT (296)
    IDENTIFIER <stringVal> (297) 1 11 12 114 115 119 120 128 152 153 166 173 193
    STRING_LITERAL <stringVal> (298) 5
    INTEGER_CONSTANT <intVal> (299) 2
    FLOATING_CONSTANT <floatVal> (300) 3
    CHARACTER_CONSTANT <charVal> (301) 4
    OPENSB (302) 8 130 131 132 133 165
    CLOSESB (303) 8 130 131 132 133 165
    OPENRB (304) 6 9 10 15 16 24 32 129 134 135 184 185 186 187 188 189 190
    CLOSERB (305) 6 9 10 15 16 24 32 129 134 135 184 185 186 187 188 189 190
    OPENCB (306) 15 16 112 113 156 157 176 177
    CLOSECB (307) 15 16 112 113 156 157 176 177
    DOT (308) 11 166
    RIGHTARROW (309) 12
    PLUSPLUS (310) 13 20
    MINUSMINS (311) 14 21
    BAND (312) 25 52
    KSTAR (313) 26 34 133 142 143
    PLUS (314) 27 38
    MINUS (315) 28 39
    TILDA (316) 29
    NOT (317) 30
    DIVIDE (318) 35
    MODULO (319) 36
    LEFTS (320) 41
    RIGHTS (321) 42
    LESSTHAN (322) 44
    GREATERTHAN (323) 45
    LESSEQUAL (324) 46
    GREATEREQUAL (325) 47
    EQUALEQUAL (326) 49
    NOTEQUAL (327) 50
    XOR (328) 54
    BITWISEOR (329) 56
    AND (330) 58
    OR (331) 60
    QUESTIONMARK (332) 62
    COLON (333) 62 173 174 175
    SEMICOLON (334) 79 80 182 183 188 189 190 193 194 195 196 197
    DOTDOTDOT (335) 147
    EQUAL (336) 65 90 120 162
    MULEQUAL (337) 66
    DIVEQUAL (338) 67
    MODEQUAL (339) 68
    PLUSEQUAL (340) 69
    MINUSEQUAL (341) 70
    SHIFTLEQUAL (342) 71
    SHIFTREQUAL (343) 72
    ANDEQUAL (344) 73
    XOREQUAL (345) 74
    OREQUAL (346) 75
    COMMA (347) 16 18 77 88 113 118 147 149 153 157 159
    HASH (348)


Nonterminals, with rules where they appear

    $accept (94)
        on left: 0
    primary_expression (95)
        on left: 1 2 3 4 5 6
        on right: 7
    postfix_expression (96)
        on left: 7 8 9 10 11 12 13 14 15 16
        on right: 8 9 10 11 12 13 14 19
    argument_expression_list (97)
        on left: 17 18
        on right: 9 18
    unary_expression (98)
        on left: 19 20 21 22 23 24
        on right: 20 21 23 31 64
    unary_operator (99)
        on left: 25 26 27 28 29 30
        on right: 22
    cast_expression (100)
        on left: 31 32
        on right: 22 32 33 34 35 36
    multiplicative_expression (101)
        on left: 33 34 35 36
        on right: 34 35 36 37 38 39
    additive_expression (102)
        on left: 37 38 39
        on right: 38 39 40 41 42
    shift_expression (103)
        on left: 40 41 42
        on right: 41 42 43 44 45 46 47
    relational_expression (104)
        on left: 43 44 45 46 47
        on right: 44 45 46 47 48 49 50
    equality_expression (105)
        on left: 48 49 50
        on right: 49 50 51 52
    and_expression (106)
        on left: 51 52
        on right: 52 53 54
    exclusive_or_expression (107)
        on left: 53 54
        on right: 54 55 56
    inclusive_or_expression (108)
        on left: 55 56
        on right: 56 57 58
    logical_and_expression (109)
        on left: 57 58
        on right: 58 59 60
    logical_or_expression (110)
        on left: 59 60
        on right: 60 61 62
    conditional_expression (111)
        on left: 61 62
        on right: 62 63 78
    assignment_expression (112)
        on left: 63 64
        on right: 17 18 64 76 77 131 132 138 155
    assignment_operator (113)
        on left: 65 66 67 68 69 70 71 72 73 74 75
        on right: 64
    expression (114)
        on left: 76 77
        on right: 6 8 62 77 183 184 185 186 187 188 191 197
    constant_expression (115)
        on left: 78
        on right: 120 165 174
    declaration (116)
        on left: 79 80
        on right: 180 190 201 204 205
    declaration_specifiers (117)
        on left: 81 82 83 84
        on right: 79 80 85 150 151 202 203
    declaration_specifiers_opt (118)
        on left: 85 86
        on right: 81 82 83 84
    init_declarator_list (119)
        on left: 87 88
        on right: 79 88
    init_declarator (120)
        on left: 89 90
        on right: 87 88
    storage_class_specifier (121)
        on left: 91 92 93 94
        on right: 81
    type_specifier (122)
        on left: 95 96 97 98 99 100 101 102 103 104 105 106 107
        on right: 82 108
    specifier_qualifier_list (123)
        on left: 108 109
        on right: 110 154
    specifier_qualifier_list_opt (124)
        on left: 110 111
        on right: 108 109
    enum_specifier (125)
        on left: 112 113 114
        on right: 107
    identifier_opt (126)
        on left: 115 116
        on right: 112 113
    enumerator_list (127)
        on left: 117 118
        on right: 112 113 118
    enumerator (128)
        on left: 119 120
        on right: 117 118
    type_qualifier (129)
        on left: 121 122 123
        on right: 83 109 144 145
    function_specifier (130)
        on left: 124
        on right: 84
    declarator (131)
        on left: 125
        on right: 89 90 129 150 202 203
    pointer_opt (132)
        on left: 126 127
        on right: 125
    direct_declarator (133)
        on left: 128 129 130 131 132 133 134 135
        on right: 125 130 131 132 133 134 135
    type_qualifier_list_opt (134)
        on left: 136 137
        on right: 130 131 133 142 143
    assignment_expression_opt (135)
        on left: 138 139
        on right: 130
    identifier_list_opt (136)
        on left: 140 141
        on right: 135
    pointer (137)
        on left: 142 143
        on right: 126 143
    type_qualifier_list (138)
        on left: 144 145
        on right: 132 136 145
    parameter_type_list (139)
        on left: 146 147
        on right: 134
    parameter_list (140)
        on left: 148 149
        on right: 146 147 149
    parameter_declaration (141)
        on left: 150 151
        on right: 148 149
    identifier_list (142)
        on left: 152 153
        on right: 140 153
    type_name (143)
        on left: 154
        on right: 15 16 24 32
    initializer (144)
        on left: 155 156 157
        on right: 90 158 159
    initializer_list (145)
        on left: 158 159
        on right: 15 16 156 157 159
    designation_opt (146)
        on left: 160 161
        on right: 158 159
    designation (147)
        on left: 162
        on right: 160
    designator_list (148)
        on left: 163 164
        on right: 162 164
    designator (149)
        on left: 165 166
        on right: 163 164
    statement (150)
        on left: 167 168 169 170 171 172
        on right: 173 174 175 181 184 185 186 187 188 189 190
    labeled_statement (151)
        on left: 173 174 175
        on right: 167
    compound_statement (152)
        on left: 176 177
        on right: 168 202 203
    block_item_list (153)
        on left: 178 179
        on right: 177 179
    block_item (154)
        on left: 180 181
        on right: 178 179
    expression_statement (155)
        on left: 182 183
        on right: 169
    selection_statement (156)
        on left: 184 185 186
        on right: 170
    iteration_statement (157)
        on left: 187 188 189 190
        on right: 171
    expression_opt (158)
        on left: 191 192
        on right: 189 190
    jump_statement (159)
        on left: 193 194 195 196 197
        on right: 172
    translation_unit (160)
        on left: 198 199
        on right: 0 199
    external_declaration (161)
        on left: 200 201
        on right: 198 199
    function_definition (162)
        on left: 202 203
        on right: 200
    declaration_list (163)
        on left: 204 205
        on right: 202 205


State 0

    0 $accept: • translation_unit $end

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

   93 storage_class_specifier: AUTO •

    $default  reduce using rule 93 (storage_class_specifier)


State 2

   96 type_specifier: CHAR •

    $default  reduce using rule 96 (type_specifier)


State 3

  121 type_qualifier: CONST •

    $default  reduce using rule 121 (type_qualifier)


State 4

  101 type_specifier: DOUBLE •

    $default  reduce using rule 101 (type_specifier)


State 5

  112 enum_specifier: ENUM • identifier_opt OPENCB enumerator_list CLOSECB
  113               | ENUM • identifier_opt OPENCB enumerator_list COMMA CLOSECB
  114               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 116 (identifier_opt)

    identifier_opt  go to state 33


State 6

   91 storage_class_specifier: EXTERN •

    $default  reduce using rule 91 (storage_class_specifier)


State 7

   94 storage_class_specifier: REGISTER •

    $default  reduce using rule 94 (storage_class_specifier)


State 8

  100 type_specifier: FLOAT •

    $default  reduce using rule 100 (type_specifier)


State 9

  124 function_specifier: INLINE •

    $default  reduce using rule 124 (function_specifier)


State 10

   98 type_specifier: INT •

    $default  reduce using rule 98 (type_specifier)


State 11

   99 type_specifier: LONG •

    $default  reduce using rule 99 (type_specifier)


State 12

  123 type_qualifier: RESTRICT •

    $default  reduce using rule 123 (type_qualifier)


State 13

   97 type_specifier: SHORT •

    $default  reduce using rule 97 (type_specifier)


State 14

  102 type_specifier: SIGNED •

    $default  reduce using rule 102 (type_specifier)


State 15

   92 storage_class_specifier: STATIC •

    $default  reduce using rule 92 (storage_class_specifier)


State 16

  103 type_specifier: UNSIGNED •

    $default  reduce using rule 103 (type_specifier)


State 17

   95 type_specifier: VOID •

    $default  reduce using rule 95 (type_specifier)


State 18

  122 type_qualifier: VOLATILE •

    $default  reduce using rule 122 (type_qualifier)


State 19

  104 type_specifier: _BOOL •

    $default  reduce using rule 104 (type_specifier)


State 20

  105 type_specifier: _COMPLEX •

    $default  reduce using rule 105 (type_specifier)


State 21

  106 type_specifier: _IMAGINARY •

    $default  reduce using rule 106 (type_specifier)


State 22

  201 external_declaration: declaration •

    $default  reduce using rule 201 (external_declaration)


State 23

   79 declaration: declaration_specifiers • init_declarator_list SEMICOLON
   80            | declaration_specifiers • SEMICOLON
  202 function_definition: declaration_specifiers • declarator declaration_list compound_statement
  203                    | declaration_specifiers • declarator compound_statement

    KSTAR      shift, and go to state 34
    SEMICOLON  shift, and go to state 35

    $default  reduce using rule 127 (pointer_opt)

    init_declarator_list  go to state 36
    init_declarator       go to state 37
    declarator            go to state 38
    pointer_opt           go to state 39
    pointer               go to state 40


State 24

   81 declaration_specifiers: storage_class_specifier • declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 42
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 25

   82 declaration_specifiers: type_specifier • declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 43
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 26

  107 type_specifier: enum_specifier •

    $default  reduce using rule 107 (type_specifier)


State 27

   83 declaration_specifiers: type_qualifier • declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 28

   84 declaration_specifiers: function_specifier • declaration_specifiers_opt

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 86 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 29

    0 $accept: translation_unit • $end
  199 translation_unit: translation_unit • external_declaration

    $end        shift, and go to state 46
    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 47
    function_definition      go to state 31


State 30

  198 translation_unit: external_declaration •

    $default  reduce using rule 198 (translation_unit)


State 31

  200 external_declaration: function_definition •

    $default  reduce using rule 200 (external_declaration)


State 32

  114 enum_specifier: ENUM IDENTIFIER •
  115 identifier_opt: IDENTIFIER •

    OPENCB    reduce using rule 115 (identifier_opt)
    $default  reduce using rule 114 (enum_specifier)


State 33

  112 enum_specifier: ENUM identifier_opt • OPENCB enumerator_list CLOSECB
  113               | ENUM identifier_opt • OPENCB enumerator_list COMMA CLOSECB

    OPENCB  shift, and go to state 48


State 34

  142 pointer: KSTAR • type_qualifier_list_opt
  143        | KSTAR • type_qualifier_list_opt pointer

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 137 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 50
    type_qualifier_list      go to state 51


State 35

   80 declaration: declaration_specifiers SEMICOLON •

    $default  reduce using rule 80 (declaration)


State 36

   79 declaration: declaration_specifiers init_declarator_list • SEMICOLON
   88 init_declarator_list: init_declarator_list • COMMA init_declarator

    SEMICOLON  shift, and go to state 52
    COMMA      shift, and go to state 53


State 37

   87 init_declarator_list: init_declarator •

    $default  reduce using rule 87 (init_declarator_list)


State 38

   89 init_declarator: declarator •
   90                | declarator • EQUAL initializer
  202 function_definition: declaration_specifiers declarator • declaration_list compound_statement
  203                    | declaration_specifiers declarator • compound_statement

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    OPENCB      shift, and go to state 54
    EQUAL       shift, and go to state 55

    $default  reduce using rule 89 (init_declarator)

    declaration              go to state 56
    declaration_specifiers   go to state 57
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    compound_statement       go to state 58
    declaration_list         go to state 59


State 39

  125 declarator: pointer_opt • direct_declarator

    IDENTIFIER  shift, and go to state 60
    OPENRB      shift, and go to state 61

    direct_declarator  go to state 62


State 40

  126 pointer_opt: pointer •

    $default  reduce using rule 126 (pointer_opt)


State 41

   85 declaration_specifiers_opt: declaration_specifiers •

    $default  reduce using rule 85 (declaration_specifiers_opt)


State 42

   81 declaration_specifiers: storage_class_specifier declaration_specifiers_opt •

    $default  reduce using rule 81 (declaration_specifiers)


State 43

   82 declaration_specifiers: type_specifier declaration_specifiers_opt •

    $default  reduce using rule 82 (declaration_specifiers)


State 44

   83 declaration_specifiers: type_qualifier declaration_specifiers_opt •

    $default  reduce using rule 83 (declaration_specifiers)


State 45

   84 declaration_specifiers: function_specifier declaration_specifiers_opt •

    $default  reduce using rule 84 (declaration_specifiers)


State 46

    0 $accept: translation_unit $end •

    $default  accept


State 47

  199 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 199 (translation_unit)


State 48

  112 enum_specifier: ENUM identifier_opt OPENCB • enumerator_list CLOSECB
  113               | ENUM identifier_opt OPENCB • enumerator_list COMMA CLOSECB

    IDENTIFIER  shift, and go to state 63

    enumerator_list  go to state 64
    enumerator       go to state 65


State 49

  144 type_qualifier_list: type_qualifier •

    $default  reduce using rule 144 (type_qualifier_list)


State 50

  142 pointer: KSTAR type_qualifier_list_opt •
  143        | KSTAR type_qualifier_list_opt • pointer

    KSTAR  shift, and go to state 34

    $default  reduce using rule 142 (pointer)

    pointer  go to state 66


State 51

  136 type_qualifier_list_opt: type_qualifier_list •
  145 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 136 (type_qualifier_list_opt)

    type_qualifier  go to state 67


State 52

   79 declaration: declaration_specifiers init_declarator_list SEMICOLON •

    $default  reduce using rule 79 (declaration)


State 53

   88 init_declarator_list: init_declarator_list COMMA • init_declarator

    KSTAR  shift, and go to state 34

    $default  reduce using rule 127 (pointer_opt)

    init_declarator  go to state 68
    declarator       go to state 69
    pointer_opt      go to state 39
    pointer          go to state 40


State 54

  176 compound_statement: OPENCB • CLOSECB
  177                   | OPENCB • block_item_list CLOSECB

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    REGISTER            shift, and go to state 7
    FLOAT               shift, and go to state 8
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    INLINE              shift, and go to state 9
    INT                 shift, and go to state 10
    LONG                shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 78
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 79
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 80
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 81
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    CLOSECB             shift, and go to state 88
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    declaration                go to state 116
    declaration_specifiers     go to state 57
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 117
    labeled_statement          go to state 118
    compound_statement         go to state 119
    block_item_list            go to state 120
    block_item                 go to state 121
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 55

   90 init_declarator: declarator EQUAL • initializer

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 127
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 128
    initializer                go to state 129


State 56

  204 declaration_list: declaration •

    $default  reduce using rule 204 (declaration_list)


State 57

   79 declaration: declaration_specifiers • init_declarator_list SEMICOLON
   80            | declaration_specifiers • SEMICOLON

    KSTAR      shift, and go to state 34
    SEMICOLON  shift, and go to state 35

    $default  reduce using rule 127 (pointer_opt)

    init_declarator_list  go to state 36
    init_declarator       go to state 37
    declarator            go to state 69
    pointer_opt           go to state 39
    pointer               go to state 40


State 58

  203 function_definition: declaration_specifiers declarator compound_statement •

    $default  reduce using rule 203 (function_definition)


State 59

  202 function_definition: declaration_specifiers declarator declaration_list • compound_statement
  205 declaration_list: declaration_list • declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    OPENCB      shift, and go to state 54

    declaration              go to state 130
    declaration_specifiers   go to state 57
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    compound_statement       go to state 131


State 60

  128 direct_declarator: IDENTIFIER •

    $default  reduce using rule 128 (direct_declarator)


State 61

  129 direct_declarator: OPENRB • declarator CLOSERB

    KSTAR  shift, and go to state 34

    $default  reduce using rule 127 (pointer_opt)

    declarator   go to state 132
    pointer_opt  go to state 39
    pointer      go to state 40


State 62

  125 declarator: pointer_opt direct_declarator •
  130 direct_declarator: direct_declarator • OPENSB type_qualifier_list_opt assignment_expression_opt CLOSESB
  131                  | direct_declarator • OPENSB STATIC type_qualifier_list_opt assignment_expression CLOSESB
  132                  | direct_declarator • OPENSB type_qualifier_list STATIC assignment_expression CLOSESB
  133                  | direct_declarator • OPENSB type_qualifier_list_opt KSTAR CLOSESB
  134                  | direct_declarator • OPENRB parameter_type_list CLOSERB
  135                  | direct_declarator • OPENRB identifier_list_opt CLOSERB

    OPENSB  shift, and go to state 133
    OPENRB  shift, and go to state 134

    $default  reduce using rule 125 (declarator)


State 63

  119 enumerator: IDENTIFIER •
  120           | IDENTIFIER • EQUAL constant_expression

    EQUAL  shift, and go to state 135

    $default  reduce using rule 119 (enumerator)


State 64

  112 enum_specifier: ENUM identifier_opt OPENCB enumerator_list • CLOSECB
  113               | ENUM identifier_opt OPENCB enumerator_list • COMMA CLOSECB
  118 enumerator_list: enumerator_list • COMMA enumerator

    CLOSECB  shift, and go to state 136
    COMMA    shift, and go to state 137


State 65

  117 enumerator_list: enumerator •

    $default  reduce using rule 117 (enumerator_list)


State 66

  143 pointer: KSTAR type_qualifier_list_opt pointer •

    $default  reduce using rule 143 (pointer)


State 67

  145 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 145 (type_qualifier_list)


State 68

   88 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 88 (init_declarator_list)


State 69

   89 init_declarator: declarator •
   90                | declarator • EQUAL initializer

    EQUAL  shift, and go to state 55

    $default  reduce using rule 89 (init_declarator)


State 70

  195 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 138


State 71

  174 labeled_statement: CASE • constant_expression COLON statement

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 140
    constant_expression        go to state 141


State 72

  194 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 142


State 73

  175 labeled_statement: DEFAULT • COLON statement

    COLON  shift, and go to state 143


State 74

  188 iteration_statement: DO • statement WHILE OPENRB expression CLOSERB SEMICOLON

    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    RETURN              shift, and go to state 78
    SIZEOF              shift, and go to state 79
    SWITCH              shift, and go to state 80
    WHILE               shift, and go to state 81
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    statement                  go to state 144
    labeled_statement          go to state 118
    compound_statement         go to state 119
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 75

  189 iteration_statement: FOR • OPENRB expression_opt SEMICOLON expression_opt SEMICOLON expression_opt CLOSERB statement
  190                    | FOR • OPENRB declaration expression_opt SEMICOLON expression_opt CLOSERB statement

    OPENRB  shift, and go to state 145


State 76

  193 jump_statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 146


State 77

  184 selection_statement: IF • OPENRB expression CLOSERB statement
  185                    | IF • OPENRB expression CLOSERB statement ELSE statement

    OPENRB  shift, and go to state 147


State 78

  196 jump_statement: RETURN • SEMICOLON
  197               | RETURN • expression SEMICOLON

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 148

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 149


State 79

   23 unary_expression: SIZEOF • unary_expression
   24                 | SIZEOF • OPENRB type_name CLOSERB

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 150
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression  go to state 98
    postfix_expression  go to state 99
    unary_expression    go to state 151
    unary_operator      go to state 101


State 80

  186 selection_statement: SWITCH • OPENRB expression CLOSERB statement

    OPENRB  shift, and go to state 152


State 81

  187 iteration_statement: WHILE • OPENRB expression CLOSERB statement

    OPENRB  shift, and go to state 153


State 82

    1 primary_expression: IDENTIFIER •
  173 labeled_statement: IDENTIFIER • COLON statement

    COLON  shift, and go to state 154

    $default  reduce using rule 1 (primary_expression)


State 83

    5 primary_expression: STRING_LITERAL •

    $default  reduce using rule 5 (primary_expression)


State 84

    2 primary_expression: INTEGER_CONSTANT •

    $default  reduce using rule 2 (primary_expression)


State 85

    3 primary_expression: FLOATING_CONSTANT •

    $default  reduce using rule 3 (primary_expression)


State 86

    4 primary_expression: CHARACTER_CONSTANT •

    $default  reduce using rule 4 (primary_expression)


State 87

    6 primary_expression: OPENRB • expression CLOSERB
   15 postfix_expression: OPENRB • type_name CLOSERB OPENCB initializer_list CLOSECB
   16                   | OPENRB • type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   32 cast_expression: OPENRB • type_name CLOSERB cast_expression

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 8
    INT                 shift, and go to state 10
    LONG                shift, and go to state 11
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 79
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 155
    type_specifier             go to state 156
    specifier_qualifier_list   go to state 157
    enum_specifier             go to state 26
    type_qualifier             go to state 158
    type_name                  go to state 159


State 88

  176 compound_statement: OPENCB CLOSECB •

    $default  reduce using rule 176 (compound_statement)


State 89

   20 unary_expression: PLUSPLUS • unary_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 160
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression  go to state 98
    postfix_expression  go to state 99
    unary_expression    go to state 161
    unary_operator      go to state 101


State 90

   21 unary_expression: MINUSMINS • unary_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 160
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression  go to state 98
    postfix_expression  go to state 99
    unary_expression    go to state 162
    unary_operator      go to state 101


State 91

   25 unary_operator: BAND •

    $default  reduce using rule 25 (unary_operator)


State 92

   26 unary_operator: KSTAR •

    $default  reduce using rule 26 (unary_operator)


State 93

   27 unary_operator: PLUS •

    $default  reduce using rule 27 (unary_operator)


State 94

   28 unary_operator: MINUS •

    $default  reduce using rule 28 (unary_operator)


State 95

   29 unary_operator: TILDA •

    $default  reduce using rule 29 (unary_operator)


State 96

   30 unary_operator: NOT •

    $default  reduce using rule 30 (unary_operator)


State 97

  182 expression_statement: SEMICOLON •

    $default  reduce using rule 182 (expression_statement)


State 98

    7 postfix_expression: primary_expression •

    $default  reduce using rule 7 (postfix_expression)


State 99

    8 postfix_expression: postfix_expression • OPENSB expression CLOSESB
    9                   | postfix_expression • OPENRB argument_expression_list CLOSERB
   10                   | postfix_expression • OPENRB CLOSERB
   11                   | postfix_expression • DOT IDENTIFIER
   12                   | postfix_expression • RIGHTARROW IDENTIFIER
   13                   | postfix_expression • PLUSPLUS
   14                   | postfix_expression • MINUSMINS
   19 unary_expression: postfix_expression •

    OPENSB      shift, and go to state 163
    OPENRB      shift, and go to state 164
    DOT         shift, and go to state 165
    RIGHTARROW  shift, and go to state 166
    PLUSPLUS    shift, and go to state 167
    MINUSMINS   shift, and go to state 168

    $default  reduce using rule 19 (unary_expression)


State 100

   31 cast_expression: unary_expression •
   64 assignment_expression: unary_expression • assignment_operator assignment_expression

    EQUAL        shift, and go to state 169
    MULEQUAL     shift, and go to state 170
    DIVEQUAL     shift, and go to state 171
    MODEQUAL     shift, and go to state 172
    PLUSEQUAL    shift, and go to state 173
    MINUSEQUAL   shift, and go to state 174
    SHIFTLEQUAL  shift, and go to state 175
    SHIFTREQUAL  shift, and go to state 176
    ANDEQUAL     shift, and go to state 177
    XOREQUAL     shift, and go to state 178
    OREQUAL      shift, and go to state 179

    $default  reduce using rule 31 (cast_expression)

    assignment_operator  go to state 180


State 101

   22 unary_expression: unary_operator • cast_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression  go to state 98
    postfix_expression  go to state 99
    unary_expression    go to state 139
    unary_operator      go to state 101
    cast_expression     go to state 181


State 102

   33 multiplicative_expression: cast_expression •

    $default  reduce using rule 33 (multiplicative_expression)


State 103

   34 multiplicative_expression: multiplicative_expression • KSTAR cast_expression
   35                          | multiplicative_expression • DIVIDE cast_expression
   36                          | multiplicative_expression • MODULO cast_expression
   37 additive_expression: multiplicative_expression •

    KSTAR   shift, and go to state 182
    DIVIDE  shift, and go to state 183
    MODULO  shift, and go to state 184

    $default  reduce using rule 37 (additive_expression)


State 104

   38 additive_expression: additive_expression • PLUS multiplicative_expression
   39                    | additive_expression • MINUS multiplicative_expression
   40 shift_expression: additive_expression •

    PLUS   shift, and go to state 185
    MINUS  shift, and go to state 186

    $default  reduce using rule 40 (shift_expression)


State 105

   41 shift_expression: shift_expression • LEFTS additive_expression
   42                 | shift_expression • RIGHTS additive_expression
   43 relational_expression: shift_expression •

    LEFTS   shift, and go to state 187
    RIGHTS  shift, and go to state 188

    $default  reduce using rule 43 (relational_expression)


State 106

   44 relational_expression: relational_expression • LESSTHAN shift_expression
   45                      | relational_expression • GREATERTHAN shift_expression
   46                      | relational_expression • LESSEQUAL shift_expression
   47                      | relational_expression • GREATEREQUAL shift_expression
   48 equality_expression: relational_expression •

    LESSTHAN      shift, and go to state 189
    GREATERTHAN   shift, and go to state 190
    LESSEQUAL     shift, and go to state 191
    GREATEREQUAL  shift, and go to state 192

    $default  reduce using rule 48 (equality_expression)


State 107

   49 equality_expression: equality_expression • EQUALEQUAL relational_expression
   50                    | equality_expression • NOTEQUAL relational_expression
   51 and_expression: equality_expression •

    EQUALEQUAL  shift, and go to state 193
    NOTEQUAL    shift, and go to state 194

    $default  reduce using rule 51 (and_expression)


State 108

   52 and_expression: and_expression • BAND equality_expression
   53 exclusive_or_expression: and_expression •

    BAND  shift, and go to state 195

    $default  reduce using rule 53 (exclusive_or_expression)


State 109

   54 exclusive_or_expression: exclusive_or_expression • XOR and_expression
   55 inclusive_or_expression: exclusive_or_expression •

    XOR  shift, and go to state 196

    $default  reduce using rule 55 (inclusive_or_expression)


State 110

   56 inclusive_or_expression: inclusive_or_expression • BITWISEOR exclusive_or_expression
   57 logical_and_expression: inclusive_or_expression •

    BITWISEOR  shift, and go to state 197

    $default  reduce using rule 57 (logical_and_expression)


State 111

   58 logical_and_expression: logical_and_expression • AND inclusive_or_expression
   59 logical_or_expression: logical_and_expression •

    AND  shift, and go to state 198

    $default  reduce using rule 59 (logical_or_expression)


State 112

   60 logical_or_expression: logical_or_expression • OR logical_and_expression
   61 conditional_expression: logical_or_expression •
   62                       | logical_or_expression • QUESTIONMARK expression COLON conditional_expression

    OR            shift, and go to state 199
    QUESTIONMARK  shift, and go to state 200

    $default  reduce using rule 61 (conditional_expression)


State 113

   63 assignment_expression: conditional_expression •

    $default  reduce using rule 63 (assignment_expression)


State 114

   76 expression: assignment_expression •

    $default  reduce using rule 76 (expression)


State 115

   77 expression: expression • COMMA assignment_expression
  183 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 201
    COMMA      shift, and go to state 202


State 116

  180 block_item: declaration •

    $default  reduce using rule 180 (block_item)


State 117

  181 block_item: statement •

    $default  reduce using rule 181 (block_item)


State 118

  167 statement: labeled_statement •

    $default  reduce using rule 167 (statement)


State 119

  168 statement: compound_statement •

    $default  reduce using rule 168 (statement)


State 120

  177 compound_statement: OPENCB block_item_list • CLOSECB
  179 block_item_list: block_item_list • block_item

    AUTO                shift, and go to state 1
    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    REGISTER            shift, and go to state 7
    FLOAT               shift, and go to state 8
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    INLINE              shift, and go to state 9
    INT                 shift, and go to state 10
    LONG                shift, and go to state 11
    RESTRICT            shift, and go to state 12
    RETURN              shift, and go to state 78
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 79
    STATIC              shift, and go to state 15
    SWITCH              shift, and go to state 80
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    WHILE               shift, and go to state 81
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    CLOSECB             shift, and go to state 203
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    declaration                go to state 116
    declaration_specifiers     go to state 57
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 117
    labeled_statement          go to state 118
    compound_statement         go to state 119
    block_item                 go to state 204
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 121

  178 block_item_list: block_item •

    $default  reduce using rule 178 (block_item_list)


State 122

  169 statement: expression_statement •

    $default  reduce using rule 169 (statement)


State 123

  170 statement: selection_statement •

    $default  reduce using rule 170 (statement)


State 124

  171 statement: iteration_statement •

    $default  reduce using rule 171 (statement)


State 125

  172 statement: jump_statement •

    $default  reduce using rule 172 (statement)


State 126

    1 primary_expression: IDENTIFIER •

    $default  reduce using rule 1 (primary_expression)


State 127

  156 initializer: OPENCB • initializer_list CLOSECB
  157            | OPENCB • initializer_list COMMA CLOSECB

    OPENSB  shift, and go to state 205
    DOT     shift, and go to state 206

    $default  reduce using rule 161 (designation_opt)

    initializer_list  go to state 207
    designation_opt   go to state 208
    designation       go to state 209
    designator_list   go to state 210
    designator        go to state 211


State 128

  155 initializer: assignment_expression •

    $default  reduce using rule 155 (initializer)


State 129

   90 init_declarator: declarator EQUAL initializer •

    $default  reduce using rule 90 (init_declarator)


State 130

  205 declaration_list: declaration_list declaration •

    $default  reduce using rule 205 (declaration_list)


State 131

  202 function_definition: declaration_specifiers declarator declaration_list compound_statement •

    $default  reduce using rule 202 (function_definition)


State 132

  129 direct_declarator: OPENRB declarator • CLOSERB

    CLOSERB  shift, and go to state 212


State 133

  130 direct_declarator: direct_declarator OPENSB • type_qualifier_list_opt assignment_expression_opt CLOSESB
  131                  | direct_declarator OPENSB • STATIC type_qualifier_list_opt assignment_expression CLOSESB
  132                  | direct_declarator OPENSB • type_qualifier_list STATIC assignment_expression CLOSESB
  133                  | direct_declarator OPENSB • type_qualifier_list_opt KSTAR CLOSESB

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 213
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 137 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 214
    type_qualifier_list      go to state 215


State 134

  134 direct_declarator: direct_declarator OPENRB • parameter_type_list CLOSERB
  135                  | direct_declarator OPENRB • identifier_list_opt CLOSERB

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    IDENTIFIER  shift, and go to state 216

    $default  reduce using rule 141 (identifier_list_opt)

    declaration_specifiers   go to state 217
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    identifier_list_opt      go to state 218
    parameter_type_list      go to state 219
    parameter_list           go to state 220
    parameter_declaration    go to state 221
    identifier_list          go to state 222


State 135

  120 enumerator: IDENTIFIER EQUAL • constant_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 140
    constant_expression        go to state 223


State 136

  112 enum_specifier: ENUM identifier_opt OPENCB enumerator_list CLOSECB •

    $default  reduce using rule 112 (enum_specifier)


State 137

  113 enum_specifier: ENUM identifier_opt OPENCB enumerator_list COMMA • CLOSECB
  118 enumerator_list: enumerator_list COMMA • enumerator

    IDENTIFIER  shift, and go to state 63
    CLOSECB     shift, and go to state 224

    enumerator  go to state 225


State 138

  195 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 195 (jump_statement)


State 139

   31 cast_expression: unary_expression •

    $default  reduce using rule 31 (cast_expression)


State 140

   78 constant_expression: conditional_expression •

    $default  reduce using rule 78 (constant_expression)


State 141

  174 labeled_statement: CASE constant_expression • COLON statement

    COLON  shift, and go to state 226


State 142

  194 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 194 (jump_statement)


State 143

  175 labeled_statement: DEFAULT COLON • statement

    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    RETURN              shift, and go to state 78
    SIZEOF              shift, and go to state 79
    SWITCH              shift, and go to state 80
    WHILE               shift, and go to state 81
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    statement                  go to state 227
    labeled_statement          go to state 118
    compound_statement         go to state 119
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 144

  188 iteration_statement: DO statement • WHILE OPENRB expression CLOSERB SEMICOLON

    WHILE  shift, and go to state 228


State 145

  189 iteration_statement: FOR OPENRB • expression_opt SEMICOLON expression_opt SEMICOLON expression_opt CLOSERB statement
  190                    | FOR OPENRB • declaration expression_opt SEMICOLON expression_opt CLOSERB statement

    AUTO                shift, and go to state 1
    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    EXTERN              shift, and go to state 6
    REGISTER            shift, and go to state 7
    FLOAT               shift, and go to state 8
    INLINE              shift, and go to state 9
    INT                 shift, and go to state 10
    LONG                shift, and go to state 11
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 79
    STATIC              shift, and go to state 15
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    $default  reduce using rule 192 (expression_opt)

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 229
    declaration                go to state 230
    declaration_specifiers     go to state 57
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_opt             go to state 231


State 146

  193 jump_statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 232


State 147

  184 selection_statement: IF OPENRB • expression CLOSERB statement
  185                    | IF OPENRB • expression CLOSERB statement ELSE statement

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 233


State 148

  196 jump_statement: RETURN SEMICOLON •

    $default  reduce using rule 196 (jump_statement)


State 149

   77 expression: expression • COMMA assignment_expression
  197 jump_statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 234
    COMMA      shift, and go to state 202


State 150

    6 primary_expression: OPENRB • expression CLOSERB
   15 postfix_expression: OPENRB • type_name CLOSERB OPENCB initializer_list CLOSECB
   16                   | OPENRB • type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   24 unary_expression: SIZEOF OPENRB • type_name CLOSERB

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 8
    INT                 shift, and go to state 10
    LONG                shift, and go to state 11
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 79
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 155
    type_specifier             go to state 156
    specifier_qualifier_list   go to state 157
    enum_specifier             go to state 26
    type_qualifier             go to state 158
    type_name                  go to state 235


State 151

   23 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 23 (unary_expression)


State 152

  186 selection_statement: SWITCH OPENRB • expression CLOSERB statement

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 236


State 153

  187 iteration_statement: WHILE OPENRB • expression CLOSERB statement

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 237


State 154

  173 labeled_statement: IDENTIFIER COLON • statement

    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    RETURN              shift, and go to state 78
    SIZEOF              shift, and go to state 79
    SWITCH              shift, and go to state 80
    WHILE               shift, and go to state 81
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    statement                  go to state 238
    labeled_statement          go to state 118
    compound_statement         go to state 119
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 155

    6 primary_expression: OPENRB expression • CLOSERB
   77 expression: expression • COMMA assignment_expression

    CLOSERB  shift, and go to state 239
    COMMA    shift, and go to state 202


State 156

  108 specifier_qualifier_list: type_specifier • specifier_qualifier_list_opt

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 111 (specifier_qualifier_list_opt)

    type_specifier                go to state 156
    specifier_qualifier_list      go to state 240
    specifier_qualifier_list_opt  go to state 241
    enum_specifier                go to state 26
    type_qualifier                go to state 158


State 157

  154 type_name: specifier_qualifier_list •

    $default  reduce using rule 154 (type_name)


State 158

  109 specifier_qualifier_list: type_qualifier • specifier_qualifier_list_opt

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21

    $default  reduce using rule 111 (specifier_qualifier_list_opt)

    type_specifier                go to state 156
    specifier_qualifier_list      go to state 240
    specifier_qualifier_list_opt  go to state 242
    enum_specifier                go to state 26
    type_qualifier                go to state 158


State 159

   15 postfix_expression: OPENRB type_name • CLOSERB OPENCB initializer_list CLOSECB
   16                   | OPENRB type_name • CLOSERB OPENCB initializer_list COMMA CLOSECB
   32 cast_expression: OPENRB type_name • CLOSERB cast_expression

    CLOSERB  shift, and go to state 243


State 160

    6 primary_expression: OPENRB • expression CLOSERB
   15 postfix_expression: OPENRB • type_name CLOSERB OPENCB initializer_list CLOSECB
   16                   | OPENRB • type_name CLOSERB OPENCB initializer_list COMMA CLOSECB

    CHAR                shift, and go to state 2
    CONST               shift, and go to state 3
    DOUBLE              shift, and go to state 4
    ENUM                shift, and go to state 5
    FLOAT               shift, and go to state 8
    INT                 shift, and go to state 10
    LONG                shift, and go to state 11
    RESTRICT            shift, and go to state 12
    SHORT               shift, and go to state 13
    SIGNED              shift, and go to state 14
    SIZEOF              shift, and go to state 79
    UNSIGNED            shift, and go to state 16
    VOID                shift, and go to state 17
    VOLATILE            shift, and go to state 18
    _BOOL               shift, and go to state 19
    _COMPLEX            shift, and go to state 20
    _IMAGINARY          shift, and go to state 21
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 155
    type_specifier             go to state 156
    specifier_qualifier_list   go to state 157
    enum_specifier             go to state 26
    type_qualifier             go to state 158
    type_name                  go to state 244


State 161

   20 unary_expression: PLUSPLUS unary_expression •

    $default  reduce using rule 20 (unary_expression)


State 162

   21 unary_expression: MINUSMINS unary_expression •

    $default  reduce using rule 21 (unary_expression)


State 163

    8 postfix_expression: postfix_expression OPENSB • expression CLOSESB

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 245


State 164

    9 postfix_expression: postfix_expression OPENRB • argument_expression_list CLOSERB
   10                   | postfix_expression OPENRB • CLOSERB

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    CLOSERB             shift, and go to state 246
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    argument_expression_list   go to state 247
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 248


State 165

   11 postfix_expression: postfix_expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 249


State 166

   12 postfix_expression: postfix_expression RIGHTARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 250


State 167

   13 postfix_expression: postfix_expression PLUSPLUS •

    $default  reduce using rule 13 (postfix_expression)


State 168

   14 postfix_expression: postfix_expression MINUSMINS •

    $default  reduce using rule 14 (postfix_expression)


State 169

   65 assignment_operator: EQUAL •

    $default  reduce using rule 65 (assignment_operator)


State 170

   66 assignment_operator: MULEQUAL •

    $default  reduce using rule 66 (assignment_operator)


State 171

   67 assignment_operator: DIVEQUAL •

    $default  reduce using rule 67 (assignment_operator)


State 172

   68 assignment_operator: MODEQUAL •

    $default  reduce using rule 68 (assignment_operator)


State 173

   69 assignment_operator: PLUSEQUAL •

    $default  reduce using rule 69 (assignment_operator)


State 174

   70 assignment_operator: MINUSEQUAL •

    $default  reduce using rule 70 (assignment_operator)


State 175

   71 assignment_operator: SHIFTLEQUAL •

    $default  reduce using rule 71 (assignment_operator)


State 176

   72 assignment_operator: SHIFTREQUAL •

    $default  reduce using rule 72 (assignment_operator)


State 177

   73 assignment_operator: ANDEQUAL •

    $default  reduce using rule 73 (assignment_operator)


State 178

   74 assignment_operator: XOREQUAL •

    $default  reduce using rule 74 (assignment_operator)


State 179

   75 assignment_operator: OREQUAL •

    $default  reduce using rule 75 (assignment_operator)


State 180

   64 assignment_expression: unary_expression assignment_operator • assignment_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 251


State 181

   22 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 22 (unary_expression)


State 182

   34 multiplicative_expression: multiplicative_expression KSTAR • cast_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression  go to state 98
    postfix_expression  go to state 99
    unary_expression    go to state 139
    unary_operator      go to state 101
    cast_expression     go to state 252


State 183

   35 multiplicative_expression: multiplicative_expression DIVIDE • cast_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression  go to state 98
    postfix_expression  go to state 99
    unary_expression    go to state 139
    unary_operator      go to state 101
    cast_expression     go to state 253


State 184

   36 multiplicative_expression: multiplicative_expression MODULO • cast_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression  go to state 98
    postfix_expression  go to state 99
    unary_expression    go to state 139
    unary_operator      go to state 101
    cast_expression     go to state 254


State 185

   38 additive_expression: additive_expression PLUS • multiplicative_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 255


State 186

   39 additive_expression: additive_expression MINUS • multiplicative_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 256


State 187

   41 shift_expression: shift_expression LEFTS • additive_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 257


State 188

   42 shift_expression: shift_expression RIGHTS • additive_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 258


State 189

   44 relational_expression: relational_expression LESSTHAN • shift_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 259


State 190

   45 relational_expression: relational_expression GREATERTHAN • shift_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 260


State 191

   46 relational_expression: relational_expression LESSEQUAL • shift_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 261


State 192

   47 relational_expression: relational_expression GREATEREQUAL • shift_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 262


State 193

   49 equality_expression: equality_expression EQUALEQUAL • relational_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 263


State 194

   50 equality_expression: equality_expression NOTEQUAL • relational_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 264


State 195

   52 and_expression: and_expression BAND • equality_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 265


State 196

   54 exclusive_or_expression: exclusive_or_expression XOR • and_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 266


State 197

   56 inclusive_or_expression: inclusive_or_expression BITWISEOR • exclusive_or_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 267


State 198

   58 logical_and_expression: logical_and_expression AND • inclusive_or_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 268


State 199

   60 logical_or_expression: logical_or_expression OR • logical_and_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 269


State 200

   62 conditional_expression: logical_or_expression QUESTIONMARK • expression COLON conditional_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 270


State 201

  183 expression_statement: expression SEMICOLON •

    $default  reduce using rule 183 (expression_statement)


State 202

   77 expression: expression COMMA • assignment_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 271


State 203

  177 compound_statement: OPENCB block_item_list CLOSECB •

    $default  reduce using rule 177 (compound_statement)


State 204

  179 block_item_list: block_item_list block_item •

    $default  reduce using rule 179 (block_item_list)


State 205

  165 designator: OPENSB • constant_expression CLOSESB

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 140
    constant_expression        go to state 272


State 206

  166 designator: DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 273


State 207

  156 initializer: OPENCB initializer_list • CLOSECB
  157            | OPENCB initializer_list • COMMA CLOSECB
  159 initializer_list: initializer_list • COMMA designation_opt initializer

    CLOSECB  shift, and go to state 274
    COMMA    shift, and go to state 275


State 208

  158 initializer_list: designation_opt • initializer

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 127
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 128
    initializer                go to state 276


State 209

  160 designation_opt: designation •

    $default  reduce using rule 160 (designation_opt)


State 210

  162 designation: designator_list • EQUAL
  164 designator_list: designator_list • designator

    OPENSB  shift, and go to state 205
    DOT     shift, and go to state 206
    EQUAL   shift, and go to state 277

    designator  go to state 278


State 211

  163 designator_list: designator •

    $default  reduce using rule 163 (designator_list)


State 212

  129 direct_declarator: OPENRB declarator CLOSERB •

    $default  reduce using rule 129 (direct_declarator)


State 213

  131 direct_declarator: direct_declarator OPENSB STATIC • type_qualifier_list_opt assignment_expression CLOSESB

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 137 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 279
    type_qualifier_list      go to state 51


State 214

  130 direct_declarator: direct_declarator OPENSB type_qualifier_list_opt • assignment_expression_opt CLOSESB
  133                  | direct_declarator OPENSB type_qualifier_list_opt • KSTAR CLOSESB

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 280
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    $default  reduce using rule 139 (assignment_expression_opt)

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 281
    assignment_expression_opt  go to state 282


State 215

  132 direct_declarator: direct_declarator OPENSB type_qualifier_list • STATIC assignment_expression CLOSESB
  136 type_qualifier_list_opt: type_qualifier_list •
  145 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    STATIC    shift, and go to state 283
    VOLATILE  shift, and go to state 18

    $default  reduce using rule 136 (type_qualifier_list_opt)

    type_qualifier  go to state 67


State 216

  152 identifier_list: IDENTIFIER •

    $default  reduce using rule 152 (identifier_list)


State 217

  150 parameter_declaration: declaration_specifiers • declarator
  151                      | declaration_specifiers •

    KSTAR  shift, and go to state 34

    CLOSERB   reduce using rule 151 (parameter_declaration)
    COMMA     reduce using rule 151 (parameter_declaration)
    $default  reduce using rule 127 (pointer_opt)

    declarator   go to state 284
    pointer_opt  go to state 39
    pointer      go to state 40


State 218

  135 direct_declarator: direct_declarator OPENRB identifier_list_opt • CLOSERB

    CLOSERB  shift, and go to state 285


State 219

  134 direct_declarator: direct_declarator OPENRB parameter_type_list • CLOSERB

    CLOSERB  shift, and go to state 286


State 220

  146 parameter_type_list: parameter_list •
  147                    | parameter_list • COMMA DOTDOTDOT
  149 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 287

    $default  reduce using rule 146 (parameter_type_list)


State 221

  148 parameter_list: parameter_declaration •

    $default  reduce using rule 148 (parameter_list)


State 222

  140 identifier_list_opt: identifier_list •
  153 identifier_list: identifier_list • COMMA IDENTIFIER

    COMMA  shift, and go to state 288

    $default  reduce using rule 140 (identifier_list_opt)


State 223

  120 enumerator: IDENTIFIER EQUAL constant_expression •

    $default  reduce using rule 120 (enumerator)


State 224

  113 enum_specifier: ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB •

    $default  reduce using rule 113 (enum_specifier)


State 225

  118 enumerator_list: enumerator_list COMMA enumerator •

    $default  reduce using rule 118 (enumerator_list)


State 226

  174 labeled_statement: CASE constant_expression COLON • statement

    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    RETURN              shift, and go to state 78
    SIZEOF              shift, and go to state 79
    SWITCH              shift, and go to state 80
    WHILE               shift, and go to state 81
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    statement                  go to state 289
    labeled_statement          go to state 118
    compound_statement         go to state 119
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 227

  175 labeled_statement: DEFAULT COLON statement •

    $default  reduce using rule 175 (labeled_statement)


State 228

  188 iteration_statement: DO statement WHILE • OPENRB expression CLOSERB SEMICOLON

    OPENRB  shift, and go to state 290


State 229

   77 expression: expression • COMMA assignment_expression
  191 expression_opt: expression •

    COMMA  shift, and go to state 202

    $default  reduce using rule 191 (expression_opt)


State 230

  190 iteration_statement: FOR OPENRB declaration • expression_opt SEMICOLON expression_opt CLOSERB statement

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    $default  reduce using rule 192 (expression_opt)

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 229
    expression_opt             go to state 291


State 231

  189 iteration_statement: FOR OPENRB expression_opt • SEMICOLON expression_opt SEMICOLON expression_opt CLOSERB statement

    SEMICOLON  shift, and go to state 292


State 232

  193 jump_statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 193 (jump_statement)


State 233

   77 expression: expression • COMMA assignment_expression
  184 selection_statement: IF OPENRB expression • CLOSERB statement
  185                    | IF OPENRB expression • CLOSERB statement ELSE statement

    CLOSERB  shift, and go to state 293
    COMMA    shift, and go to state 202


State 234

  197 jump_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 197 (jump_statement)


State 235

   15 postfix_expression: OPENRB type_name • CLOSERB OPENCB initializer_list CLOSECB
   16                   | OPENRB type_name • CLOSERB OPENCB initializer_list COMMA CLOSECB
   24 unary_expression: SIZEOF OPENRB type_name • CLOSERB

    CLOSERB  shift, and go to state 294


State 236

   77 expression: expression • COMMA assignment_expression
  186 selection_statement: SWITCH OPENRB expression • CLOSERB statement

    CLOSERB  shift, and go to state 295
    COMMA    shift, and go to state 202


State 237

   77 expression: expression • COMMA assignment_expression
  187 iteration_statement: WHILE OPENRB expression • CLOSERB statement

    CLOSERB  shift, and go to state 296
    COMMA    shift, and go to state 202


State 238

  173 labeled_statement: IDENTIFIER COLON statement •

    $default  reduce using rule 173 (labeled_statement)


State 239

    6 primary_expression: OPENRB expression CLOSERB •

    $default  reduce using rule 6 (primary_expression)


State 240

  110 specifier_qualifier_list_opt: specifier_qualifier_list •

    $default  reduce using rule 110 (specifier_qualifier_list_opt)


State 241

  108 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt •

    $default  reduce using rule 108 (specifier_qualifier_list)


State 242

  109 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt •

    $default  reduce using rule 109 (specifier_qualifier_list)


State 243

   15 postfix_expression: OPENRB type_name CLOSERB • OPENCB initializer_list CLOSECB
   16                   | OPENRB type_name CLOSERB • OPENCB initializer_list COMMA CLOSECB
   32 cast_expression: OPENRB type_name CLOSERB • cast_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 297
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression  go to state 98
    postfix_expression  go to state 99
    unary_expression    go to state 139
    unary_operator      go to state 101
    cast_expression     go to state 298


State 244

   15 postfix_expression: OPENRB type_name • CLOSERB OPENCB initializer_list CLOSECB
   16                   | OPENRB type_name • CLOSERB OPENCB initializer_list COMMA CLOSECB

    CLOSERB  shift, and go to state 299


State 245

    8 postfix_expression: postfix_expression OPENSB expression • CLOSESB
   77 expression: expression • COMMA assignment_expression

    CLOSESB  shift, and go to state 300
    COMMA    shift, and go to state 202


State 246

   10 postfix_expression: postfix_expression OPENRB CLOSERB •

    $default  reduce using rule 10 (postfix_expression)


State 247

    9 postfix_expression: postfix_expression OPENRB argument_expression_list • CLOSERB
   18 argument_expression_list: argument_expression_list • COMMA assignment_expression

    CLOSERB  shift, and go to state 301
    COMMA    shift, and go to state 302


State 248

   17 argument_expression_list: assignment_expression •

    $default  reduce using rule 17 (argument_expression_list)


State 249

   11 postfix_expression: postfix_expression DOT IDENTIFIER •

    $default  reduce using rule 11 (postfix_expression)


State 250

   12 postfix_expression: postfix_expression RIGHTARROW IDENTIFIER •

    $default  reduce using rule 12 (postfix_expression)


State 251

   64 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 64 (assignment_expression)


State 252

   34 multiplicative_expression: multiplicative_expression KSTAR cast_expression •

    $default  reduce using rule 34 (multiplicative_expression)


State 253

   35 multiplicative_expression: multiplicative_expression DIVIDE cast_expression •

    $default  reduce using rule 35 (multiplicative_expression)


State 254

   36 multiplicative_expression: multiplicative_expression MODULO cast_expression •

    $default  reduce using rule 36 (multiplicative_expression)


State 255

   34 multiplicative_expression: multiplicative_expression • KSTAR cast_expression
   35                          | multiplicative_expression • DIVIDE cast_expression
   36                          | multiplicative_expression • MODULO cast_expression
   38 additive_expression: additive_expression PLUS multiplicative_expression •

    KSTAR   shift, and go to state 182
    DIVIDE  shift, and go to state 183
    MODULO  shift, and go to state 184

    $default  reduce using rule 38 (additive_expression)


State 256

   34 multiplicative_expression: multiplicative_expression • KSTAR cast_expression
   35                          | multiplicative_expression • DIVIDE cast_expression
   36                          | multiplicative_expression • MODULO cast_expression
   39 additive_expression: additive_expression MINUS multiplicative_expression •

    KSTAR   shift, and go to state 182
    DIVIDE  shift, and go to state 183
    MODULO  shift, and go to state 184

    $default  reduce using rule 39 (additive_expression)


State 257

   38 additive_expression: additive_expression • PLUS multiplicative_expression
   39                    | additive_expression • MINUS multiplicative_expression
   41 shift_expression: shift_expression LEFTS additive_expression •

    PLUS   shift, and go to state 185
    MINUS  shift, and go to state 186

    $default  reduce using rule 41 (shift_expression)


State 258

   38 additive_expression: additive_expression • PLUS multiplicative_expression
   39                    | additive_expression • MINUS multiplicative_expression
   42 shift_expression: shift_expression RIGHTS additive_expression •

    PLUS   shift, and go to state 185
    MINUS  shift, and go to state 186

    $default  reduce using rule 42 (shift_expression)


State 259

   41 shift_expression: shift_expression • LEFTS additive_expression
   42                 | shift_expression • RIGHTS additive_expression
   44 relational_expression: relational_expression LESSTHAN shift_expression •

    LEFTS   shift, and go to state 187
    RIGHTS  shift, and go to state 188

    $default  reduce using rule 44 (relational_expression)


State 260

   41 shift_expression: shift_expression • LEFTS additive_expression
   42                 | shift_expression • RIGHTS additive_expression
   45 relational_expression: relational_expression GREATERTHAN shift_expression •

    LEFTS   shift, and go to state 187
    RIGHTS  shift, and go to state 188

    $default  reduce using rule 45 (relational_expression)


State 261

   41 shift_expression: shift_expression • LEFTS additive_expression
   42                 | shift_expression • RIGHTS additive_expression
   46 relational_expression: relational_expression LESSEQUAL shift_expression •

    LEFTS   shift, and go to state 187
    RIGHTS  shift, and go to state 188

    $default  reduce using rule 46 (relational_expression)


State 262

   41 shift_expression: shift_expression • LEFTS additive_expression
   42                 | shift_expression • RIGHTS additive_expression
   47 relational_expression: relational_expression GREATEREQUAL shift_expression •

    LEFTS   shift, and go to state 187
    RIGHTS  shift, and go to state 188

    $default  reduce using rule 47 (relational_expression)


State 263

   44 relational_expression: relational_expression • LESSTHAN shift_expression
   45                      | relational_expression • GREATERTHAN shift_expression
   46                      | relational_expression • LESSEQUAL shift_expression
   47                      | relational_expression • GREATEREQUAL shift_expression
   49 equality_expression: equality_expression EQUALEQUAL relational_expression •

    LESSTHAN      shift, and go to state 189
    GREATERTHAN   shift, and go to state 190
    LESSEQUAL     shift, and go to state 191
    GREATEREQUAL  shift, and go to state 192

    $default  reduce using rule 49 (equality_expression)


State 264

   44 relational_expression: relational_expression • LESSTHAN shift_expression
   45                      | relational_expression • GREATERTHAN shift_expression
   46                      | relational_expression • LESSEQUAL shift_expression
   47                      | relational_expression • GREATEREQUAL shift_expression
   50 equality_expression: equality_expression NOTEQUAL relational_expression •

    LESSTHAN      shift, and go to state 189
    GREATERTHAN   shift, and go to state 190
    LESSEQUAL     shift, and go to state 191
    GREATEREQUAL  shift, and go to state 192

    $default  reduce using rule 50 (equality_expression)


State 265

   49 equality_expression: equality_expression • EQUALEQUAL relational_expression
   50                    | equality_expression • NOTEQUAL relational_expression
   52 and_expression: and_expression BAND equality_expression •

    EQUALEQUAL  shift, and go to state 193
    NOTEQUAL    shift, and go to state 194

    $default  reduce using rule 52 (and_expression)


State 266

   52 and_expression: and_expression • BAND equality_expression
   54 exclusive_or_expression: exclusive_or_expression XOR and_expression •

    BAND  shift, and go to state 195

    $default  reduce using rule 54 (exclusive_or_expression)


State 267

   54 exclusive_or_expression: exclusive_or_expression • XOR and_expression
   56 inclusive_or_expression: inclusive_or_expression BITWISEOR exclusive_or_expression •

    XOR  shift, and go to state 196

    $default  reduce using rule 56 (inclusive_or_expression)


State 268

   56 inclusive_or_expression: inclusive_or_expression • BITWISEOR exclusive_or_expression
   58 logical_and_expression: logical_and_expression AND inclusive_or_expression •

    BITWISEOR  shift, and go to state 197

    $default  reduce using rule 58 (logical_and_expression)


State 269

   58 logical_and_expression: logical_and_expression • AND inclusive_or_expression
   60 logical_or_expression: logical_or_expression OR logical_and_expression •

    AND  shift, and go to state 198

    $default  reduce using rule 60 (logical_or_expression)


State 270

   62 conditional_expression: logical_or_expression QUESTIONMARK expression • COLON conditional_expression
   77 expression: expression • COMMA assignment_expression

    COLON  shift, and go to state 303
    COMMA  shift, and go to state 202


State 271

   77 expression: expression COMMA assignment_expression •

    $default  reduce using rule 77 (expression)


State 272

  165 designator: OPENSB constant_expression • CLOSESB

    CLOSESB  shift, and go to state 304


State 273

  166 designator: DOT IDENTIFIER •

    $default  reduce using rule 166 (designator)


State 274

  156 initializer: OPENCB initializer_list CLOSECB •

    $default  reduce using rule 156 (initializer)


State 275

  157 initializer: OPENCB initializer_list COMMA • CLOSECB
  159 initializer_list: initializer_list COMMA • designation_opt initializer

    OPENSB   shift, and go to state 205
    CLOSECB  shift, and go to state 305
    DOT      shift, and go to state 206

    $default  reduce using rule 161 (designation_opt)

    designation_opt  go to state 306
    designation      go to state 209
    designator_list  go to state 210
    designator       go to state 211


State 276

  158 initializer_list: designation_opt initializer •

    $default  reduce using rule 158 (initializer_list)


State 277

  162 designation: designator_list EQUAL •

    $default  reduce using rule 162 (designation)


State 278

  164 designator_list: designator_list designator •

    $default  reduce using rule 164 (designator_list)


State 279

  131 direct_declarator: direct_declarator OPENSB STATIC type_qualifier_list_opt • assignment_expression CLOSESB

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 307


State 280

   26 unary_operator: KSTAR •
  133 direct_declarator: direct_declarator OPENSB type_qualifier_list_opt KSTAR • CLOSESB

    CLOSESB  shift, and go to state 308

    $default  reduce using rule 26 (unary_operator)


State 281

  138 assignment_expression_opt: assignment_expression •

    $default  reduce using rule 138 (assignment_expression_opt)


State 282

  130 direct_declarator: direct_declarator OPENSB type_qualifier_list_opt assignment_expression_opt • CLOSESB

    CLOSESB  shift, and go to state 309


State 283

  132 direct_declarator: direct_declarator OPENSB type_qualifier_list STATIC • assignment_expression CLOSESB

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 310


State 284

  150 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 150 (parameter_declaration)


State 285

  135 direct_declarator: direct_declarator OPENRB identifier_list_opt CLOSERB •

    $default  reduce using rule 135 (direct_declarator)


State 286

  134 direct_declarator: direct_declarator OPENRB parameter_type_list CLOSERB •

    $default  reduce using rule 134 (direct_declarator)


State 287

  147 parameter_type_list: parameter_list COMMA • DOTDOTDOT
  149 parameter_list: parameter_list COMMA • parameter_declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    UNSIGNED    shift, and go to state 16
    VOID        shift, and go to state 17
    VOLATILE    shift, and go to state 18
    _BOOL       shift, and go to state 19
    _COMPLEX    shift, and go to state 20
    _IMAGINARY  shift, and go to state 21
    DOTDOTDOT   shift, and go to state 311

    declaration_specifiers   go to state 217
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 312


State 288

  153 identifier_list: identifier_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 313


State 289

  174 labeled_statement: CASE constant_expression COLON statement •

    $default  reduce using rule 174 (labeled_statement)


State 290

  188 iteration_statement: DO statement WHILE OPENRB • expression CLOSERB SEMICOLON

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 314


State 291

  190 iteration_statement: FOR OPENRB declaration expression_opt • SEMICOLON expression_opt CLOSERB statement

    SEMICOLON  shift, and go to state 315


State 292

  189 iteration_statement: FOR OPENRB expression_opt SEMICOLON • expression_opt SEMICOLON expression_opt CLOSERB statement

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    $default  reduce using rule 192 (expression_opt)

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 229
    expression_opt             go to state 316


State 293

  184 selection_statement: IF OPENRB expression CLOSERB • statement
  185                    | IF OPENRB expression CLOSERB • statement ELSE statement

    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    RETURN              shift, and go to state 78
    SIZEOF              shift, and go to state 79
    SWITCH              shift, and go to state 80
    WHILE               shift, and go to state 81
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    statement                  go to state 317
    labeled_statement          go to state 118
    compound_statement         go to state 119
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 294

   15 postfix_expression: OPENRB type_name CLOSERB • OPENCB initializer_list CLOSECB
   16                   | OPENRB type_name CLOSERB • OPENCB initializer_list COMMA CLOSECB
   24 unary_expression: SIZEOF OPENRB type_name CLOSERB •

    OPENCB  shift, and go to state 297

    $default  reduce using rule 24 (unary_expression)


State 295

  186 selection_statement: SWITCH OPENRB expression CLOSERB • statement

    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    RETURN              shift, and go to state 78
    SIZEOF              shift, and go to state 79
    SWITCH              shift, and go to state 80
    WHILE               shift, and go to state 81
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    statement                  go to state 318
    labeled_statement          go to state 118
    compound_statement         go to state 119
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 296

  187 iteration_statement: WHILE OPENRB expression CLOSERB • statement

    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    RETURN              shift, and go to state 78
    SIZEOF              shift, and go to state 79
    SWITCH              shift, and go to state 80
    WHILE               shift, and go to state 81
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    statement                  go to state 319
    labeled_statement          go to state 118
    compound_statement         go to state 119
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 297

   15 postfix_expression: OPENRB type_name CLOSERB OPENCB • initializer_list CLOSECB
   16                   | OPENRB type_name CLOSERB OPENCB • initializer_list COMMA CLOSECB

    OPENSB  shift, and go to state 205
    DOT     shift, and go to state 206

    $default  reduce using rule 161 (designation_opt)

    initializer_list  go to state 320
    designation_opt   go to state 208
    designation       go to state 209
    designator_list   go to state 210
    designator        go to state 211


State 298

   32 cast_expression: OPENRB type_name CLOSERB cast_expression •

    $default  reduce using rule 32 (cast_expression)


State 299

   15 postfix_expression: OPENRB type_name CLOSERB • OPENCB initializer_list CLOSECB
   16                   | OPENRB type_name CLOSERB • OPENCB initializer_list COMMA CLOSECB

    OPENCB  shift, and go to state 297


State 300

    8 postfix_expression: postfix_expression OPENSB expression CLOSESB •

    $default  reduce using rule 8 (postfix_expression)


State 301

    9 postfix_expression: postfix_expression OPENRB argument_expression_list CLOSERB •

    $default  reduce using rule 9 (postfix_expression)


State 302

   18 argument_expression_list: argument_expression_list COMMA • assignment_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 321


State 303

   62 conditional_expression: logical_or_expression QUESTIONMARK expression COLON • conditional_expression

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 139
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 322


State 304

  165 designator: OPENSB constant_expression CLOSESB •

    $default  reduce using rule 165 (designator)


State 305

  157 initializer: OPENCB initializer_list COMMA CLOSECB •

    $default  reduce using rule 157 (initializer)


State 306

  159 initializer_list: initializer_list COMMA designation_opt • initializer

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 127
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 128
    initializer                go to state 323


State 307

  131 direct_declarator: direct_declarator OPENSB STATIC type_qualifier_list_opt assignment_expression • CLOSESB

    CLOSESB  shift, and go to state 324


State 308

  133 direct_declarator: direct_declarator OPENSB type_qualifier_list_opt KSTAR CLOSESB •

    $default  reduce using rule 133 (direct_declarator)


State 309

  130 direct_declarator: direct_declarator OPENSB type_qualifier_list_opt assignment_expression_opt CLOSESB •

    $default  reduce using rule 130 (direct_declarator)


State 310

  132 direct_declarator: direct_declarator OPENSB type_qualifier_list STATIC assignment_expression • CLOSESB

    CLOSESB  shift, and go to state 325


State 311

  147 parameter_type_list: parameter_list COMMA DOTDOTDOT •

    $default  reduce using rule 147 (parameter_type_list)


State 312

  149 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 149 (parameter_list)


State 313

  153 identifier_list: identifier_list COMMA IDENTIFIER •

    $default  reduce using rule 153 (identifier_list)


State 314

   77 expression: expression • COMMA assignment_expression
  188 iteration_statement: DO statement WHILE OPENRB expression • CLOSERB SEMICOLON

    CLOSERB  shift, and go to state 326
    COMMA    shift, and go to state 202


State 315

  190 iteration_statement: FOR OPENRB declaration expression_opt SEMICOLON • expression_opt CLOSERB statement

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    $default  reduce using rule 192 (expression_opt)

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 229
    expression_opt             go to state 327


State 316

  189 iteration_statement: FOR OPENRB expression_opt SEMICOLON expression_opt • SEMICOLON expression_opt CLOSERB statement

    SEMICOLON  shift, and go to state 328


State 317

  184 selection_statement: IF OPENRB expression CLOSERB statement •
  185                    | IF OPENRB expression CLOSERB statement • ELSE statement

    ELSE  shift, and go to state 329

    ELSE      [reduce using rule 184 (selection_statement)]
    $default  reduce using rule 184 (selection_statement)


State 318

  186 selection_statement: SWITCH OPENRB expression CLOSERB statement •

    $default  reduce using rule 186 (selection_statement)


State 319

  187 iteration_statement: WHILE OPENRB expression CLOSERB statement •

    $default  reduce using rule 187 (iteration_statement)


State 320

   15 postfix_expression: OPENRB type_name CLOSERB OPENCB initializer_list • CLOSECB
   16                   | OPENRB type_name CLOSERB OPENCB initializer_list • COMMA CLOSECB
  159 initializer_list: initializer_list • COMMA designation_opt initializer

    CLOSECB  shift, and go to state 330
    COMMA    shift, and go to state 331


State 321

   18 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 18 (argument_expression_list)


State 322

   62 conditional_expression: logical_or_expression QUESTIONMARK expression COLON conditional_expression •

    $default  reduce using rule 62 (conditional_expression)


State 323

  159 initializer_list: initializer_list COMMA designation_opt initializer •

    $default  reduce using rule 159 (initializer_list)


State 324

  131 direct_declarator: direct_declarator OPENSB STATIC type_qualifier_list_opt assignment_expression CLOSESB •

    $default  reduce using rule 131 (direct_declarator)


State 325

  132 direct_declarator: direct_declarator OPENSB type_qualifier_list STATIC assignment_expression CLOSESB •

    $default  reduce using rule 132 (direct_declarator)


State 326

  188 iteration_statement: DO statement WHILE OPENRB expression CLOSERB • SEMICOLON

    SEMICOLON  shift, and go to state 332


State 327

  190 iteration_statement: FOR OPENRB declaration expression_opt SEMICOLON expression_opt • CLOSERB statement

    CLOSERB  shift, and go to state 333


State 328

  189 iteration_statement: FOR OPENRB expression_opt SEMICOLON expression_opt SEMICOLON • expression_opt CLOSERB statement

    SIZEOF              shift, and go to state 79
    IDENTIFIER          shift, and go to state 126
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96

    $default  reduce using rule 192 (expression_opt)

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 229
    expression_opt             go to state 334


State 329

  185 selection_statement: IF OPENRB expression CLOSERB statement ELSE • statement

    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    RETURN              shift, and go to state 78
    SIZEOF              shift, and go to state 79
    SWITCH              shift, and go to state 80
    WHILE               shift, and go to state 81
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    statement                  go to state 335
    labeled_statement          go to state 118
    compound_statement         go to state 119
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 330

   15 postfix_expression: OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB •

    $default  reduce using rule 15 (postfix_expression)


State 331

   16 postfix_expression: OPENRB type_name CLOSERB OPENCB initializer_list COMMA • CLOSECB
  159 initializer_list: initializer_list COMMA • designation_opt initializer

    OPENSB   shift, and go to state 205
    CLOSECB  shift, and go to state 336
    DOT      shift, and go to state 206

    $default  reduce using rule 161 (designation_opt)

    designation_opt  go to state 306
    designation      go to state 209
    designator_list  go to state 210
    designator       go to state 211


State 332

  188 iteration_statement: DO statement WHILE OPENRB expression CLOSERB SEMICOLON •

    $default  reduce using rule 188 (iteration_statement)


State 333

  190 iteration_statement: FOR OPENRB declaration expression_opt SEMICOLON expression_opt CLOSERB • statement

    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    RETURN              shift, and go to state 78
    SIZEOF              shift, and go to state 79
    SWITCH              shift, and go to state 80
    WHILE               shift, and go to state 81
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    statement                  go to state 337
    labeled_statement          go to state 118
    compound_statement         go to state 119
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 334

  189 iteration_statement: FOR OPENRB expression_opt SEMICOLON expression_opt SEMICOLON expression_opt • CLOSERB statement

    CLOSERB  shift, and go to state 338


State 335

  185 selection_statement: IF OPENRB expression CLOSERB statement ELSE statement •

    $default  reduce using rule 185 (selection_statement)


State 336

   16 postfix_expression: OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB •

    $default  reduce using rule 16 (postfix_expression)


State 337

  190 iteration_statement: FOR OPENRB declaration expression_opt SEMICOLON expression_opt CLOSERB statement •

    $default  reduce using rule 190 (iteration_statement)


State 338

  189 iteration_statement: FOR OPENRB expression_opt SEMICOLON expression_opt SEMICOLON expression_opt CLOSERB • statement

    BREAK               shift, and go to state 70
    CASE                shift, and go to state 71
    CONTINUE            shift, and go to state 72
    DEFAULT             shift, and go to state 73
    DO                  shift, and go to state 74
    FOR                 shift, and go to state 75
    GOTO                shift, and go to state 76
    IF                  shift, and go to state 77
    RETURN              shift, and go to state 78
    SIZEOF              shift, and go to state 79
    SWITCH              shift, and go to state 80
    WHILE               shift, and go to state 81
    IDENTIFIER          shift, and go to state 82
    STRING_LITERAL      shift, and go to state 83
    INTEGER_CONSTANT    shift, and go to state 84
    FLOATING_CONSTANT   shift, and go to state 85
    CHARACTER_CONSTANT  shift, and go to state 86
    OPENRB              shift, and go to state 87
    OPENCB              shift, and go to state 54
    PLUSPLUS            shift, and go to state 89
    MINUSMINS           shift, and go to state 90
    BAND                shift, and go to state 91
    KSTAR               shift, and go to state 92
    PLUS                shift, and go to state 93
    MINUS               shift, and go to state 94
    TILDA               shift, and go to state 95
    NOT                 shift, and go to state 96
    SEMICOLON           shift, and go to state 97

    primary_expression         go to state 98
    postfix_expression         go to state 99
    unary_expression           go to state 100
    unary_operator             go to state 101
    cast_expression            go to state 102
    multiplicative_expression  go to state 103
    additive_expression        go to state 104
    shift_expression           go to state 105
    relational_expression      go to state 106
    equality_expression        go to state 107
    and_expression             go to state 108
    exclusive_or_expression    go to state 109
    inclusive_or_expression    go to state 110
    logical_and_expression     go to state 111
    logical_or_expression      go to state 112
    conditional_expression     go to state 113
    assignment_expression      go to state 114
    expression                 go to state 115
    statement                  go to state 339
    labeled_statement          go to state 118
    compound_statement         go to state 119
    expression_statement       go to state 122
    selection_statement        go to state 123
    iteration_statement        go to state 124
    jump_statement             go to state 125


State 339

  189 iteration_statement: FOR OPENRB expression_opt SEMICOLON expression_opt SEMICOLON expression_opt CLOSERB statement •

    $default  reduce using rule 189 (iteration_statement)
