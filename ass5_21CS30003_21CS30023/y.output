Terminals unused in grammar

    OTHERS
    TYPEDEF
    HASH


Grammar

    0 $accept: translation_unit $end

    1 changetable: ε

    2 constant: INTEGER_CONST
    3         | FLOAT_CONST
    4         | CHAR_CONST
    5         | STRING_LITERAL

    6 primary_expression: IDENTIFIER
    7                   | constant
    8                   | OPENRB expression CLOSERB

    9 postfix_expression: primary_expression
   10                   | postfix_expression OPENSB expression CLOSESB
   11                   | postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | postfix_expression DOT IDENTIFIER
   13                   | postfix_expression RIGHTARROW IDENTIFIER
   14                   | postfix_expression PLUSPLUS
   15                   | postfix_expression MINUSMINS
   16                   | OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list COMMA assignment_expression

   20 argument_expression_list_opt: argument_expression_list
   21                             | ε

   22 unary_expression: postfix_expression
   23                 | PLUSPLUS unary_expression
   24                 | MINUSMINS unary_expression
   25                 | unary_operator cast_expression
   26                 | SIZEOF unary_expression
   27                 | SIZEOF OPENRB type_name CLOSERB

   28 unary_operator: BAND
   29               | KSTAR
   30               | PLUS
   31               | MINUS
   32               | TILDA
   33               | NOT

   34 cast_expression: unary_expression
   35                | OPENRB type_name CLOSERB cast_expression

   36 multiplicative_expression: cast_expression
   37                          | multiplicative_expression KSTAR cast_expression
   38                          | multiplicative_expression DIVIDE cast_expression
   39                          | multiplicative_expression MODULO cast_expression

   40 additive_expression: multiplicative_expression
   41                    | additive_expression PLUS multiplicative_expression
   42                    | additive_expression MINUS multiplicative_expression

   43 shift_expression: additive_expression
   44                 | shift_expression LEFTS additive_expression
   45                 | shift_expression RIGHTS additive_expression

   46 relational_expression: shift_expression
   47                      | relational_expression LESSTHAN shift_expression
   48                      | relational_expression GREATERTHAN shift_expression
   49                      | relational_expression LESSEQUAL shift_expression
   50                      | relational_expression GREATEREQUAL shift_expression

   51 equality_expression: relational_expression
   52                    | equality_expression EQUALEQUAL relational_expression
   53                    | equality_expression NOTEQUAL relational_expression

   54 and_expression: equality_expression
   55               | and_expression BAND equality_expression

   56 exclusive_or_expression: and_expression
   57                        | exclusive_or_expression XOR and_expression

   58 inclusive_or_expression: exclusive_or_expression
   59                        | inclusive_or_expression BITWISEOR exclusive_or_expression

   60 logical_and_expression: inclusive_or_expression
   61                       | logical_and_expression AND M inclusive_or_expression

   62 logical_or_expression: logical_and_expression
   63                      | logical_or_expression OR M logical_and_expression

   64 conditional_expression: logical_or_expression
   65                       | logical_or_expression QUESTIONMARK expression COLON conditional_expression

   66 assignment_expression: conditional_expression
   67                      | unary_expression assignment_operator assignment_expression

   68 assignment_operator: EQUAL
   69                    | MULEQUAL
   70                    | DIVEQUAL
   71                    | MODEQUAL
   72                    | PLUSEQUAL
   73                    | MINUSEQUAL
   74                    | SHIFTLEQUAL
   75                    | SHIFTREQUAL
   76                    | ANDEQUAL
   77                    | XOREQUAL
   78                    | OREQUAL

   79 expression: assignment_expression
   80           | expression COMMA assignment_expression

   81 constant_expression: conditional_expression

   82 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON

   83 init_declarator_list_opt: init_declarator_list
   84                         | ε

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   86                       | type_specifier declaration_specifiers_opt
   87                       | type_qualifier declaration_specifiers_opt
   88                       | function_specifier declaration_specifiers_opt

   89 declaration_specifiers_opt: declaration_specifiers
   90                           | ε

   91 init_declarator_list: init_declarator
   92                     | init_declarator_list COMMA init_declarator

   93 init_declarator: declarator
   94                | declarator EQUAL initializer

   95 storage_class_specifier: EXTERN
   96                        | STATIC
   97                        | AUTO
   98                        | REGISTER

   99 type_specifier: VOID
  100               | CHAR
  101               | SHORT
  102               | INT
  103               | LONG
  104               | FLOAT
  105               | DOUBLE
  106               | SIGNED
  107               | UNSIGNED
  108               | _BOOL
  109               | _COMPLEX
  110               | _IMAGINARY
  111               | enum_specifier
  112               | struct_or_union_specifier

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  114                         | type_qualifier specifier_qualifier_list_opt

  115 specifier_qualifier_list_opt: specifier_qualifier_list
  116                             | ε

  117 struct_or_union_specifier: struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | struct_or_union IDENTIFIER

  120 struct_or_union: STRUCT
  121                | UNION

  122 struct_declaration_list: struct_declaration
  123                        | struct_declaration_list struct_declaration

  124 struct_declaration: specifier_qualifier_list SEMICOLON
  125                   | specifier_qualifier_list struct_declarator_list SEMICOLON

  126 struct_declarator_list: struct_declarator
  127                       | struct_declarator_list COMMA struct_declarator

  128 struct_declarator: COLON constant_expression
  129                  | declarator COLON constant_expression
  130                  | declarator

  131 enum_specifier: ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | ENUM IDENTIFIER

  134 identifier_opt: IDENTIFIER
  135               | ε

  136 enumerator_list: enumerator
  137                | enumerator_list COMMA enumerator

  138 enumerator: IDENTIFIER
  139           | IDENTIFIER EQUAL constant_expression

  140 type_qualifier: CONST
  141               | RESTRICT
  142               | VOLATILE

  143 function_specifier: INLINE

  144 declarator: pointer direct_declarator
  145           | direct_declarator

  146 direct_declarator: IDENTIFIER
  147                  | OPENRB declarator CLOSERB
  148                  | direct_declarator OPENSB type_qualifier_list assignment_expression CLOSESB
  149                  | direct_declarator OPENSB type_qualifier_list CLOSESB
  150                  | direct_declarator OPENSB assignment_expression CLOSESB
  151                  | direct_declarator OPENSB CLOSESB
  152                  | direct_declarator OPENSB STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | direct_declarator OPENSB STATIC assignment_expression CLOSESB
  154                  | direct_declarator OPENSB type_qualifier_list KSTAR CLOSESB
  155                  | direct_declarator OPENSB KSTAR CLOSESB
  156                  | direct_declarator OPENRB changetable parameter_type_list CLOSERB
  157                  | direct_declarator OPENRB identifier_list CLOSERB
  158                  | direct_declarator OPENRB changetable CLOSERB

  159 type_qualifier_list_opt: type_qualifier_list
  160                        | ε

  161 pointer: KSTAR type_qualifier_list_opt
  162        | KSTAR type_qualifier_list_opt pointer

  163 type_qualifier_list: type_qualifier
  164                    | type_qualifier_list type_qualifier

  165 parameter_type_list: parameter_list
  166                    | parameter_list COMMA DOTDOTDOT

  167 parameter_list: parameter_declaration
  168               | parameter_list COMMA parameter_declaration

  169 parameter_declaration: declaration_specifiers declarator
  170                      | declaration_specifiers

  171 identifier_list: IDENTIFIER
  172                | identifier_list COMMA IDENTIFIER

  173 type_name: specifier_qualifier_list

  174 initializer: assignment_expression
  175            | OPENCB initializer_list CLOSECB
  176            | OPENCB initializer_list COMMA CLOSECB

  177 initializer_list: designation_opt initializer
  178                 | initializer_list COMMA designation_opt initializer

  179 designation_opt: designation
  180                | ε

  181 designation: designator_list EQUAL

  182 designator_list: designator
  183                | designator_list designator

  184 designator: OPENSB constant_expression CLOSESB
  185           | DOT IDENTIFIER

  186 statement: labeled_statement
  187          | compound_statement
  188          | expression_statement
  189          | selection_statement
  190          | iteration_statement
  191          | jump_statement

  192 loop_statement: labeled_statement
  193               | expression_statement
  194               | selection_statement
  195               | iteration_statement
  196               | jump_statement

  197 labeled_statement: IDENTIFIER COLON M statement
  198                  | CASE constant_expression COLON statement
  199                  | DEFAULT COLON statement

  200 compound_statement: OPENCB X changetable block_item_list_opt CLOSECB

  201 block_item_list: block_item
  202                | block_item_list M block_item

  203 block_item_list_opt: block_item_list
  204                    | ε

  205 block_item: declaration
  206           | statement

  207 expression_statement: SEMICOLON
  208                     | expression SEMICOLON

  209 selection_statement: IF OPENRB expression N CLOSERB M statement N
  210                    | IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | SWITCH OPENRB expression CLOSERB statement

  212 iteration_statement: WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB

  220 jump_statement: GOTO IDENTIFIER SEMICOLON
  221               | CONTINUE SEMICOLON
  222               | BREAK SEMICOLON
  223               | RETURN expression SEMICOLON
  224               | RETURN SEMICOLON

  225 translation_unit: external_declaration
  226                 | translation_unit external_declaration

  227 external_declaration: function_definition
  228                     | declaration

  229 function_definition: declaration_specifiers declarator declaration_list_opt changetable OPENCB block_item_list_opt CLOSECB

  230 declaration_list_opt: declaration_list
  231                     | ε

  232 declaration_list: declaration
  233                 | declaration_list declaration

  234 M: ε

  235 F: ε

  236 W: ε

  237 D: ε

  238 X: ε

  239 N: ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    OTHERS (258)
    AUTO (259) 97
    BREAK (260) 222
    CASE (261) 198
    CHAR (262) 100
    CONST (263) 140
    CONTINUE (264) 221
    DEFAULT (265) 199
    DO (266) 214 215
    DOUBLE (267) 105
    ELSE (268) 210
    ENUM (269) 131 132 133
    EXTERN (270) 95
    REGISTER (271) 98
    FLOAT (272) 104
    FOR (273) 216 217 218 219
    GOTO (274) 220
    IF (275) 209 210
    INLINE (276) 143
    INT (277) 102
    LONG (278) 103
    RESTRICT (279) 141
    RETURN (280) 223 224
    SHORT (281) 101
    SIGNED (282) 106
    SIZEOF (283) 26 27
    STATIC (284) 96 152 153
    STRUCT (285) 120
    SWITCH (286) 211
    TYPEDEF (287)
    UNION (288) 121
    UNSIGNED (289) 107
    VOID (290) 99
    VOLATILE (291) 142
    WHILE (292) 212 213 214 215
    _BOOL (293) 108
    _COMPLEX (294) 109
    _IMAGINARY (295) 110
    IDENTIFIER <symp> (296) 6 12 13 118 119 133 134 138 139 146 171 172 185 197 220
    INTEGER_CONST <int_val> (297) 2
    CHAR_CONST <char_val> (298) 4
    FLOAT_CONST <float_val> (299) 3
    STRING_LITERAL <char_val> (300) 5
    OPENSB (301) 10 148 149 150 151 152 153 154 155 184
    CLOSESB (302) 10 148 149 150 151 152 153 154 155 184
    OPENRB (303) 8 11 16 17 27 35 147 156 157 158 209 210 211 212 213 214 215 216 217 218 219
    CLOSERB (304) 8 11 16 17 27 35 147 156 157 158 209 210 211 212 213 214 215 216 217 218 219
    OPENCB (305) 16 17 117 118 131 132 175 176 200 213 215 218 219 229
    CLOSECB (306) 16 17 117 118 131 132 175 176 200 213 215 218 219 229
    DOT (307) 12 185
    RIGHTARROW (308) 13
    PLUSPLUS (309) 14 23
    MINUSMINS (310) 15 24
    BAND (311) 28 55
    KSTAR (312) 29 37 154 155 161 162
    PLUS (313) 30 41
    MINUS (314) 31 42
    TILDA (315) 32
    NOT (316) 33
    DIVIDE (317) 38
    MODULO (318) 39
    LEFTS (319) 44
    RIGHTS (320) 45
    LESSTHAN (321) 47
    GREATERTHAN (322) 48
    LESSEQUAL (323) 49
    GREATEREQUAL (324) 50
    EQUALEQUAL (325) 52
    NOTEQUAL (326) 53
    XOR (327) 57
    BITWISEOR (328) 59
    AND (329) 61
    OR (330) 63
    QUESTIONMARK (331) 65
    COLON (332) 65 128 129 197 198 199
    SEMICOLON (333) 82 124 125 207 208 214 215 220 221 222 223 224
    DOTDOTDOT (334) 166
    EQUAL (335) 68 94 139 181
    MULEQUAL (336) 69
    DIVEQUAL (337) 70
    MODEQUAL (338) 71
    PLUSEQUAL (339) 72
    MINUSEQUAL (340) 73
    SHIFTLEQUAL (341) 74
    SHIFTREQUAL (342) 75
    ANDEQUAL (343) 76
    XOREQUAL (344) 77
    OREQUAL (345) 78
    COMMA (346) 17 19 80 92 127 132 137 166 168 172 176 178
    HASH (347)
    "then" (348)


Nonterminals, with rules where they appear

    $accept (94)
        on left: 0
    changetable (95)
        on left: 1
        on right: 156 158 200 212 213 216 217 218 219 229
    constant <expr> (96)
        on left: 2 3 4 5
        on right: 7
    primary_expression <expr> (97)
        on left: 6 7 8
        on right: 9
    postfix_expression <A> (98)
        on left: 9 10 11 12 13 14 15 16 17
        on right: 10 11 12 13 14 15 22
    argument_expression_list <num_params> (99)
        on left: 18 19
        on right: 19 20
    argument_expression_list_opt <num_params> (100)
        on left: 20 21
        on right: 11
    unary_expression <A> (101)
        on left: 22 23 24 25 26 27
        on right: 23 24 26 34 67
    unary_operator <unaryOp> (102)
        on left: 28 29 30 31 32 33
        on right: 25
    cast_expression <A> (103)
        on left: 34 35
        on right: 25 35 36 37 38 39
    multiplicative_expression <expr> (104)
        on left: 36 37 38 39
        on right: 37 38 39 40 41 42
    additive_expression <expr> (105)
        on left: 40 41 42
        on right: 41 42 43 44 45
    shift_expression <expr> (106)
        on left: 43 44 45
        on right: 44 45 46 47 48 49 50
    relational_expression <expr> (107)
        on left: 46 47 48 49 50
        on right: 47 48 49 50 51 52 53
    equality_expression <expr> (108)
        on left: 51 52 53
        on right: 52 53 54 55
    and_expression <expr> (109)
        on left: 54 55
        on right: 55 56 57
    exclusive_or_expression <expr> (110)
        on left: 56 57
        on right: 57 58 59
    inclusive_or_expression <expr> (111)
        on left: 58 59
        on right: 59 60 61
    logical_and_expression <expr> (112)
        on left: 60 61
        on right: 61 62 63
    logical_or_expression <expr> (113)
        on left: 62 63
        on right: 63 64 65
    conditional_expression <expr> (114)
        on left: 64 65
        on right: 65 66 81
    assignment_expression <expr> (115)
        on left: 66 67
        on right: 18 19 67 79 80 148 150 152 153 174
    assignment_operator (116)
        on left: 68 69 70 71 72 73 74 75 76 77 78
        on right: 67
    expression <expr> (117)
        on left: 79 80
        on right: 8 10 65 80 208 209 210 211 212 213 214 215 216 217 218 219 223
    constant_expression (118)
        on left: 81
        on right: 128 129 139 184 198
    declaration (119)
        on left: 82
        on right: 205 216 218 228 232 233
    init_declarator_list_opt (120)
        on left: 83 84
        on right: 82
    declaration_specifiers (121)
        on left: 85 86 87 88
        on right: 82 89 169 170 229
    declaration_specifiers_opt (122)
        on left: 89 90
        on right: 85 86 87 88
    init_declarator_list (123)
        on left: 91 92
        on right: 83 92
    init_declarator <symp> (124)
        on left: 93 94
        on right: 91 92
    storage_class_specifier (125)
        on left: 95 96 97 98
        on right: 85
    type_specifier (126)
        on left: 99 100 101 102 103 104 105 106 107 108 109 110 111 112
        on right: 86 113
    specifier_qualifier_list (127)
        on left: 113 114
        on right: 115 124 125 173
    specifier_qualifier_list_opt (128)
        on left: 115 116
        on right: 113 114
    struct_or_union_specifier (129)
        on left: 117 118 119
        on right: 112
    struct_or_union (130)
        on left: 120 121
        on right: 117 118 119
    struct_declaration_list (131)
        on left: 122 123
        on right: 117 118 123
    struct_declaration (132)
        on left: 124 125
        on right: 122 123
    struct_declarator_list (133)
        on left: 126 127
        on right: 125 127
    struct_declarator (134)
        on left: 128 129 130
        on right: 126 127
    enum_specifier (135)
        on left: 131 132 133
        on right: 111
    identifier_opt (136)
        on left: 134 135
        on right: 131 132
    enumerator_list (137)
        on left: 136 137
        on right: 131 132 137
    enumerator (138)
        on left: 138 139
        on right: 136 137
    type_qualifier (139)
        on left: 140 141 142
        on right: 87 114 163 164
    function_specifier (140)
        on left: 143
        on right: 88
    declarator <symp> (141)
        on left: 144 145
        on right: 93 94 129 130 147 169 229
    direct_declarator <symp> (142)
        on left: 146 147 148 149 150 151 152 153 154 155 156 157 158
        on right: 144 145 148 149 150 151 152 153 154 155 156 157 158
    type_qualifier_list_opt (143)
        on left: 159 160
        on right: 161 162
    pointer <sym_type> (144)
        on left: 161 162
        on right: 144 162
    type_qualifier_list (145)
        on left: 163 164
        on right: 148 149 152 154 159 164
    parameter_type_list (146)
        on left: 165 166
        on right: 156
    parameter_list (147)
        on left: 167 168
        on right: 165 166 168
    parameter_declaration (148)
        on left: 169 170
        on right: 167 168
    identifier_list (149)
        on left: 171 172
        on right: 157 172
    type_name (150)
        on left: 173
        on right: 16 17 27 35
    initializer <symp> (151)
        on left: 174 175 176
        on right: 94 177 178
    initializer_list (152)
        on left: 177 178
        on right: 16 17 175 176 178
    designation_opt (153)
        on left: 179 180
        on right: 177 178
    designation (154)
        on left: 181
        on right: 179
    designator_list (155)
        on left: 182 183
        on right: 181 183
    designator (156)
        on left: 184 185
        on right: 182 183
    statement <stat> (157)
        on left: 186 187 188 189 190 191
        on right: 197 198 199 206 209 210 211
    loop_statement <stat> (158)
        on left: 192 193 194 195 196
        on right: 212 214 216 217
    labeled_statement <stat> (159)
        on left: 197 198 199
        on right: 186 192
    compound_statement <stat> (160)
        on left: 200
        on right: 187
    block_item_list <stat> (161)
        on left: 201 202
        on right: 202 203
    block_item_list_opt <stat> (162)
        on left: 203 204
        on right: 200 213 215 218 219 229
    block_item <stat> (163)
        on left: 205 206
        on right: 201 202
    expression_statement <expr> (164)
        on left: 207 208
        on right: 188 193 216 217 218 219
    selection_statement <stat> (165)
        on left: 209 210 211
        on right: 189 194
    iteration_statement <stat> (166)
        on left: 212 213 214 215 216 217 218 219
        on right: 190 195
    jump_statement <stat> (167)
        on left: 220 221 222 223 224
        on right: 191 196
    translation_unit (168)
        on left: 225 226
        on right: 0 226
    external_declaration (169)
        on left: 227 228
        on right: 225 226
    function_definition (170)
        on left: 229
        on right: 227
    declaration_list_opt (171)
        on left: 230 231
        on right: 229
    declaration_list (172)
        on left: 232 233
        on right: 230 233
    M <instr_number> (173)
        on left: 234
        on right: 61 63 197 202 209 210 212 213 214 215 216 217 218 219
    F (174)
        on left: 235
        on right: 216 217 218 219
    W (175)
        on left: 236
        on right: 212 213
    D (176)
        on left: 237
        on right: 214 215
    X (177)
        on left: 238
        on right: 200 212 213 216 217 218 219
    N <stat> (178)
        on left: 239
        on right: 209 210 216 217 218 219


State 0

    0 $accept: • translation_unit $end
   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  225 translation_unit: • external_declaration
  226                 | • translation_unit external_declaration
  227 external_declaration: • function_definition
  228                     | • declaration
  229 function_definition: • declaration_specifiers declarator declaration_list_opt changetable OPENCB block_item_list_opt CLOSECB

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    translation_unit           go to state 33
    external_declaration       go to state 34
    function_definition        go to state 35


State 1

   97 storage_class_specifier: AUTO •

    $default  reduce using rule 97 (storage_class_specifier)


State 2

  100 type_specifier: CHAR •

    $default  reduce using rule 100 (type_specifier)


State 3

  140 type_qualifier: CONST •

    $default  reduce using rule 140 (type_qualifier)


State 4

  105 type_specifier: DOUBLE •

    $default  reduce using rule 105 (type_specifier)


State 5

  131 enum_specifier: ENUM • identifier_opt OPENCB enumerator_list CLOSECB
  132               | ENUM • identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | ENUM • IDENTIFIER
  134 identifier_opt: • IDENTIFIER
  135               | ε •  [OPENCB]

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 135 (identifier_opt)

    identifier_opt  go to state 37


State 6

   95 storage_class_specifier: EXTERN •

    $default  reduce using rule 95 (storage_class_specifier)


State 7

   98 storage_class_specifier: REGISTER •

    $default  reduce using rule 98 (storage_class_specifier)


State 8

  104 type_specifier: FLOAT •

    $default  reduce using rule 104 (type_specifier)


State 9

  143 function_specifier: INLINE •

    $default  reduce using rule 143 (function_specifier)


State 10

  102 type_specifier: INT •

    $default  reduce using rule 102 (type_specifier)


State 11

  103 type_specifier: LONG •

    $default  reduce using rule 103 (type_specifier)


State 12

  141 type_qualifier: RESTRICT •

    $default  reduce using rule 141 (type_qualifier)


State 13

  101 type_specifier: SHORT •

    $default  reduce using rule 101 (type_specifier)


State 14

  106 type_specifier: SIGNED •

    $default  reduce using rule 106 (type_specifier)


State 15

   96 storage_class_specifier: STATIC •

    $default  reduce using rule 96 (storage_class_specifier)


State 16

  120 struct_or_union: STRUCT •

    $default  reduce using rule 120 (struct_or_union)


State 17

  121 struct_or_union: UNION •

    $default  reduce using rule 121 (struct_or_union)


State 18

  107 type_specifier: UNSIGNED •

    $default  reduce using rule 107 (type_specifier)


State 19

   99 type_specifier: VOID •

    $default  reduce using rule 99 (type_specifier)


State 20

  142 type_qualifier: VOLATILE •

    $default  reduce using rule 142 (type_qualifier)


State 21

  108 type_specifier: _BOOL •

    $default  reduce using rule 108 (type_specifier)


State 22

  109 type_specifier: _COMPLEX •

    $default  reduce using rule 109 (type_specifier)


State 23

  110 type_specifier: _IMAGINARY •

    $default  reduce using rule 110 (type_specifier)


State 24

  228 external_declaration: declaration •

    $default  reduce using rule 228 (external_declaration)


State 25

   82 declaration: declaration_specifiers • init_declarator_list_opt SEMICOLON
   83 init_declarator_list_opt: • init_declarator_list
   84                         | ε •  [SEMICOLON]
   91 init_declarator_list: • init_declarator
   92                     | • init_declarator_list COMMA init_declarator
   93 init_declarator: • declarator
   94                | • declarator EQUAL initializer
  144 declarator: • pointer direct_declarator
  145           | • direct_declarator
  146 direct_declarator: • IDENTIFIER
  147                  | • OPENRB declarator CLOSERB
  148                  | • direct_declarator OPENSB type_qualifier_list assignment_expression CLOSESB
  149                  | • direct_declarator OPENSB type_qualifier_list CLOSESB
  150                  | • direct_declarator OPENSB assignment_expression CLOSESB
  151                  | • direct_declarator OPENSB CLOSESB
  152                  | • direct_declarator OPENSB STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | • direct_declarator OPENSB STATIC assignment_expression CLOSESB
  154                  | • direct_declarator OPENSB type_qualifier_list KSTAR CLOSESB
  155                  | • direct_declarator OPENSB KSTAR CLOSESB
  156                  | • direct_declarator OPENRB changetable parameter_type_list CLOSERB
  157                  | • direct_declarator OPENRB identifier_list CLOSERB
  158                  | • direct_declarator OPENRB changetable CLOSERB
  161 pointer: • KSTAR type_qualifier_list_opt
  162        | • KSTAR type_qualifier_list_opt pointer
  229 function_definition: declaration_specifiers • declarator declaration_list_opt changetable OPENCB block_item_list_opt CLOSECB

    IDENTIFIER  shift, and go to state 38
    OPENRB      shift, and go to state 39
    KSTAR       shift, and go to state 40

    $default  reduce using rule 84 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 41
    init_declarator_list      go to state 42
    init_declarator           go to state 43
    declarator                go to state 44
    direct_declarator         go to state 45
    pointer                   go to state 46


State 26

   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   85                       | storage_class_specifier • declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   89 declaration_specifiers_opt: • declaration_specifiers
   90                           | ε •  [IDENTIFIER, OPENRB, CLOSERB, KSTAR, SEMICOLON, COMMA]
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 48
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 27

   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   86                       | type_specifier • declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   89 declaration_specifiers_opt: • declaration_specifiers
   90                           | ε •  [IDENTIFIER, OPENRB, CLOSERB, KSTAR, SEMICOLON, COMMA]
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 49
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 28

  112 type_specifier: struct_or_union_specifier •

    $default  reduce using rule 112 (type_specifier)


State 29

  117 struct_or_union_specifier: struct_or_union • OPENCB struct_declaration_list CLOSECB
  118                          | struct_or_union • IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | struct_or_union • IDENTIFIER

    IDENTIFIER  shift, and go to state 50
    OPENCB      shift, and go to state 51


State 30

  111 type_specifier: enum_specifier •

    $default  reduce using rule 111 (type_specifier)


State 31

   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   87                       | type_qualifier • declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   89 declaration_specifiers_opt: • declaration_specifiers
   90                           | ε •  [IDENTIFIER, OPENRB, CLOSERB, KSTAR, SEMICOLON, COMMA]
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 52
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 32

   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   88                       | function_specifier • declaration_specifiers_opt
   89 declaration_specifiers_opt: • declaration_specifiers
   90                           | ε •  [IDENTIFIER, OPENRB, CLOSERB, KSTAR, SEMICOLON, COMMA]
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 53
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 33

    0 $accept: translation_unit • $end
   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  226 translation_unit: translation_unit • external_declaration
  227 external_declaration: • function_definition
  228                     | • declaration
  229 function_definition: • declaration_specifiers declarator declaration_list_opt changetable OPENCB block_item_list_opt CLOSECB

    $end        shift, and go to state 54
    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    external_declaration       go to state 55
    function_definition        go to state 35


State 34

  225 translation_unit: external_declaration •

    $default  reduce using rule 225 (translation_unit)


State 35

  227 external_declaration: function_definition •

    $default  reduce using rule 227 (external_declaration)


State 36

  133 enum_specifier: ENUM IDENTIFIER •  [AUTO, CHAR, CONST, DOUBLE, ENUM, EXTERN, REGISTER, FLOAT, INLINE, INT, LONG, RESTRICT, SHORT, SIGNED, STATIC, STRUCT, UNION, UNSIGNED, VOID, VOLATILE, _BOOL, _COMPLEX, _IMAGINARY, IDENTIFIER, OPENRB, CLOSERB, KSTAR, COLON, SEMICOLON, COMMA]
  134 identifier_opt: IDENTIFIER •  [OPENCB]

    OPENCB    reduce using rule 134 (identifier_opt)
    $default  reduce using rule 133 (enum_specifier)


State 37

  131 enum_specifier: ENUM identifier_opt • OPENCB enumerator_list CLOSECB
  132               | ENUM identifier_opt • OPENCB enumerator_list COMMA CLOSECB

    OPENCB  shift, and go to state 56


State 38

  146 direct_declarator: IDENTIFIER •

    $default  reduce using rule 146 (direct_declarator)


State 39

  144 declarator: • pointer direct_declarator
  145           | • direct_declarator
  146 direct_declarator: • IDENTIFIER
  147                  | • OPENRB declarator CLOSERB
  147                  | OPENRB • declarator CLOSERB
  148                  | • direct_declarator OPENSB type_qualifier_list assignment_expression CLOSESB
  149                  | • direct_declarator OPENSB type_qualifier_list CLOSESB
  150                  | • direct_declarator OPENSB assignment_expression CLOSESB
  151                  | • direct_declarator OPENSB CLOSESB
  152                  | • direct_declarator OPENSB STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | • direct_declarator OPENSB STATIC assignment_expression CLOSESB
  154                  | • direct_declarator OPENSB type_qualifier_list KSTAR CLOSESB
  155                  | • direct_declarator OPENSB KSTAR CLOSESB
  156                  | • direct_declarator OPENRB changetable parameter_type_list CLOSERB
  157                  | • direct_declarator OPENRB identifier_list CLOSERB
  158                  | • direct_declarator OPENRB changetable CLOSERB
  161 pointer: • KSTAR type_qualifier_list_opt
  162        | • KSTAR type_qualifier_list_opt pointer

    IDENTIFIER  shift, and go to state 38
    OPENRB      shift, and go to state 39
    KSTAR       shift, and go to state 40

    declarator         go to state 57
    direct_declarator  go to state 45
    pointer            go to state 46


State 40

  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  159 type_qualifier_list_opt: • type_qualifier_list
  160                        | ε •  [IDENTIFIER, OPENRB, KSTAR]
  161 pointer: KSTAR • type_qualifier_list_opt
  162        | KSTAR • type_qualifier_list_opt pointer
  163 type_qualifier_list: • type_qualifier
  164                    | • type_qualifier_list type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 160 (type_qualifier_list_opt)

    type_qualifier           go to state 58
    type_qualifier_list_opt  go to state 59
    type_qualifier_list      go to state 60


State 41

   82 declaration: declaration_specifiers init_declarator_list_opt • SEMICOLON

    SEMICOLON  shift, and go to state 61


State 42

   83 init_declarator_list_opt: init_declarator_list •  [SEMICOLON]
   92 init_declarator_list: init_declarator_list • COMMA init_declarator

    COMMA  shift, and go to state 62

    $default  reduce using rule 83 (init_declarator_list_opt)


State 43

   91 init_declarator_list: init_declarator •

    $default  reduce using rule 91 (init_declarator_list)


State 44

   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   93 init_declarator: declarator •  [SEMICOLON, COMMA]
   94                | declarator • EQUAL initializer
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  229 function_definition: declaration_specifiers declarator • declaration_list_opt changetable OPENCB block_item_list_opt CLOSECB
  230 declaration_list_opt: • declaration_list
  231                     | ε •  [OPENCB]
  232 declaration_list: • declaration
  233                 | • declaration_list declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23
    EQUAL       shift, and go to state 63

    OPENCB    reduce using rule 231 (declaration_list_opt)
    $default  reduce using rule 93 (init_declarator)

    declaration                go to state 64
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    declaration_list_opt       go to state 66
    declaration_list           go to state 67


State 45

  145 declarator: direct_declarator •  [AUTO, CHAR, CONST, DOUBLE, ENUM, EXTERN, REGISTER, FLOAT, INLINE, INT, LONG, RESTRICT, SHORT, SIGNED, STATIC, STRUCT, UNION, UNSIGNED, VOID, VOLATILE, _BOOL, _COMPLEX, _IMAGINARY, CLOSERB, OPENCB, COLON, SEMICOLON, EQUAL, COMMA]
  148 direct_declarator: direct_declarator • OPENSB type_qualifier_list assignment_expression CLOSESB
  149                  | direct_declarator • OPENSB type_qualifier_list CLOSESB
  150                  | direct_declarator • OPENSB assignment_expression CLOSESB
  151                  | direct_declarator • OPENSB CLOSESB
  152                  | direct_declarator • OPENSB STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | direct_declarator • OPENSB STATIC assignment_expression CLOSESB
  154                  | direct_declarator • OPENSB type_qualifier_list KSTAR CLOSESB
  155                  | direct_declarator • OPENSB KSTAR CLOSESB
  156                  | direct_declarator • OPENRB changetable parameter_type_list CLOSERB
  157                  | direct_declarator • OPENRB identifier_list CLOSERB
  158                  | direct_declarator • OPENRB changetable CLOSERB

    OPENSB  shift, and go to state 68
    OPENRB  shift, and go to state 69

    $default  reduce using rule 145 (declarator)


State 46

  144 declarator: pointer • direct_declarator
  146 direct_declarator: • IDENTIFIER
  147                  | • OPENRB declarator CLOSERB
  148                  | • direct_declarator OPENSB type_qualifier_list assignment_expression CLOSESB
  149                  | • direct_declarator OPENSB type_qualifier_list CLOSESB
  150                  | • direct_declarator OPENSB assignment_expression CLOSESB
  151                  | • direct_declarator OPENSB CLOSESB
  152                  | • direct_declarator OPENSB STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | • direct_declarator OPENSB STATIC assignment_expression CLOSESB
  154                  | • direct_declarator OPENSB type_qualifier_list KSTAR CLOSESB
  155                  | • direct_declarator OPENSB KSTAR CLOSESB
  156                  | • direct_declarator OPENRB changetable parameter_type_list CLOSERB
  157                  | • direct_declarator OPENRB identifier_list CLOSERB
  158                  | • direct_declarator OPENRB changetable CLOSERB

    IDENTIFIER  shift, and go to state 38
    OPENRB      shift, and go to state 39

    direct_declarator  go to state 70


State 47

   89 declaration_specifiers_opt: declaration_specifiers •

    $default  reduce using rule 89 (declaration_specifiers_opt)


State 48

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt •

    $default  reduce using rule 85 (declaration_specifiers)


State 49

   86 declaration_specifiers: type_specifier declaration_specifiers_opt •

    $default  reduce using rule 86 (declaration_specifiers)


State 50

  118 struct_or_union_specifier: struct_or_union IDENTIFIER • OPENCB struct_declaration_list CLOSECB
  119                          | struct_or_union IDENTIFIER •  [AUTO, CHAR, CONST, DOUBLE, ENUM, EXTERN, REGISTER, FLOAT, INLINE, INT, LONG, RESTRICT, SHORT, SIGNED, STATIC, STRUCT, UNION, UNSIGNED, VOID, VOLATILE, _BOOL, _COMPLEX, _IMAGINARY, IDENTIFIER, OPENRB, CLOSERB, KSTAR, COLON, SEMICOLON, COMMA]

    OPENCB  shift, and go to state 71

    $default  reduce using rule 119 (struct_or_union_specifier)


State 51

   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  113 specifier_qualifier_list: • type_specifier specifier_qualifier_list_opt
  114                         | • type_qualifier specifier_qualifier_list_opt
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  117                          | struct_or_union OPENCB • struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  122 struct_declaration_list: • struct_declaration
  123                        | • struct_declaration_list struct_declaration
  124 struct_declaration: • specifier_qualifier_list SEMICOLON
  125                   | • specifier_qualifier_list struct_declarator_list SEMICOLON
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 74
    struct_declaration         go to state 75
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 52

   87 declaration_specifiers: type_qualifier declaration_specifiers_opt •

    $default  reduce using rule 87 (declaration_specifiers)


State 53

   88 declaration_specifiers: function_specifier declaration_specifiers_opt •

    $default  reduce using rule 88 (declaration_specifiers)


State 54

    0 $accept: translation_unit $end •

    $default  accept


State 55

  226 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 226 (translation_unit)


State 56

  131 enum_specifier: ENUM identifier_opt OPENCB • enumerator_list CLOSECB
  132               | ENUM identifier_opt OPENCB • enumerator_list COMMA CLOSECB
  136 enumerator_list: • enumerator
  137                | • enumerator_list COMMA enumerator
  138 enumerator: • IDENTIFIER
  139           | • IDENTIFIER EQUAL constant_expression

    IDENTIFIER  shift, and go to state 77

    enumerator_list  go to state 78
    enumerator       go to state 79


State 57

  147 direct_declarator: OPENRB declarator • CLOSERB

    CLOSERB  shift, and go to state 80


State 58

  163 type_qualifier_list: type_qualifier •

    $default  reduce using rule 163 (type_qualifier_list)


State 59

  161 pointer: • KSTAR type_qualifier_list_opt
  161        | KSTAR type_qualifier_list_opt •  [IDENTIFIER, OPENRB]
  162        | • KSTAR type_qualifier_list_opt pointer
  162        | KSTAR type_qualifier_list_opt • pointer

    KSTAR  shift, and go to state 40

    $default  reduce using rule 161 (pointer)

    pointer  go to state 81


State 60

  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  159 type_qualifier_list_opt: type_qualifier_list •  [IDENTIFIER, OPENRB, KSTAR]
  164 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST     shift, and go to state 3
    RESTRICT  shift, and go to state 12
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 159 (type_qualifier_list_opt)

    type_qualifier  go to state 82


State 61

   82 declaration: declaration_specifiers init_declarator_list_opt SEMICOLON •

    $default  reduce using rule 82 (declaration)


State 62

   92 init_declarator_list: init_declarator_list COMMA • init_declarator
   93 init_declarator: • declarator
   94                | • declarator EQUAL initializer
  144 declarator: • pointer direct_declarator
  145           | • direct_declarator
  146 direct_declarator: • IDENTIFIER
  147                  | • OPENRB declarator CLOSERB
  148                  | • direct_declarator OPENSB type_qualifier_list assignment_expression CLOSESB
  149                  | • direct_declarator OPENSB type_qualifier_list CLOSESB
  150                  | • direct_declarator OPENSB assignment_expression CLOSESB
  151                  | • direct_declarator OPENSB CLOSESB
  152                  | • direct_declarator OPENSB STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | • direct_declarator OPENSB STATIC assignment_expression CLOSESB
  154                  | • direct_declarator OPENSB type_qualifier_list KSTAR CLOSESB
  155                  | • direct_declarator OPENSB KSTAR CLOSESB
  156                  | • direct_declarator OPENRB changetable parameter_type_list CLOSERB
  157                  | • direct_declarator OPENRB identifier_list CLOSERB
  158                  | • direct_declarator OPENRB changetable CLOSERB
  161 pointer: • KSTAR type_qualifier_list_opt
  162        | • KSTAR type_qualifier_list_opt pointer

    IDENTIFIER  shift, and go to state 38
    OPENRB      shift, and go to state 39
    KSTAR       shift, and go to state 40

    init_declarator    go to state 83
    declarator         go to state 84
    direct_declarator  go to state 45
    pointer            go to state 46


State 63

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   94 init_declarator: declarator EQUAL • initializer
  174 initializer: • assignment_expression
  175            | • OPENCB initializer_list CLOSECB
  176            | • OPENCB initializer_list COMMA CLOSECB

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 92
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 118
    initializer                go to state 119


State 64

  232 declaration_list: declaration •

    $default  reduce using rule 232 (declaration_list)


State 65

   82 declaration: declaration_specifiers • init_declarator_list_opt SEMICOLON
   83 init_declarator_list_opt: • init_declarator_list
   84                         | ε •  [SEMICOLON]
   91 init_declarator_list: • init_declarator
   92                     | • init_declarator_list COMMA init_declarator
   93 init_declarator: • declarator
   94                | • declarator EQUAL initializer
  144 declarator: • pointer direct_declarator
  145           | • direct_declarator
  146 direct_declarator: • IDENTIFIER
  147                  | • OPENRB declarator CLOSERB
  148                  | • direct_declarator OPENSB type_qualifier_list assignment_expression CLOSESB
  149                  | • direct_declarator OPENSB type_qualifier_list CLOSESB
  150                  | • direct_declarator OPENSB assignment_expression CLOSESB
  151                  | • direct_declarator OPENSB CLOSESB
  152                  | • direct_declarator OPENSB STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | • direct_declarator OPENSB STATIC assignment_expression CLOSESB
  154                  | • direct_declarator OPENSB type_qualifier_list KSTAR CLOSESB
  155                  | • direct_declarator OPENSB KSTAR CLOSESB
  156                  | • direct_declarator OPENRB changetable parameter_type_list CLOSERB
  157                  | • direct_declarator OPENRB identifier_list CLOSERB
  158                  | • direct_declarator OPENRB changetable CLOSERB
  161 pointer: • KSTAR type_qualifier_list_opt
  162        | • KSTAR type_qualifier_list_opt pointer

    IDENTIFIER  shift, and go to state 38
    OPENRB      shift, and go to state 39
    KSTAR       shift, and go to state 40

    $default  reduce using rule 84 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 41
    init_declarator_list      go to state 42
    init_declarator           go to state 43
    declarator                go to state 84
    direct_declarator         go to state 45
    pointer                   go to state 46


State 66

    1 changetable: ε •
  229 function_definition: declaration_specifiers declarator declaration_list_opt • changetable OPENCB block_item_list_opt CLOSECB

    $default  reduce using rule 1 (changetable)

    changetable  go to state 120


State 67

   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  230 declaration_list_opt: declaration_list •  [OPENCB]
  233 declaration_list: declaration_list • declaration

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23

    $default  reduce using rule 230 (declaration_list_opt)

    declaration                go to state 121
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32


State 68

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  148 direct_declarator: direct_declarator OPENSB • type_qualifier_list assignment_expression CLOSESB
  149                  | direct_declarator OPENSB • type_qualifier_list CLOSESB
  150                  | direct_declarator OPENSB • assignment_expression CLOSESB
  151                  | direct_declarator OPENSB • CLOSESB
  152                  | direct_declarator OPENSB • STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | direct_declarator OPENSB • STATIC assignment_expression CLOSESB
  154                  | direct_declarator OPENSB • type_qualifier_list KSTAR CLOSESB
  155                  | direct_declarator OPENSB • KSTAR CLOSESB
  163 type_qualifier_list: • type_qualifier
  164                    | • type_qualifier_list type_qualifier

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 85
    STATIC          shift, and go to state 122
    VOLATILE        shift, and go to state 20
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    CLOSESB         shift, and go to state 123
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 124
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 125
    type_qualifier             go to state 58
    type_qualifier_list        go to state 126


State 69

    1 changetable: ε •  [AUTO, CHAR, CONST, DOUBLE, ENUM, EXTERN, REGISTER, FLOAT, INLINE, INT, LONG, RESTRICT, SHORT, SIGNED, STATIC, STRUCT, UNION, UNSIGNED, VOID, VOLATILE, _BOOL, _COMPLEX, _IMAGINARY, CLOSERB]
  156 direct_declarator: direct_declarator OPENRB • changetable parameter_type_list CLOSERB
  157                  | direct_declarator OPENRB • identifier_list CLOSERB
  158                  | direct_declarator OPENRB • changetable CLOSERB
  171 identifier_list: • IDENTIFIER
  172                | • identifier_list COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 127

    $default  reduce using rule 1 (changetable)

    changetable      go to state 128
    identifier_list  go to state 129


State 70

  144 declarator: pointer direct_declarator •  [AUTO, CHAR, CONST, DOUBLE, ENUM, EXTERN, REGISTER, FLOAT, INLINE, INT, LONG, RESTRICT, SHORT, SIGNED, STATIC, STRUCT, UNION, UNSIGNED, VOID, VOLATILE, _BOOL, _COMPLEX, _IMAGINARY, CLOSERB, OPENCB, COLON, SEMICOLON, EQUAL, COMMA]
  148 direct_declarator: direct_declarator • OPENSB type_qualifier_list assignment_expression CLOSESB
  149                  | direct_declarator • OPENSB type_qualifier_list CLOSESB
  150                  | direct_declarator • OPENSB assignment_expression CLOSESB
  151                  | direct_declarator • OPENSB CLOSESB
  152                  | direct_declarator • OPENSB STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | direct_declarator • OPENSB STATIC assignment_expression CLOSESB
  154                  | direct_declarator • OPENSB type_qualifier_list KSTAR CLOSESB
  155                  | direct_declarator • OPENSB KSTAR CLOSESB
  156                  | direct_declarator • OPENRB changetable parameter_type_list CLOSERB
  157                  | direct_declarator • OPENRB identifier_list CLOSERB
  158                  | direct_declarator • OPENRB changetable CLOSERB

    OPENSB  shift, and go to state 68
    OPENRB  shift, and go to state 69

    $default  reduce using rule 144 (declarator)


State 71

   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  113 specifier_qualifier_list: • type_specifier specifier_qualifier_list_opt
  114                         | • type_qualifier specifier_qualifier_list_opt
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  118                          | struct_or_union IDENTIFIER OPENCB • struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  122 struct_declaration_list: • struct_declaration
  123                        | • struct_declaration_list struct_declaration
  124 struct_declaration: • specifier_qualifier_list SEMICOLON
  125                   | • specifier_qualifier_list struct_declarator_list SEMICOLON
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 130
    struct_declaration         go to state 75
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 72

   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  113 specifier_qualifier_list: • type_specifier specifier_qualifier_list_opt
  113                         | type_specifier • specifier_qualifier_list_opt
  114                         | • type_qualifier specifier_qualifier_list_opt
  115 specifier_qualifier_list_opt: • specifier_qualifier_list
  116                             | ε •  [IDENTIFIER, OPENRB, CLOSERB, KSTAR, COLON, SEMICOLON]
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23

    $default  reduce using rule 116 (specifier_qualifier_list_opt)

    type_specifier                go to state 72
    specifier_qualifier_list      go to state 131
    specifier_qualifier_list_opt  go to state 132
    struct_or_union_specifier     go to state 28
    struct_or_union               go to state 29
    enum_specifier                go to state 30
    type_qualifier                go to state 76


State 73

  124 struct_declaration: specifier_qualifier_list • SEMICOLON
  125                   | specifier_qualifier_list • struct_declarator_list SEMICOLON
  126 struct_declarator_list: • struct_declarator
  127                       | • struct_declarator_list COMMA struct_declarator
  128 struct_declarator: • COLON constant_expression
  129                  | • declarator COLON constant_expression
  130                  | • declarator
  144 declarator: • pointer direct_declarator
  145           | • direct_declarator
  146 direct_declarator: • IDENTIFIER
  147                  | • OPENRB declarator CLOSERB
  148                  | • direct_declarator OPENSB type_qualifier_list assignment_expression CLOSESB
  149                  | • direct_declarator OPENSB type_qualifier_list CLOSESB
  150                  | • direct_declarator OPENSB assignment_expression CLOSESB
  151                  | • direct_declarator OPENSB CLOSESB
  152                  | • direct_declarator OPENSB STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | • direct_declarator OPENSB STATIC assignment_expression CLOSESB
  154                  | • direct_declarator OPENSB type_qualifier_list KSTAR CLOSESB
  155                  | • direct_declarator OPENSB KSTAR CLOSESB
  156                  | • direct_declarator OPENRB changetable parameter_type_list CLOSERB
  157                  | • direct_declarator OPENRB identifier_list CLOSERB
  158                  | • direct_declarator OPENRB changetable CLOSERB
  161 pointer: • KSTAR type_qualifier_list_opt
  162        | • KSTAR type_qualifier_list_opt pointer

    IDENTIFIER  shift, and go to state 38
    OPENRB      shift, and go to state 39
    KSTAR       shift, and go to state 40
    COLON       shift, and go to state 133
    SEMICOLON   shift, and go to state 134

    struct_declarator_list  go to state 135
    struct_declarator       go to state 136
    declarator              go to state 137
    direct_declarator       go to state 45
    pointer                 go to state 46


State 74

   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  113 specifier_qualifier_list: • type_specifier specifier_qualifier_list_opt
  114                         | • type_qualifier specifier_qualifier_list_opt
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  117                          | struct_or_union OPENCB struct_declaration_list • CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  123 struct_declaration_list: struct_declaration_list • struct_declaration
  124 struct_declaration: • specifier_qualifier_list SEMICOLON
  125                   | • specifier_qualifier_list struct_declarator_list SEMICOLON
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23
    CLOSECB     shift, and go to state 138

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 139
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 75

  122 struct_declaration_list: struct_declaration •

    $default  reduce using rule 122 (struct_declaration_list)


State 76

   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  113 specifier_qualifier_list: • type_specifier specifier_qualifier_list_opt
  114                         | • type_qualifier specifier_qualifier_list_opt
  114                         | type_qualifier • specifier_qualifier_list_opt
  115 specifier_qualifier_list_opt: • specifier_qualifier_list
  116                             | ε •  [IDENTIFIER, OPENRB, CLOSERB, KSTAR, COLON, SEMICOLON]
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23

    $default  reduce using rule 116 (specifier_qualifier_list_opt)

    type_specifier                go to state 72
    specifier_qualifier_list      go to state 131
    specifier_qualifier_list_opt  go to state 140
    struct_or_union_specifier     go to state 28
    struct_or_union               go to state 29
    enum_specifier                go to state 30
    type_qualifier                go to state 76


State 77

  138 enumerator: IDENTIFIER •  [CLOSECB, COMMA]
  139           | IDENTIFIER • EQUAL constant_expression

    EQUAL  shift, and go to state 141

    $default  reduce using rule 138 (enumerator)


State 78

  131 enum_specifier: ENUM identifier_opt OPENCB enumerator_list • CLOSECB
  132               | ENUM identifier_opt OPENCB enumerator_list • COMMA CLOSECB
  137 enumerator_list: enumerator_list • COMMA enumerator

    CLOSECB  shift, and go to state 142
    COMMA    shift, and go to state 143


State 79

  136 enumerator_list: enumerator •

    $default  reduce using rule 136 (enumerator_list)


State 80

  147 direct_declarator: OPENRB declarator CLOSERB •

    $default  reduce using rule 147 (direct_declarator)


State 81

  162 pointer: KSTAR type_qualifier_list_opt pointer •

    $default  reduce using rule 162 (pointer)


State 82

  164 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 164 (type_qualifier_list)


State 83

   92 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 92 (init_declarator_list)


State 84

   93 init_declarator: declarator •  [SEMICOLON, COMMA]
   94                | declarator • EQUAL initializer

    EQUAL  shift, and go to state 63

    $default  reduce using rule 93 (init_declarator)


State 85

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   26                 | SIZEOF • unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   27                 | SIZEOF • OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 144
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant            go to state 101
    primary_expression  go to state 102
    postfix_expression  go to state 103
    unary_expression    go to state 145
    unary_operator      go to state 105


State 86

    6 primary_expression: IDENTIFIER •

    $default  reduce using rule 6 (primary_expression)


State 87

    2 constant: INTEGER_CONST •

    $default  reduce using rule 2 (constant)


State 88

    4 constant: CHAR_CONST •

    $default  reduce using rule 4 (constant)


State 89

    3 constant: FLOAT_CONST •

    $default  reduce using rule 3 (constant)


State 90

    5 constant: STRING_LITERAL •

    $default  reduce using rule 5 (constant)


State 91

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    8                   | OPENRB • expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   16                   | OPENRB • type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   17                   | OPENRB • type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   35                | OPENRB • type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  113 specifier_qualifier_list: • type_specifier specifier_qualifier_list_opt
  114                         | • type_qualifier specifier_qualifier_list_opt
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  173 type_name: • specifier_qualifier_list

    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    FLOAT           shift, and go to state 8
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 85
    STRUCT          shift, and go to state 16
    UNION           shift, and go to state 17
    UNSIGNED        shift, and go to state 18
    VOID            shift, and go to state 19
    VOLATILE        shift, and go to state 20
    _BOOL           shift, and go to state 21
    _COMPLEX        shift, and go to state 22
    _IMAGINARY      shift, and go to state 23
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 147
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 148
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 149


State 92

  175 initializer: OPENCB • initializer_list CLOSECB
  176            | OPENCB • initializer_list COMMA CLOSECB
  177 initializer_list: • designation_opt initializer
  178                 | • initializer_list COMMA designation_opt initializer
  179 designation_opt: • designation
  180                | ε •  [SIZEOF, IDENTIFIER, INTEGER_CONST, CHAR_CONST, FLOAT_CONST, STRING_LITERAL, OPENRB, OPENCB, PLUSPLUS, MINUSMINS, BAND, KSTAR, PLUS, MINUS, TILDA, NOT]
  181 designation: • designator_list EQUAL
  182 designator_list: • designator
  183                | • designator_list designator
  184 designator: • OPENSB constant_expression CLOSESB
  185           | • DOT IDENTIFIER

    OPENSB  shift, and go to state 150
    DOT     shift, and go to state 151

    $default  reduce using rule 180 (designation_opt)

    initializer_list  go to state 152
    designation_opt   go to state 153
    designation       go to state 154
    designator_list   go to state 155
    designator        go to state 156


State 93

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   23                 | PLUSPLUS • unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 157
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant            go to state 101
    primary_expression  go to state 102
    postfix_expression  go to state 103
    unary_expression    go to state 158
    unary_operator      go to state 105


State 94

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   24                 | MINUSMINS • unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 157
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant            go to state 101
    primary_expression  go to state 102
    postfix_expression  go to state 103
    unary_expression    go to state 159
    unary_operator      go to state 105


State 95

   28 unary_operator: BAND •

    $default  reduce using rule 28 (unary_operator)


State 96

   29 unary_operator: KSTAR •

    $default  reduce using rule 29 (unary_operator)


State 97

   30 unary_operator: PLUS •

    $default  reduce using rule 30 (unary_operator)


State 98

   31 unary_operator: MINUS •

    $default  reduce using rule 31 (unary_operator)


State 99

   32 unary_operator: TILDA •

    $default  reduce using rule 32 (unary_operator)


State 100

   33 unary_operator: NOT •

    $default  reduce using rule 33 (unary_operator)


State 101

    7 primary_expression: constant •

    $default  reduce using rule 7 (primary_expression)


State 102

    9 postfix_expression: primary_expression •

    $default  reduce using rule 9 (postfix_expression)


State 103

   10 postfix_expression: postfix_expression • OPENSB expression CLOSESB
   11                   | postfix_expression • OPENRB argument_expression_list_opt CLOSERB
   12                   | postfix_expression • DOT IDENTIFIER
   13                   | postfix_expression • RIGHTARROW IDENTIFIER
   14                   | postfix_expression • PLUSPLUS
   15                   | postfix_expression • MINUSMINS
   22 unary_expression: postfix_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, KSTAR, PLUS, MINUS, DIVIDE, MODULO, LEFTS, RIGHTS, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, EQUAL, MULEQUAL, DIVEQUAL, MODEQUAL, PLUSEQUAL, MINUSEQUAL, SHIFTLEQUAL, SHIFTREQUAL, ANDEQUAL, XOREQUAL, OREQUAL, COMMA]

    OPENSB      shift, and go to state 160
    OPENRB      shift, and go to state 161
    DOT         shift, and go to state 162
    RIGHTARROW  shift, and go to state 163
    PLUSPLUS    shift, and go to state 164
    MINUSMINS   shift, and go to state 165

    $default  reduce using rule 22 (unary_expression)


State 104

   34 cast_expression: unary_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, KSTAR, PLUS, MINUS, DIVIDE, MODULO, LEFTS, RIGHTS, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]
   67 assignment_expression: unary_expression • assignment_operator assignment_expression
   68 assignment_operator: • EQUAL
   69                    | • MULEQUAL
   70                    | • DIVEQUAL
   71                    | • MODEQUAL
   72                    | • PLUSEQUAL
   73                    | • MINUSEQUAL
   74                    | • SHIFTLEQUAL
   75                    | • SHIFTREQUAL
   76                    | • ANDEQUAL
   77                    | • XOREQUAL
   78                    | • OREQUAL

    EQUAL        shift, and go to state 166
    MULEQUAL     shift, and go to state 167
    DIVEQUAL     shift, and go to state 168
    MODEQUAL     shift, and go to state 169
    PLUSEQUAL    shift, and go to state 170
    MINUSEQUAL   shift, and go to state 171
    SHIFTLEQUAL  shift, and go to state 172
    SHIFTREQUAL  shift, and go to state 173
    ANDEQUAL     shift, and go to state 174
    XOREQUAL     shift, and go to state 175
    OREQUAL      shift, and go to state 176

    $default  reduce using rule 34 (cast_expression)

    assignment_operator  go to state 177


State 105

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   25                 | unary_operator • cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant            go to state 101
    primary_expression  go to state 102
    postfix_expression  go to state 103
    unary_expression    go to state 178
    unary_operator      go to state 105
    cast_expression     go to state 179


State 106

   36 multiplicative_expression: cast_expression •

    $default  reduce using rule 36 (multiplicative_expression)


State 107

   37 multiplicative_expression: multiplicative_expression • KSTAR cast_expression
   38                          | multiplicative_expression • DIVIDE cast_expression
   39                          | multiplicative_expression • MODULO cast_expression
   40 additive_expression: multiplicative_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, PLUS, MINUS, LEFTS, RIGHTS, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    KSTAR   shift, and go to state 180
    DIVIDE  shift, and go to state 181
    MODULO  shift, and go to state 182

    $default  reduce using rule 40 (additive_expression)


State 108

   41 additive_expression: additive_expression • PLUS multiplicative_expression
   42                    | additive_expression • MINUS multiplicative_expression
   43 shift_expression: additive_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, LEFTS, RIGHTS, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    PLUS   shift, and go to state 183
    MINUS  shift, and go to state 184

    $default  reduce using rule 43 (shift_expression)


State 109

   44 shift_expression: shift_expression • LEFTS additive_expression
   45                 | shift_expression • RIGHTS additive_expression
   46 relational_expression: shift_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    LEFTS   shift, and go to state 185
    RIGHTS  shift, and go to state 186

    $default  reduce using rule 46 (relational_expression)


State 110

   47 relational_expression: relational_expression • LESSTHAN shift_expression
   48                      | relational_expression • GREATERTHAN shift_expression
   49                      | relational_expression • LESSEQUAL shift_expression
   50                      | relational_expression • GREATEREQUAL shift_expression
   51 equality_expression: relational_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    LESSTHAN      shift, and go to state 187
    GREATERTHAN   shift, and go to state 188
    LESSEQUAL     shift, and go to state 189
    GREATEREQUAL  shift, and go to state 190

    $default  reduce using rule 51 (equality_expression)


State 111

   52 equality_expression: equality_expression • EQUALEQUAL relational_expression
   53                    | equality_expression • NOTEQUAL relational_expression
   54 and_expression: equality_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    EQUALEQUAL  shift, and go to state 191
    NOTEQUAL    shift, and go to state 192

    $default  reduce using rule 54 (and_expression)


State 112

   55 and_expression: and_expression • BAND equality_expression
   56 exclusive_or_expression: and_expression •  [CLOSESB, CLOSERB, CLOSECB, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    BAND  shift, and go to state 193

    $default  reduce using rule 56 (exclusive_or_expression)


State 113

   57 exclusive_or_expression: exclusive_or_expression • XOR and_expression
   58 inclusive_or_expression: exclusive_or_expression •  [CLOSESB, CLOSERB, CLOSECB, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    XOR  shift, and go to state 194

    $default  reduce using rule 58 (inclusive_or_expression)


State 114

   59 inclusive_or_expression: inclusive_or_expression • BITWISEOR exclusive_or_expression
   60 logical_and_expression: inclusive_or_expression •  [CLOSESB, CLOSERB, CLOSECB, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    BITWISEOR  shift, and go to state 195

    $default  reduce using rule 60 (logical_and_expression)


State 115

   61 logical_and_expression: logical_and_expression • AND M inclusive_or_expression
   62 logical_or_expression: logical_and_expression •  [CLOSESB, CLOSERB, CLOSECB, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    AND  shift, and go to state 196

    $default  reduce using rule 62 (logical_or_expression)


State 116

   63 logical_or_expression: logical_or_expression • OR M logical_and_expression
   64 conditional_expression: logical_or_expression •  [CLOSESB, CLOSERB, CLOSECB, COLON, SEMICOLON, COMMA]
   65                       | logical_or_expression • QUESTIONMARK expression COLON conditional_expression

    OR            shift, and go to state 197
    QUESTIONMARK  shift, and go to state 198

    $default  reduce using rule 64 (conditional_expression)


State 117

   66 assignment_expression: conditional_expression •

    $default  reduce using rule 66 (assignment_expression)


State 118

  174 initializer: assignment_expression •

    $default  reduce using rule 174 (initializer)


State 119

   94 init_declarator: declarator EQUAL initializer •

    $default  reduce using rule 94 (init_declarator)


State 120

  229 function_definition: declaration_specifiers declarator declaration_list_opt changetable • OPENCB block_item_list_opt CLOSECB

    OPENCB  shift, and go to state 199


State 121

  233 declaration_list: declaration_list declaration •

    $default  reduce using rule 233 (declaration_list)


State 122

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  152 direct_declarator: direct_declarator OPENSB STATIC • type_qualifier_list assignment_expression CLOSESB
  153                  | direct_declarator OPENSB STATIC • assignment_expression CLOSESB
  163 type_qualifier_list: • type_qualifier
  164                    | • type_qualifier_list type_qualifier

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 85
    VOLATILE        shift, and go to state 20
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 200
    type_qualifier             go to state 58
    type_qualifier_list        go to state 201


State 123

  151 direct_declarator: direct_declarator OPENSB CLOSESB •

    $default  reduce using rule 151 (direct_declarator)


State 124

   29 unary_operator: KSTAR •  [SIZEOF, IDENTIFIER, INTEGER_CONST, CHAR_CONST, FLOAT_CONST, STRING_LITERAL, OPENRB, PLUSPLUS, MINUSMINS, BAND, KSTAR, PLUS, MINUS, TILDA, NOT]
  155 direct_declarator: direct_declarator OPENSB KSTAR • CLOSESB

    CLOSESB  shift, and go to state 202

    $default  reduce using rule 29 (unary_operator)


State 125

  150 direct_declarator: direct_declarator OPENSB assignment_expression • CLOSESB

    CLOSESB  shift, and go to state 203


State 126

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  148 direct_declarator: direct_declarator OPENSB type_qualifier_list • assignment_expression CLOSESB
  149                  | direct_declarator OPENSB type_qualifier_list • CLOSESB
  154                  | direct_declarator OPENSB type_qualifier_list • KSTAR CLOSESB
  164 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 85
    VOLATILE        shift, and go to state 20
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    CLOSESB         shift, and go to state 204
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 205
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 206
    type_qualifier             go to state 82


State 127

  171 identifier_list: IDENTIFIER •

    $default  reduce using rule 171 (identifier_list)


State 128

   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  156 direct_declarator: direct_declarator OPENRB changetable • parameter_type_list CLOSERB
  158                  | direct_declarator OPENRB changetable • CLOSERB
  165 parameter_type_list: • parameter_list
  166                    | • parameter_list COMMA DOTDOTDOT
  167 parameter_list: • parameter_declaration
  168               | • parameter_list COMMA parameter_declaration
  169 parameter_declaration: • declaration_specifiers declarator
  170                      | • declaration_specifiers

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23
    CLOSERB     shift, and go to state 207

    declaration_specifiers     go to state 208
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    parameter_type_list        go to state 209
    parameter_list             go to state 210
    parameter_declaration      go to state 211


State 129

  157 direct_declarator: direct_declarator OPENRB identifier_list • CLOSERB
  172 identifier_list: identifier_list • COMMA IDENTIFIER

    CLOSERB  shift, and go to state 212
    COMMA    shift, and go to state 213


State 130

   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  113 specifier_qualifier_list: • type_specifier specifier_qualifier_list_opt
  114                         | • type_qualifier specifier_qualifier_list_opt
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  118                          | struct_or_union IDENTIFIER OPENCB struct_declaration_list • CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  123 struct_declaration_list: struct_declaration_list • struct_declaration
  124 struct_declaration: • specifier_qualifier_list SEMICOLON
  125                   | • specifier_qualifier_list struct_declarator_list SEMICOLON
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE

    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23
    CLOSECB     shift, and go to state 214

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 139
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 131

  115 specifier_qualifier_list_opt: specifier_qualifier_list •

    $default  reduce using rule 115 (specifier_qualifier_list_opt)


State 132

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt •

    $default  reduce using rule 113 (specifier_qualifier_list)


State 133

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   81 constant_expression: • conditional_expression
  128 struct_declarator: COLON • constant_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 215
    constant_expression        go to state 216


State 134

  124 struct_declaration: specifier_qualifier_list SEMICOLON •

    $default  reduce using rule 124 (struct_declaration)


State 135

  125 struct_declaration: specifier_qualifier_list struct_declarator_list • SEMICOLON
  127 struct_declarator_list: struct_declarator_list • COMMA struct_declarator

    SEMICOLON  shift, and go to state 217
    COMMA      shift, and go to state 218


State 136

  126 struct_declarator_list: struct_declarator •

    $default  reduce using rule 126 (struct_declarator_list)


State 137

  129 struct_declarator: declarator • COLON constant_expression
  130                  | declarator •  [SEMICOLON, COMMA]

    COLON  shift, and go to state 219

    $default  reduce using rule 130 (struct_declarator)


State 138

  117 struct_or_union_specifier: struct_or_union OPENCB struct_declaration_list CLOSECB •

    $default  reduce using rule 117 (struct_or_union_specifier)


State 139

  123 struct_declaration_list: struct_declaration_list struct_declaration •

    $default  reduce using rule 123 (struct_declaration_list)


State 140

  114 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt •

    $default  reduce using rule 114 (specifier_qualifier_list)


State 141

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   81 constant_expression: • conditional_expression
  139 enumerator: IDENTIFIER EQUAL • constant_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 215
    constant_expression        go to state 220


State 142

  131 enum_specifier: ENUM identifier_opt OPENCB enumerator_list CLOSECB •

    $default  reduce using rule 131 (enum_specifier)


State 143

  132 enum_specifier: ENUM identifier_opt OPENCB enumerator_list COMMA • CLOSECB
  137 enumerator_list: enumerator_list COMMA • enumerator
  138 enumerator: • IDENTIFIER
  139           | • IDENTIFIER EQUAL constant_expression

    IDENTIFIER  shift, and go to state 77
    CLOSECB     shift, and go to state 221

    enumerator  go to state 222


State 144

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    8                   | OPENRB • expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   16                   | OPENRB • type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   17                   | OPENRB • type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   27                 | SIZEOF OPENRB • type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  113 specifier_qualifier_list: • type_specifier specifier_qualifier_list_opt
  114                         | • type_qualifier specifier_qualifier_list_opt
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  173 type_name: • specifier_qualifier_list

    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    FLOAT           shift, and go to state 8
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 85
    STRUCT          shift, and go to state 16
    UNION           shift, and go to state 17
    UNSIGNED        shift, and go to state 18
    VOID            shift, and go to state 19
    VOLATILE        shift, and go to state 20
    _BOOL           shift, and go to state 21
    _COMPLEX        shift, and go to state 22
    _IMAGINARY      shift, and go to state 23
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 147
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 148
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 223


State 145

   26 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 26 (unary_expression)


State 146

   79 expression: assignment_expression •

    $default  reduce using rule 79 (expression)


State 147

    8 primary_expression: OPENRB expression • CLOSERB
   80 expression: expression • COMMA assignment_expression

    CLOSERB  shift, and go to state 224
    COMMA    shift, and go to state 225


State 148

  173 type_name: specifier_qualifier_list •

    $default  reduce using rule 173 (type_name)


State 149

   16 postfix_expression: OPENRB type_name • CLOSERB OPENCB initializer_list CLOSECB
   17                   | OPENRB type_name • CLOSERB OPENCB initializer_list COMMA CLOSECB
   35 cast_expression: OPENRB type_name • CLOSERB cast_expression

    CLOSERB  shift, and go to state 226


State 150

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   81 constant_expression: • conditional_expression
  184 designator: OPENSB • constant_expression CLOSESB

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 215
    constant_expression        go to state 227


State 151

  185 designator: DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 228


State 152

  175 initializer: OPENCB initializer_list • CLOSECB
  176            | OPENCB initializer_list • COMMA CLOSECB
  178 initializer_list: initializer_list • COMMA designation_opt initializer

    CLOSECB  shift, and go to state 229
    COMMA    shift, and go to state 230


State 153

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
  174 initializer: • assignment_expression
  175            | • OPENCB initializer_list CLOSECB
  176            | • OPENCB initializer_list COMMA CLOSECB
  177 initializer_list: designation_opt • initializer

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 92
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 118
    initializer                go to state 231


State 154

  179 designation_opt: designation •

    $default  reduce using rule 179 (designation_opt)


State 155

  181 designation: designator_list • EQUAL
  183 designator_list: designator_list • designator
  184 designator: • OPENSB constant_expression CLOSESB
  185           | • DOT IDENTIFIER

    OPENSB  shift, and go to state 150
    DOT     shift, and go to state 151
    EQUAL   shift, and go to state 232

    designator  go to state 233


State 156

  182 designator_list: designator •

    $default  reduce using rule 182 (designator_list)


State 157

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    8                   | OPENRB • expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   16                   | OPENRB • type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   17                   | OPENRB • type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  113 specifier_qualifier_list: • type_specifier specifier_qualifier_list_opt
  114                         | • type_qualifier specifier_qualifier_list_opt
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  173 type_name: • specifier_qualifier_list

    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    FLOAT           shift, and go to state 8
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 85
    STRUCT          shift, and go to state 16
    UNION           shift, and go to state 17
    UNSIGNED        shift, and go to state 18
    VOID            shift, and go to state 19
    VOLATILE        shift, and go to state 20
    _BOOL           shift, and go to state 21
    _COMPLEX        shift, and go to state 22
    _IMAGINARY      shift, and go to state 23
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 147
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 148
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 234


State 158

   23 unary_expression: PLUSPLUS unary_expression •

    $default  reduce using rule 23 (unary_expression)


State 159

   24 unary_expression: MINUSMINS unary_expression •

    $default  reduce using rule 24 (unary_expression)


State 160

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   10                   | postfix_expression OPENSB • expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 235


State 161

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   11                   | postfix_expression OPENRB • argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   18 argument_expression_list: • assignment_expression
   19                         | • argument_expression_list COMMA assignment_expression
   20 argument_expression_list_opt: • argument_expression_list
   21                             | ε •  [CLOSERB]
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    $default  reduce using rule 21 (argument_expression_list_opt)

    constant                      go to state 101
    primary_expression            go to state 102
    postfix_expression            go to state 103
    argument_expression_list      go to state 236
    argument_expression_list_opt  go to state 237
    unary_expression              go to state 104
    unary_operator                go to state 105
    cast_expression               go to state 106
    multiplicative_expression     go to state 107
    additive_expression           go to state 108
    shift_expression              go to state 109
    relational_expression         go to state 110
    equality_expression           go to state 111
    and_expression                go to state 112
    exclusive_or_expression       go to state 113
    inclusive_or_expression       go to state 114
    logical_and_expression        go to state 115
    logical_or_expression         go to state 116
    conditional_expression        go to state 117
    assignment_expression         go to state 238


State 162

   12 postfix_expression: postfix_expression DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 239


State 163

   13 postfix_expression: postfix_expression RIGHTARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 240


State 164

   14 postfix_expression: postfix_expression PLUSPLUS •

    $default  reduce using rule 14 (postfix_expression)


State 165

   15 postfix_expression: postfix_expression MINUSMINS •

    $default  reduce using rule 15 (postfix_expression)


State 166

   68 assignment_operator: EQUAL •

    $default  reduce using rule 68 (assignment_operator)


State 167

   69 assignment_operator: MULEQUAL •

    $default  reduce using rule 69 (assignment_operator)


State 168

   70 assignment_operator: DIVEQUAL •

    $default  reduce using rule 70 (assignment_operator)


State 169

   71 assignment_operator: MODEQUAL •

    $default  reduce using rule 71 (assignment_operator)


State 170

   72 assignment_operator: PLUSEQUAL •

    $default  reduce using rule 72 (assignment_operator)


State 171

   73 assignment_operator: MINUSEQUAL •

    $default  reduce using rule 73 (assignment_operator)


State 172

   74 assignment_operator: SHIFTLEQUAL •

    $default  reduce using rule 74 (assignment_operator)


State 173

   75 assignment_operator: SHIFTREQUAL •

    $default  reduce using rule 75 (assignment_operator)


State 174

   76 assignment_operator: ANDEQUAL •

    $default  reduce using rule 76 (assignment_operator)


State 175

   77 assignment_operator: XOREQUAL •

    $default  reduce using rule 77 (assignment_operator)


State 176

   78 assignment_operator: OREQUAL •

    $default  reduce using rule 78 (assignment_operator)


State 177

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   67                      | unary_expression assignment_operator • assignment_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 241


State 178

   34 cast_expression: unary_expression •

    $default  reduce using rule 34 (cast_expression)


State 179

   25 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 25 (unary_expression)


State 180

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   37 multiplicative_expression: multiplicative_expression KSTAR • cast_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant            go to state 101
    primary_expression  go to state 102
    postfix_expression  go to state 103
    unary_expression    go to state 178
    unary_operator      go to state 105
    cast_expression     go to state 242


State 181

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   38 multiplicative_expression: multiplicative_expression DIVIDE • cast_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant            go to state 101
    primary_expression  go to state 102
    postfix_expression  go to state 103
    unary_expression    go to state 178
    unary_operator      go to state 105
    cast_expression     go to state 243


State 182

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   39 multiplicative_expression: multiplicative_expression MODULO • cast_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant            go to state 101
    primary_expression  go to state 102
    postfix_expression  go to state 103
    unary_expression    go to state 178
    unary_operator      go to state 105
    cast_expression     go to state 244


State 183

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   41 additive_expression: additive_expression PLUS • multiplicative_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 245


State 184

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   42 additive_expression: additive_expression MINUS • multiplicative_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 246


State 185

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   44 shift_expression: shift_expression LEFTS • additive_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 247


State 186

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   45 shift_expression: shift_expression RIGHTS • additive_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 248


State 187

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   47 relational_expression: relational_expression LESSTHAN • shift_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 249


State 188

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   48 relational_expression: relational_expression GREATERTHAN • shift_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 250


State 189

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   49 relational_expression: relational_expression LESSEQUAL • shift_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 251


State 190

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   50 relational_expression: relational_expression GREATEREQUAL • shift_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 252


State 191

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   52 equality_expression: equality_expression EQUALEQUAL • relational_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 253


State 192

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   53 equality_expression: equality_expression NOTEQUAL • relational_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 254


State 193

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   55 and_expression: and_expression BAND • equality_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 255


State 194

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   57 exclusive_or_expression: exclusive_or_expression XOR • and_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 256


State 195

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   59 inclusive_or_expression: inclusive_or_expression BITWISEOR • exclusive_or_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 257


State 196

   61 logical_and_expression: logical_and_expression AND • M inclusive_or_expression
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 258


State 197

   63 logical_or_expression: logical_or_expression OR • M logical_and_expression
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 259


State 198

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   65                       | logical_or_expression QUESTIONMARK • expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 260


State 199

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  201 block_item_list: • block_item
  202                | • block_item_list M block_item
  203 block_item_list_opt: • block_item_list
  204                    | ε •  [CLOSECB]
  205 block_item: • declaration
  206           | • statement
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON
  229 function_definition: declaration_specifiers declarator declaration_list_opt changetable OPENCB • block_item_list_opt CLOSECB

    AUTO            shift, and go to state 1
    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    REGISTER        shift, and go to state 7
    FLOAT           shift, and go to state 8
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    INLINE          shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    RESTRICT        shift, and go to state 12
    RETURN          shift, and go to state 269
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 85
    STATIC          shift, and go to state 15
    STRUCT          shift, and go to state 16
    SWITCH          shift, and go to state 270
    UNION           shift, and go to state 17
    UNSIGNED        shift, and go to state 18
    VOID            shift, and go to state 19
    VOLATILE        shift, and go to state 20
    WHILE           shift, and go to state 271
    _BOOL           shift, and go to state 21
    _COMPLEX        shift, and go to state 22
    _IMAGINARY      shift, and go to state 23
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 281
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 200

  153 direct_declarator: direct_declarator OPENSB STATIC assignment_expression • CLOSESB

    CLOSESB  shift, and go to state 287


State 201

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  152 direct_declarator: direct_declarator OPENSB STATIC type_qualifier_list • assignment_expression CLOSESB
  164 type_qualifier_list: type_qualifier_list • type_qualifier

    CONST           shift, and go to state 3
    RESTRICT        shift, and go to state 12
    SIZEOF          shift, and go to state 85
    VOLATILE        shift, and go to state 20
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 288
    type_qualifier             go to state 82


State 202

  155 direct_declarator: direct_declarator OPENSB KSTAR CLOSESB •

    $default  reduce using rule 155 (direct_declarator)


State 203

  150 direct_declarator: direct_declarator OPENSB assignment_expression CLOSESB •

    $default  reduce using rule 150 (direct_declarator)


State 204

  149 direct_declarator: direct_declarator OPENSB type_qualifier_list CLOSESB •

    $default  reduce using rule 149 (direct_declarator)


State 205

   29 unary_operator: KSTAR •  [SIZEOF, IDENTIFIER, INTEGER_CONST, CHAR_CONST, FLOAT_CONST, STRING_LITERAL, OPENRB, PLUSPLUS, MINUSMINS, BAND, KSTAR, PLUS, MINUS, TILDA, NOT]
  154 direct_declarator: direct_declarator OPENSB type_qualifier_list KSTAR • CLOSESB

    CLOSESB  shift, and go to state 289

    $default  reduce using rule 29 (unary_operator)


State 206

  148 direct_declarator: direct_declarator OPENSB type_qualifier_list assignment_expression • CLOSESB

    CLOSESB  shift, and go to state 290


State 207

  158 direct_declarator: direct_declarator OPENRB changetable CLOSERB •

    $default  reduce using rule 158 (direct_declarator)


State 208

  144 declarator: • pointer direct_declarator
  145           | • direct_declarator
  146 direct_declarator: • IDENTIFIER
  147                  | • OPENRB declarator CLOSERB
  148                  | • direct_declarator OPENSB type_qualifier_list assignment_expression CLOSESB
  149                  | • direct_declarator OPENSB type_qualifier_list CLOSESB
  150                  | • direct_declarator OPENSB assignment_expression CLOSESB
  151                  | • direct_declarator OPENSB CLOSESB
  152                  | • direct_declarator OPENSB STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | • direct_declarator OPENSB STATIC assignment_expression CLOSESB
  154                  | • direct_declarator OPENSB type_qualifier_list KSTAR CLOSESB
  155                  | • direct_declarator OPENSB KSTAR CLOSESB
  156                  | • direct_declarator OPENRB changetable parameter_type_list CLOSERB
  157                  | • direct_declarator OPENRB identifier_list CLOSERB
  158                  | • direct_declarator OPENRB changetable CLOSERB
  161 pointer: • KSTAR type_qualifier_list_opt
  162        | • KSTAR type_qualifier_list_opt pointer
  169 parameter_declaration: declaration_specifiers • declarator
  170                      | declaration_specifiers •  [CLOSERB, COMMA]

    IDENTIFIER  shift, and go to state 38
    OPENRB      shift, and go to state 39
    KSTAR       shift, and go to state 40

    $default  reduce using rule 170 (parameter_declaration)

    declarator         go to state 291
    direct_declarator  go to state 45
    pointer            go to state 46


State 209

  156 direct_declarator: direct_declarator OPENRB changetable parameter_type_list • CLOSERB

    CLOSERB  shift, and go to state 292


State 210

  165 parameter_type_list: parameter_list •  [CLOSERB]
  166                    | parameter_list • COMMA DOTDOTDOT
  168 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 293

    $default  reduce using rule 165 (parameter_type_list)


State 211

  167 parameter_list: parameter_declaration •

    $default  reduce using rule 167 (parameter_list)


State 212

  157 direct_declarator: direct_declarator OPENRB identifier_list CLOSERB •

    $default  reduce using rule 157 (direct_declarator)


State 213

  172 identifier_list: identifier_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 294


State 214

  118 struct_or_union_specifier: struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB •

    $default  reduce using rule 118 (struct_or_union_specifier)


State 215

   81 constant_expression: conditional_expression •

    $default  reduce using rule 81 (constant_expression)


State 216

  128 struct_declarator: COLON constant_expression •

    $default  reduce using rule 128 (struct_declarator)


State 217

  125 struct_declaration: specifier_qualifier_list struct_declarator_list SEMICOLON •

    $default  reduce using rule 125 (struct_declaration)


State 218

  127 struct_declarator_list: struct_declarator_list COMMA • struct_declarator
  128 struct_declarator: • COLON constant_expression
  129                  | • declarator COLON constant_expression
  130                  | • declarator
  144 declarator: • pointer direct_declarator
  145           | • direct_declarator
  146 direct_declarator: • IDENTIFIER
  147                  | • OPENRB declarator CLOSERB
  148                  | • direct_declarator OPENSB type_qualifier_list assignment_expression CLOSESB
  149                  | • direct_declarator OPENSB type_qualifier_list CLOSESB
  150                  | • direct_declarator OPENSB assignment_expression CLOSESB
  151                  | • direct_declarator OPENSB CLOSESB
  152                  | • direct_declarator OPENSB STATIC type_qualifier_list assignment_expression CLOSESB
  153                  | • direct_declarator OPENSB STATIC assignment_expression CLOSESB
  154                  | • direct_declarator OPENSB type_qualifier_list KSTAR CLOSESB
  155                  | • direct_declarator OPENSB KSTAR CLOSESB
  156                  | • direct_declarator OPENRB changetable parameter_type_list CLOSERB
  157                  | • direct_declarator OPENRB identifier_list CLOSERB
  158                  | • direct_declarator OPENRB changetable CLOSERB
  161 pointer: • KSTAR type_qualifier_list_opt
  162        | • KSTAR type_qualifier_list_opt pointer

    IDENTIFIER  shift, and go to state 38
    OPENRB      shift, and go to state 39
    KSTAR       shift, and go to state 40
    COLON       shift, and go to state 133

    struct_declarator  go to state 295
    declarator         go to state 137
    direct_declarator  go to state 45
    pointer            go to state 46


State 219

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   81 constant_expression: • conditional_expression
  129 struct_declarator: declarator COLON • constant_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 215
    constant_expression        go to state 296


State 220

  139 enumerator: IDENTIFIER EQUAL constant_expression •

    $default  reduce using rule 139 (enumerator)


State 221

  132 enum_specifier: ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB •

    $default  reduce using rule 132 (enum_specifier)


State 222

  137 enumerator_list: enumerator_list COMMA enumerator •

    $default  reduce using rule 137 (enumerator_list)


State 223

   16 postfix_expression: OPENRB type_name • CLOSERB OPENCB initializer_list CLOSECB
   17                   | OPENRB type_name • CLOSERB OPENCB initializer_list COMMA CLOSECB
   27 unary_expression: SIZEOF OPENRB type_name • CLOSERB

    CLOSERB  shift, and go to state 297


State 224

    8 primary_expression: OPENRB expression CLOSERB •

    $default  reduce using rule 8 (primary_expression)


State 225

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   80 expression: expression COMMA • assignment_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 298


State 226

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   16                   | OPENRB type_name CLOSERB • OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   17                   | OPENRB type_name CLOSERB • OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   35                | OPENRB type_name CLOSERB • cast_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 299
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant            go to state 101
    primary_expression  go to state 102
    postfix_expression  go to state 103
    unary_expression    go to state 178
    unary_operator      go to state 105
    cast_expression     go to state 300


State 227

  184 designator: OPENSB constant_expression • CLOSESB

    CLOSESB  shift, and go to state 301


State 228

  185 designator: DOT IDENTIFIER •

    $default  reduce using rule 185 (designator)


State 229

  175 initializer: OPENCB initializer_list CLOSECB •

    $default  reduce using rule 175 (initializer)


State 230

  176 initializer: OPENCB initializer_list COMMA • CLOSECB
  178 initializer_list: initializer_list COMMA • designation_opt initializer
  179 designation_opt: • designation
  180                | ε •  [SIZEOF, IDENTIFIER, INTEGER_CONST, CHAR_CONST, FLOAT_CONST, STRING_LITERAL, OPENRB, OPENCB, PLUSPLUS, MINUSMINS, BAND, KSTAR, PLUS, MINUS, TILDA, NOT]
  181 designation: • designator_list EQUAL
  182 designator_list: • designator
  183                | • designator_list designator
  184 designator: • OPENSB constant_expression CLOSESB
  185           | • DOT IDENTIFIER

    OPENSB   shift, and go to state 150
    CLOSECB  shift, and go to state 302
    DOT      shift, and go to state 151

    $default  reduce using rule 180 (designation_opt)

    designation_opt  go to state 303
    designation      go to state 154
    designator_list  go to state 155
    designator       go to state 156


State 231

  177 initializer_list: designation_opt initializer •

    $default  reduce using rule 177 (initializer_list)


State 232

  181 designation: designator_list EQUAL •

    $default  reduce using rule 181 (designation)


State 233

  183 designator_list: designator_list designator •

    $default  reduce using rule 183 (designator_list)


State 234

   16 postfix_expression: OPENRB type_name • CLOSERB OPENCB initializer_list CLOSECB
   17                   | OPENRB type_name • CLOSERB OPENCB initializer_list COMMA CLOSECB

    CLOSERB  shift, and go to state 304


State 235

   10 postfix_expression: postfix_expression OPENSB expression • CLOSESB
   80 expression: expression • COMMA assignment_expression

    CLOSESB  shift, and go to state 305
    COMMA    shift, and go to state 225


State 236

   19 argument_expression_list: argument_expression_list • COMMA assignment_expression
   20 argument_expression_list_opt: argument_expression_list •  [CLOSERB]

    COMMA  shift, and go to state 306

    $default  reduce using rule 20 (argument_expression_list_opt)


State 237

   11 postfix_expression: postfix_expression OPENRB argument_expression_list_opt • CLOSERB

    CLOSERB  shift, and go to state 307


State 238

   18 argument_expression_list: assignment_expression •

    $default  reduce using rule 18 (argument_expression_list)


State 239

   12 postfix_expression: postfix_expression DOT IDENTIFIER •

    $default  reduce using rule 12 (postfix_expression)


State 240

   13 postfix_expression: postfix_expression RIGHTARROW IDENTIFIER •

    $default  reduce using rule 13 (postfix_expression)


State 241

   67 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 67 (assignment_expression)


State 242

   37 multiplicative_expression: multiplicative_expression KSTAR cast_expression •

    $default  reduce using rule 37 (multiplicative_expression)


State 243

   38 multiplicative_expression: multiplicative_expression DIVIDE cast_expression •

    $default  reduce using rule 38 (multiplicative_expression)


State 244

   39 multiplicative_expression: multiplicative_expression MODULO cast_expression •

    $default  reduce using rule 39 (multiplicative_expression)


State 245

   37 multiplicative_expression: multiplicative_expression • KSTAR cast_expression
   38                          | multiplicative_expression • DIVIDE cast_expression
   39                          | multiplicative_expression • MODULO cast_expression
   41 additive_expression: additive_expression PLUS multiplicative_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, PLUS, MINUS, LEFTS, RIGHTS, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    KSTAR   shift, and go to state 180
    DIVIDE  shift, and go to state 181
    MODULO  shift, and go to state 182

    $default  reduce using rule 41 (additive_expression)


State 246

   37 multiplicative_expression: multiplicative_expression • KSTAR cast_expression
   38                          | multiplicative_expression • DIVIDE cast_expression
   39                          | multiplicative_expression • MODULO cast_expression
   42 additive_expression: additive_expression MINUS multiplicative_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, PLUS, MINUS, LEFTS, RIGHTS, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    KSTAR   shift, and go to state 180
    DIVIDE  shift, and go to state 181
    MODULO  shift, and go to state 182

    $default  reduce using rule 42 (additive_expression)


State 247

   41 additive_expression: additive_expression • PLUS multiplicative_expression
   42                    | additive_expression • MINUS multiplicative_expression
   44 shift_expression: shift_expression LEFTS additive_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, LEFTS, RIGHTS, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    PLUS   shift, and go to state 183
    MINUS  shift, and go to state 184

    $default  reduce using rule 44 (shift_expression)


State 248

   41 additive_expression: additive_expression • PLUS multiplicative_expression
   42                    | additive_expression • MINUS multiplicative_expression
   45 shift_expression: shift_expression RIGHTS additive_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, LEFTS, RIGHTS, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    PLUS   shift, and go to state 183
    MINUS  shift, and go to state 184

    $default  reduce using rule 45 (shift_expression)


State 249

   44 shift_expression: shift_expression • LEFTS additive_expression
   45                 | shift_expression • RIGHTS additive_expression
   47 relational_expression: relational_expression LESSTHAN shift_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    LEFTS   shift, and go to state 185
    RIGHTS  shift, and go to state 186

    $default  reduce using rule 47 (relational_expression)


State 250

   44 shift_expression: shift_expression • LEFTS additive_expression
   45                 | shift_expression • RIGHTS additive_expression
   48 relational_expression: relational_expression GREATERTHAN shift_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    LEFTS   shift, and go to state 185
    RIGHTS  shift, and go to state 186

    $default  reduce using rule 48 (relational_expression)


State 251

   44 shift_expression: shift_expression • LEFTS additive_expression
   45                 | shift_expression • RIGHTS additive_expression
   49 relational_expression: relational_expression LESSEQUAL shift_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    LEFTS   shift, and go to state 185
    RIGHTS  shift, and go to state 186

    $default  reduce using rule 49 (relational_expression)


State 252

   44 shift_expression: shift_expression • LEFTS additive_expression
   45                 | shift_expression • RIGHTS additive_expression
   50 relational_expression: relational_expression GREATEREQUAL shift_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    LEFTS   shift, and go to state 185
    RIGHTS  shift, and go to state 186

    $default  reduce using rule 50 (relational_expression)


State 253

   47 relational_expression: relational_expression • LESSTHAN shift_expression
   48                      | relational_expression • GREATERTHAN shift_expression
   49                      | relational_expression • LESSEQUAL shift_expression
   50                      | relational_expression • GREATEREQUAL shift_expression
   52 equality_expression: equality_expression EQUALEQUAL relational_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    LESSTHAN      shift, and go to state 187
    GREATERTHAN   shift, and go to state 188
    LESSEQUAL     shift, and go to state 189
    GREATEREQUAL  shift, and go to state 190

    $default  reduce using rule 52 (equality_expression)


State 254

   47 relational_expression: relational_expression • LESSTHAN shift_expression
   48                      | relational_expression • GREATERTHAN shift_expression
   49                      | relational_expression • LESSEQUAL shift_expression
   50                      | relational_expression • GREATEREQUAL shift_expression
   53 equality_expression: equality_expression NOTEQUAL relational_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    LESSTHAN      shift, and go to state 187
    GREATERTHAN   shift, and go to state 188
    LESSEQUAL     shift, and go to state 189
    GREATEREQUAL  shift, and go to state 190

    $default  reduce using rule 53 (equality_expression)


State 255

   52 equality_expression: equality_expression • EQUALEQUAL relational_expression
   53                    | equality_expression • NOTEQUAL relational_expression
   55 and_expression: and_expression BAND equality_expression •  [CLOSESB, CLOSERB, CLOSECB, BAND, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    EQUALEQUAL  shift, and go to state 191
    NOTEQUAL    shift, and go to state 192

    $default  reduce using rule 55 (and_expression)


State 256

   55 and_expression: and_expression • BAND equality_expression
   57 exclusive_or_expression: exclusive_or_expression XOR and_expression •  [CLOSESB, CLOSERB, CLOSECB, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    BAND  shift, and go to state 193

    $default  reduce using rule 57 (exclusive_or_expression)


State 257

   57 exclusive_or_expression: exclusive_or_expression • XOR and_expression
   59 inclusive_or_expression: inclusive_or_expression BITWISEOR exclusive_or_expression •  [CLOSESB, CLOSERB, CLOSECB, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    XOR  shift, and go to state 194

    $default  reduce using rule 59 (inclusive_or_expression)


State 258

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   61 logical_and_expression: logical_and_expression AND M • inclusive_or_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 308


State 259

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   63 logical_or_expression: logical_or_expression OR M • logical_and_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 309


State 260

   65 conditional_expression: logical_or_expression QUESTIONMARK expression • COLON conditional_expression
   80 expression: expression • COMMA assignment_expression

    COLON  shift, and go to state 310
    COMMA  shift, and go to state 225


State 261

  222 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 311


State 262

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   81 constant_expression: • conditional_expression
  198 labeled_statement: CASE • constant_expression COLON statement

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 215
    constant_expression        go to state 312


State 263

  221 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 313


State 264

  199 labeled_statement: DEFAULT • COLON statement

    COLON  shift, and go to state 314


State 265

  214 iteration_statement: DO • D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | DO • D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  237 D: ε •

    $default  reduce using rule 237 (D)

    D  go to state 315


State 266

  216 iteration_statement: FOR • F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | FOR • F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | FOR • F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | FOR • F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  235 F: ε •

    $default  reduce using rule 235 (F)

    F  go to state 316


State 267

  220 jump_statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 317


State 268

  209 selection_statement: IF • OPENRB expression N CLOSERB M statement N
  210                    | IF • OPENRB expression N CLOSERB M statement N ELSE M statement

    OPENRB  shift, and go to state 318


State 269

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  223 jump_statement: RETURN • expression SEMICOLON
  224               | RETURN • SEMICOLON

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 319

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 320


State 270

  211 selection_statement: SWITCH • OPENRB expression CLOSERB statement

    OPENRB  shift, and go to state 321


State 271

  212 iteration_statement: WHILE • W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | WHILE • W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  236 W: ε •

    $default  reduce using rule 236 (W)

    W  go to state 322


State 272

    6 primary_expression: IDENTIFIER •  [OPENSB, OPENRB, DOT, RIGHTARROW, PLUSPLUS, MINUSMINS, BAND, KSTAR, PLUS, MINUS, DIVIDE, MODULO, LEFTS, RIGHTS, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, SEMICOLON, EQUAL, MULEQUAL, DIVEQUAL, MODEQUAL, PLUSEQUAL, MINUSEQUAL, SHIFTLEQUAL, SHIFTREQUAL, ANDEQUAL, XOREQUAL, OREQUAL, COMMA]
  197 labeled_statement: IDENTIFIER • COLON M statement

    COLON  shift, and go to state 323

    $default  reduce using rule 6 (primary_expression)


State 273

  200 compound_statement: OPENCB • X changetable block_item_list_opt CLOSECB
  238 X: ε •

    $default  reduce using rule 238 (X)

    X  go to state 324


State 274

  207 expression_statement: SEMICOLON •

    $default  reduce using rule 207 (expression_statement)


State 275

   80 expression: expression • COMMA assignment_expression
  208 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 325
    COMMA      shift, and go to state 225


State 276

  205 block_item: declaration •

    $default  reduce using rule 205 (block_item)


State 277

  206 block_item: statement •

    $default  reduce using rule 206 (block_item)


State 278

  186 statement: labeled_statement •

    $default  reduce using rule 186 (statement)


State 279

  187 statement: compound_statement •

    $default  reduce using rule 187 (statement)


State 280

  202 block_item_list: block_item_list • M block_item
  203 block_item_list_opt: block_item_list •  [CLOSECB]
  234 M: ε •  [AUTO, BREAK, CASE, CHAR, CONST, CONTINUE, DEFAULT, DO, DOUBLE, ENUM, EXTERN, REGISTER, FLOAT, FOR, GOTO, IF, INLINE, INT, LONG, RESTRICT, RETURN, SHORT, SIGNED, SIZEOF, STATIC, STRUCT, SWITCH, UNION, UNSIGNED, VOID, VOLATILE, WHILE, _BOOL, _COMPLEX, _IMAGINARY, IDENTIFIER, INTEGER_CONST, CHAR_CONST, FLOAT_CONST, STRING_LITERAL, OPENRB, OPENCB, PLUSPLUS, MINUSMINS, BAND, KSTAR, PLUS, MINUS, TILDA, NOT, SEMICOLON]

    CLOSECB   reduce using rule 203 (block_item_list_opt)
    $default  reduce using rule 234 (M)

    M  go to state 326


State 281

  229 function_definition: declaration_specifiers declarator declaration_list_opt changetable OPENCB block_item_list_opt • CLOSECB

    CLOSECB  shift, and go to state 327


State 282

  201 block_item_list: block_item •

    $default  reduce using rule 201 (block_item_list)


State 283

  188 statement: expression_statement •

    $default  reduce using rule 188 (statement)


State 284

  189 statement: selection_statement •

    $default  reduce using rule 189 (statement)


State 285

  190 statement: iteration_statement •

    $default  reduce using rule 190 (statement)


State 286

  191 statement: jump_statement •

    $default  reduce using rule 191 (statement)


State 287

  153 direct_declarator: direct_declarator OPENSB STATIC assignment_expression CLOSESB •

    $default  reduce using rule 153 (direct_declarator)


State 288

  152 direct_declarator: direct_declarator OPENSB STATIC type_qualifier_list assignment_expression • CLOSESB

    CLOSESB  shift, and go to state 328


State 289

  154 direct_declarator: direct_declarator OPENSB type_qualifier_list KSTAR CLOSESB •

    $default  reduce using rule 154 (direct_declarator)


State 290

  148 direct_declarator: direct_declarator OPENSB type_qualifier_list assignment_expression CLOSESB •

    $default  reduce using rule 148 (direct_declarator)


State 291

  169 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 169 (parameter_declaration)


State 292

  156 direct_declarator: direct_declarator OPENRB changetable parameter_type_list CLOSERB •

    $default  reduce using rule 156 (direct_declarator)


State 293

   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  166 parameter_type_list: parameter_list COMMA • DOTDOTDOT
  168 parameter_list: parameter_list COMMA • parameter_declaration
  169 parameter_declaration: • declaration_specifiers declarator
  170                      | • declaration_specifiers

    AUTO        shift, and go to state 1
    CHAR        shift, and go to state 2
    CONST       shift, and go to state 3
    DOUBLE      shift, and go to state 4
    ENUM        shift, and go to state 5
    EXTERN      shift, and go to state 6
    REGISTER    shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 12
    SHORT       shift, and go to state 13
    SIGNED      shift, and go to state 14
    STATIC      shift, and go to state 15
    STRUCT      shift, and go to state 16
    UNION       shift, and go to state 17
    UNSIGNED    shift, and go to state 18
    VOID        shift, and go to state 19
    VOLATILE    shift, and go to state 20
    _BOOL       shift, and go to state 21
    _COMPLEX    shift, and go to state 22
    _IMAGINARY  shift, and go to state 23
    DOTDOTDOT   shift, and go to state 329

    declaration_specifiers     go to state 208
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    parameter_declaration      go to state 330


State 294

  172 identifier_list: identifier_list COMMA IDENTIFIER •

    $default  reduce using rule 172 (identifier_list)


State 295

  127 struct_declarator_list: struct_declarator_list COMMA struct_declarator •

    $default  reduce using rule 127 (struct_declarator_list)


State 296

  129 struct_declarator: declarator COLON constant_expression •

    $default  reduce using rule 129 (struct_declarator)


State 297

   16 postfix_expression: OPENRB type_name CLOSERB • OPENCB initializer_list CLOSECB
   17                   | OPENRB type_name CLOSERB • OPENCB initializer_list COMMA CLOSECB
   27 unary_expression: SIZEOF OPENRB type_name CLOSERB •  [CLOSESB, CLOSERB, CLOSECB, BAND, KSTAR, PLUS, MINUS, DIVIDE, MODULO, LEFTS, RIGHTS, LESSTHAN, GREATERTHAN, LESSEQUAL, GREATEREQUAL, EQUALEQUAL, NOTEQUAL, XOR, BITWISEOR, AND, OR, QUESTIONMARK, COLON, SEMICOLON, EQUAL, MULEQUAL, DIVEQUAL, MODEQUAL, PLUSEQUAL, MINUSEQUAL, SHIFTLEQUAL, SHIFTREQUAL, ANDEQUAL, XOREQUAL, OREQUAL, COMMA]

    OPENCB  shift, and go to state 299

    $default  reduce using rule 27 (unary_expression)


State 298

   80 expression: expression COMMA assignment_expression •

    $default  reduce using rule 80 (expression)


State 299

   16 postfix_expression: OPENRB type_name CLOSERB OPENCB • initializer_list CLOSECB
   17                   | OPENRB type_name CLOSERB OPENCB • initializer_list COMMA CLOSECB
  177 initializer_list: • designation_opt initializer
  178                 | • initializer_list COMMA designation_opt initializer
  179 designation_opt: • designation
  180                | ε •  [SIZEOF, IDENTIFIER, INTEGER_CONST, CHAR_CONST, FLOAT_CONST, STRING_LITERAL, OPENRB, OPENCB, PLUSPLUS, MINUSMINS, BAND, KSTAR, PLUS, MINUS, TILDA, NOT]
  181 designation: • designator_list EQUAL
  182 designator_list: • designator
  183                | • designator_list designator
  184 designator: • OPENSB constant_expression CLOSESB
  185           | • DOT IDENTIFIER

    OPENSB  shift, and go to state 150
    DOT     shift, and go to state 151

    $default  reduce using rule 180 (designation_opt)

    initializer_list  go to state 331
    designation_opt   go to state 153
    designation       go to state 154
    designator_list   go to state 155
    designator        go to state 156


State 300

   35 cast_expression: OPENRB type_name CLOSERB cast_expression •

    $default  reduce using rule 35 (cast_expression)


State 301

  184 designator: OPENSB constant_expression CLOSESB •

    $default  reduce using rule 184 (designator)


State 302

  176 initializer: OPENCB initializer_list COMMA CLOSECB •

    $default  reduce using rule 176 (initializer)


State 303

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
  174 initializer: • assignment_expression
  175            | • OPENCB initializer_list CLOSECB
  176            | • OPENCB initializer_list COMMA CLOSECB
  178 initializer_list: initializer_list COMMA designation_opt • initializer

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 92
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 118
    initializer                go to state 332


State 304

   16 postfix_expression: OPENRB type_name CLOSERB • OPENCB initializer_list CLOSECB
   17                   | OPENRB type_name CLOSERB • OPENCB initializer_list COMMA CLOSECB

    OPENCB  shift, and go to state 299


State 305

   10 postfix_expression: postfix_expression OPENSB expression CLOSESB •

    $default  reduce using rule 10 (postfix_expression)


State 306

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   19 argument_expression_list: argument_expression_list COMMA • assignment_expression
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 333


State 307

   11 postfix_expression: postfix_expression OPENRB argument_expression_list_opt CLOSERB •

    $default  reduce using rule 11 (postfix_expression)


State 308

   59 inclusive_or_expression: inclusive_or_expression • BITWISEOR exclusive_or_expression
   61 logical_and_expression: logical_and_expression AND M inclusive_or_expression •  [CLOSESB, CLOSERB, CLOSECB, AND, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    BITWISEOR  shift, and go to state 195

    $default  reduce using rule 61 (logical_and_expression)


State 309

   61 logical_and_expression: logical_and_expression • AND M inclusive_or_expression
   63 logical_or_expression: logical_or_expression OR M logical_and_expression •  [CLOSESB, CLOSERB, CLOSECB, OR, QUESTIONMARK, COLON, SEMICOLON, COMMA]

    AND  shift, and go to state 196

    $default  reduce using rule 63 (logical_or_expression)


State 310

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   65                       | logical_or_expression QUESTIONMARK expression COLON • conditional_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 178
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 334


State 311

  222 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 222 (jump_statement)


State 312

  198 labeled_statement: CASE constant_expression • COLON statement

    COLON  shift, and go to state 335


State 313

  221 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 221 (jump_statement)


State 314

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  199                  | DEFAULT COLON • statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    RETURN          shift, and go to state 269
    SIZEOF          shift, and go to state 85
    SWITCH          shift, and go to state 270
    WHILE           shift, and go to state 271
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    statement                  go to state 336
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 315

  214 iteration_statement: DO D • M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | DO D • OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  234 M: ε •  [BREAK, CASE, CONTINUE, DEFAULT, DO, FOR, GOTO, IF, RETURN, SIZEOF, SWITCH, WHILE, IDENTIFIER, INTEGER_CONST, CHAR_CONST, FLOAT_CONST, STRING_LITERAL, OPENRB, PLUSPLUS, MINUSMINS, BAND, KSTAR, PLUS, MINUS, TILDA, NOT, SEMICOLON]

    OPENCB  shift, and go to state 337

    $default  reduce using rule 234 (M)

    M  go to state 338


State 316

  216 iteration_statement: FOR F • OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | FOR F • OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | FOR F • OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | FOR F • OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB

    OPENRB  shift, and go to state 339


State 317

  220 jump_statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 340


State 318

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  209 selection_statement: IF OPENRB • expression N CLOSERB M statement N
  210                    | IF OPENRB • expression N CLOSERB M statement N ELSE M statement

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 341


State 319

  224 jump_statement: RETURN SEMICOLON •

    $default  reduce using rule 224 (jump_statement)


State 320

   80 expression: expression • COMMA assignment_expression
  223 jump_statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 342
    COMMA      shift, and go to state 225


State 321

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  211 selection_statement: SWITCH OPENRB • expression CLOSERB statement

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 343


State 322

  212 iteration_statement: WHILE W • OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | WHILE W • OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB

    OPENRB  shift, and go to state 344


State 323

  197 labeled_statement: IDENTIFIER COLON • M statement
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 345


State 324

    1 changetable: ε •
  200 compound_statement: OPENCB X • changetable block_item_list_opt CLOSECB

    $default  reduce using rule 1 (changetable)

    changetable  go to state 346


State 325

  208 expression_statement: expression SEMICOLON •

    $default  reduce using rule 208 (expression_statement)


State 326

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  202 block_item_list: block_item_list M • block_item
  205 block_item: • declaration
  206           | • statement
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    AUTO            shift, and go to state 1
    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    REGISTER        shift, and go to state 7
    FLOAT           shift, and go to state 8
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    INLINE          shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    RESTRICT        shift, and go to state 12
    RETURN          shift, and go to state 269
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 85
    STATIC          shift, and go to state 15
    STRUCT          shift, and go to state 16
    SWITCH          shift, and go to state 270
    UNION           shift, and go to state 17
    UNSIGNED        shift, and go to state 18
    VOID            shift, and go to state 19
    VOLATILE        shift, and go to state 20
    WHILE           shift, and go to state 271
    _BOOL           shift, and go to state 21
    _COMPLEX        shift, and go to state 22
    _IMAGINARY      shift, and go to state 23
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item                 go to state 347
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 327

  229 function_definition: declaration_specifiers declarator declaration_list_opt changetable OPENCB block_item_list_opt CLOSECB •

    $default  reduce using rule 229 (function_definition)


State 328

  152 direct_declarator: direct_declarator OPENSB STATIC type_qualifier_list assignment_expression CLOSESB •

    $default  reduce using rule 152 (direct_declarator)


State 329

  166 parameter_type_list: parameter_list COMMA DOTDOTDOT •

    $default  reduce using rule 166 (parameter_type_list)


State 330

  168 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 168 (parameter_list)


State 331

   16 postfix_expression: OPENRB type_name CLOSERB OPENCB initializer_list • CLOSECB
   17                   | OPENRB type_name CLOSERB OPENCB initializer_list • COMMA CLOSECB
  178 initializer_list: initializer_list • COMMA designation_opt initializer

    CLOSECB  shift, and go to state 348
    COMMA    shift, and go to state 349


State 332

  178 initializer_list: initializer_list COMMA designation_opt initializer •

    $default  reduce using rule 178 (initializer_list)


State 333

   19 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 19 (argument_expression_list)


State 334

   65 conditional_expression: logical_or_expression QUESTIONMARK expression COLON conditional_expression •

    $default  reduce using rule 65 (conditional_expression)


State 335

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  198                  | CASE constant_expression COLON • statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    RETURN          shift, and go to state 269
    SIZEOF          shift, and go to state 85
    SWITCH          shift, and go to state 270
    WHILE           shift, and go to state 271
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    statement                  go to state 350
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 336

  199 labeled_statement: DEFAULT COLON statement •

    $default  reduce using rule 199 (labeled_statement)


State 337

  215 iteration_statement: DO D OPENCB • M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 351


State 338

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  192 loop_statement: • labeled_statement
  193               | • expression_statement
  194               | • selection_statement
  195               | • iteration_statement
  196               | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  214                    | DO D M • loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    RETURN          shift, and go to state 269
    SIZEOF          shift, and go to state 85
    SWITCH          shift, and go to state 270
    WHILE           shift, and go to state 271
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    loop_statement             go to state 352
    labeled_statement          go to state 353
    expression_statement       go to state 354
    selection_statement        go to state 355
    iteration_statement        go to state 356
    jump_statement             go to state 357


State 339

  216 iteration_statement: FOR F OPENRB • X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | FOR F OPENRB • X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | FOR F OPENRB • X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | FOR F OPENRB • X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  238 X: ε •

    $default  reduce using rule 238 (X)

    X  go to state 358


State 340

  220 jump_statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 220 (jump_statement)


State 341

   80 expression: expression • COMMA assignment_expression
  209 selection_statement: IF OPENRB expression • N CLOSERB M statement N
  210                    | IF OPENRB expression • N CLOSERB M statement N ELSE M statement
  239 N: ε •  [CLOSERB]

    COMMA  shift, and go to state 225

    $default  reduce using rule 239 (N)

    N  go to state 359


State 342

  223 jump_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 223 (jump_statement)


State 343

   80 expression: expression • COMMA assignment_expression
  211 selection_statement: SWITCH OPENRB expression • CLOSERB statement

    CLOSERB  shift, and go to state 360
    COMMA    shift, and go to state 225


State 344

  212 iteration_statement: WHILE W OPENRB • X changetable M expression CLOSERB M loop_statement
  213                    | WHILE W OPENRB • X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  238 X: ε •

    $default  reduce using rule 238 (X)

    X  go to state 361


State 345

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  197                  | IDENTIFIER COLON M • statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    RETURN          shift, and go to state 269
    SIZEOF          shift, and go to state 85
    SWITCH          shift, and go to state 270
    WHILE           shift, and go to state 271
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    statement                  go to state 362
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 346

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  200                   | OPENCB X changetable • block_item_list_opt CLOSECB
  201 block_item_list: • block_item
  202                | • block_item_list M block_item
  203 block_item_list_opt: • block_item_list
  204                    | ε •  [CLOSECB]
  205 block_item: • declaration
  206           | • statement
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    AUTO            shift, and go to state 1
    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    REGISTER        shift, and go to state 7
    FLOAT           shift, and go to state 8
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    INLINE          shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    RESTRICT        shift, and go to state 12
    RETURN          shift, and go to state 269
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 85
    STATIC          shift, and go to state 15
    STRUCT          shift, and go to state 16
    SWITCH          shift, and go to state 270
    UNION           shift, and go to state 17
    UNSIGNED        shift, and go to state 18
    VOID            shift, and go to state 19
    VOLATILE        shift, and go to state 20
    WHILE           shift, and go to state 271
    _BOOL           shift, and go to state 21
    _COMPLEX        shift, and go to state 22
    _IMAGINARY      shift, and go to state 23
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 363
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 347

  202 block_item_list: block_item_list M block_item •

    $default  reduce using rule 202 (block_item_list)


State 348

   16 postfix_expression: OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB •

    $default  reduce using rule 16 (postfix_expression)


State 349

   17 postfix_expression: OPENRB type_name CLOSERB OPENCB initializer_list COMMA • CLOSECB
  178 initializer_list: initializer_list COMMA • designation_opt initializer
  179 designation_opt: • designation
  180                | ε •  [SIZEOF, IDENTIFIER, INTEGER_CONST, CHAR_CONST, FLOAT_CONST, STRING_LITERAL, OPENRB, OPENCB, PLUSPLUS, MINUSMINS, BAND, KSTAR, PLUS, MINUS, TILDA, NOT]
  181 designation: • designator_list EQUAL
  182 designator_list: • designator
  183                | • designator_list designator
  184 designator: • OPENSB constant_expression CLOSESB
  185           | • DOT IDENTIFIER

    OPENSB   shift, and go to state 150
    CLOSECB  shift, and go to state 364
    DOT      shift, and go to state 151

    $default  reduce using rule 180 (designation_opt)

    designation_opt  go to state 303
    designation      go to state 154
    designator_list  go to state 155
    designator       go to state 156


State 350

  198 labeled_statement: CASE constant_expression COLON statement •

    $default  reduce using rule 198 (labeled_statement)


State 351

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  201 block_item_list: • block_item
  202                | • block_item_list M block_item
  203 block_item_list_opt: • block_item_list
  204                    | ε •  [CLOSECB]
  205 block_item: • declaration
  206           | • statement
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | DO D OPENCB M • block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    AUTO            shift, and go to state 1
    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    REGISTER        shift, and go to state 7
    FLOAT           shift, and go to state 8
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    INLINE          shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    RESTRICT        shift, and go to state 12
    RETURN          shift, and go to state 269
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 85
    STATIC          shift, and go to state 15
    STRUCT          shift, and go to state 16
    SWITCH          shift, and go to state 270
    UNION           shift, and go to state 17
    UNSIGNED        shift, and go to state 18
    VOID            shift, and go to state 19
    VOLATILE        shift, and go to state 20
    WHILE           shift, and go to state 271
    _BOOL           shift, and go to state 21
    _COMPLEX        shift, and go to state 22
    _IMAGINARY      shift, and go to state 23
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 365
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 352

  214 iteration_statement: DO D M loop_statement • M WHILE OPENRB expression CLOSERB SEMICOLON
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 366


State 353

  192 loop_statement: labeled_statement •

    $default  reduce using rule 192 (loop_statement)


State 354

  193 loop_statement: expression_statement •

    $default  reduce using rule 193 (loop_statement)


State 355

  194 loop_statement: selection_statement •

    $default  reduce using rule 194 (loop_statement)


State 356

  195 loop_statement: iteration_statement •

    $default  reduce using rule 195 (loop_statement)


State 357

  196 loop_statement: jump_statement •

    $default  reduce using rule 196 (loop_statement)


State 358

    1 changetable: ε •
  216 iteration_statement: FOR F OPENRB X • changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | FOR F OPENRB X • changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | FOR F OPENRB X • changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | FOR F OPENRB X • changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB

    $default  reduce using rule 1 (changetable)

    changetable  go to state 367


State 359

  209 selection_statement: IF OPENRB expression N • CLOSERB M statement N
  210                    | IF OPENRB expression N • CLOSERB M statement N ELSE M statement

    CLOSERB  shift, and go to state 368


State 360

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  211                    | SWITCH OPENRB expression CLOSERB • statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    RETURN          shift, and go to state 269
    SIZEOF          shift, and go to state 85
    SWITCH          shift, and go to state 270
    WHILE           shift, and go to state 271
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    statement                  go to state 369
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 361

    1 changetable: ε •
  212 iteration_statement: WHILE W OPENRB X • changetable M expression CLOSERB M loop_statement
  213                    | WHILE W OPENRB X • changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB

    $default  reduce using rule 1 (changetable)

    changetable  go to state 370


State 362

  197 labeled_statement: IDENTIFIER COLON M statement •

    $default  reduce using rule 197 (labeled_statement)


State 363

  200 compound_statement: OPENCB X changetable block_item_list_opt • CLOSECB

    CLOSECB  shift, and go to state 371


State 364

   17 postfix_expression: OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB •

    $default  reduce using rule 17 (postfix_expression)


State 365

  215 iteration_statement: DO D OPENCB M block_item_list_opt • CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON

    CLOSECB  shift, and go to state 372


State 366

  214 iteration_statement: DO D M loop_statement M • WHILE OPENRB expression CLOSERB SEMICOLON

    WHILE  shift, and go to state 373


State 367

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  216 iteration_statement: FOR F OPENRB X changetable • declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | FOR F OPENRB X changetable • expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | FOR F OPENRB X changetable • declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | FOR F OPENRB X changetable • expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB

    AUTO            shift, and go to state 1
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    REGISTER        shift, and go to state 7
    FLOAT           shift, and go to state 8
    INLINE          shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    RESTRICT        shift, and go to state 12
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 85
    STATIC          shift, and go to state 15
    STRUCT          shift, and go to state 16
    UNION           shift, and go to state 17
    UNSIGNED        shift, and go to state 18
    VOID            shift, and go to state 19
    VOLATILE        shift, and go to state 20
    _BOOL           shift, and go to state 21
    _COMPLEX        shift, and go to state 22
    _IMAGINARY      shift, and go to state 23
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    declaration                go to state 374
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    expression_statement       go to state 375


State 368

  209 selection_statement: IF OPENRB expression N CLOSERB • M statement N
  210                    | IF OPENRB expression N CLOSERB • M statement N ELSE M statement
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 376


State 369

  211 selection_statement: SWITCH OPENRB expression CLOSERB statement •

    $default  reduce using rule 211 (selection_statement)


State 370

  212 iteration_statement: WHILE W OPENRB X changetable • M expression CLOSERB M loop_statement
  213                    | WHILE W OPENRB X changetable • M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 377


State 371

  200 compound_statement: OPENCB X changetable block_item_list_opt CLOSECB •

    $default  reduce using rule 200 (compound_statement)


State 372

  215 iteration_statement: DO D OPENCB M block_item_list_opt CLOSECB • M WHILE OPENRB expression CLOSERB SEMICOLON
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 378


State 373

  214 iteration_statement: DO D M loop_statement M WHILE • OPENRB expression CLOSERB SEMICOLON

    OPENRB  shift, and go to state 379


State 374

  216 iteration_statement: FOR F OPENRB X changetable declaration • M expression_statement M expression N CLOSERB M loop_statement
  218                    | FOR F OPENRB X changetable declaration • M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 380


State 375

  217 iteration_statement: FOR F OPENRB X changetable expression_statement • M expression_statement M expression N CLOSERB M loop_statement
  219                    | FOR F OPENRB X changetable expression_statement • M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 381


State 376

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  209                    | IF OPENRB expression N CLOSERB M • statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  210                    | IF OPENRB expression N CLOSERB M • statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    RETURN          shift, and go to state 269
    SIZEOF          shift, and go to state 85
    SWITCH          shift, and go to state 270
    WHILE           shift, and go to state 271
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    statement                  go to state 382
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 377

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  212 iteration_statement: WHILE W OPENRB X changetable M • expression CLOSERB M loop_statement
  213                    | WHILE W OPENRB X changetable M • expression CLOSERB OPENCB M block_item_list_opt CLOSECB

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 383


State 378

  215 iteration_statement: DO D OPENCB M block_item_list_opt CLOSECB M • WHILE OPENRB expression CLOSERB SEMICOLON

    WHILE  shift, and go to state 384


State 379

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  214 iteration_statement: DO D M loop_statement M WHILE OPENRB • expression CLOSERB SEMICOLON

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 385


State 380

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  216 iteration_statement: FOR F OPENRB X changetable declaration M • expression_statement M expression N CLOSERB M loop_statement
  218                    | FOR F OPENRB X changetable declaration M • expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    expression_statement       go to state 386


State 381

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  217 iteration_statement: FOR F OPENRB X changetable expression_statement M • expression_statement M expression N CLOSERB M loop_statement
  219                    | FOR F OPENRB X changetable expression_statement M • expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    expression_statement       go to state 387


State 382

  209 selection_statement: IF OPENRB expression N CLOSERB M statement • N
  210                    | IF OPENRB expression N CLOSERB M statement • N ELSE M statement
  239 N: ε •

    $default  reduce using rule 239 (N)

    N  go to state 388


State 383

   80 expression: expression • COMMA assignment_expression
  212 iteration_statement: WHILE W OPENRB X changetable M expression • CLOSERB M loop_statement
  213                    | WHILE W OPENRB X changetable M expression • CLOSERB OPENCB M block_item_list_opt CLOSECB

    CLOSERB  shift, and go to state 389
    COMMA    shift, and go to state 225


State 384

  215 iteration_statement: DO D OPENCB M block_item_list_opt CLOSECB M WHILE • OPENRB expression CLOSERB SEMICOLON

    OPENRB  shift, and go to state 390


State 385

   80 expression: expression • COMMA assignment_expression
  214 iteration_statement: DO D M loop_statement M WHILE OPENRB expression • CLOSERB SEMICOLON

    CLOSERB  shift, and go to state 391
    COMMA    shift, and go to state 225


State 386

  216 iteration_statement: FOR F OPENRB X changetable declaration M expression_statement • M expression N CLOSERB M loop_statement
  218                    | FOR F OPENRB X changetable declaration M expression_statement • M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 392


State 387

  217 iteration_statement: FOR F OPENRB X changetable expression_statement M expression_statement • M expression N CLOSERB M loop_statement
  219                    | FOR F OPENRB X changetable expression_statement M expression_statement • M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 393


State 388

  209 selection_statement: IF OPENRB expression N CLOSERB M statement N •  [AUTO, BREAK, CASE, CHAR, CONST, CONTINUE, DEFAULT, DO, DOUBLE, ENUM, EXTERN, REGISTER, FLOAT, FOR, GOTO, IF, INLINE, INT, LONG, RESTRICT, RETURN, SHORT, SIGNED, SIZEOF, STATIC, STRUCT, SWITCH, UNION, UNSIGNED, VOID, VOLATILE, WHILE, _BOOL, _COMPLEX, _IMAGINARY, IDENTIFIER, INTEGER_CONST, CHAR_CONST, FLOAT_CONST, STRING_LITERAL, OPENRB, OPENCB, CLOSECB, PLUSPLUS, MINUSMINS, BAND, KSTAR, PLUS, MINUS, TILDA, NOT, SEMICOLON]
  210                    | IF OPENRB expression N CLOSERB M statement N • ELSE M statement

    ELSE  shift, and go to state 394

    $default  reduce using rule 209 (selection_statement)

    Conflict between rule 209 and token ELSE resolved as shift (%right ELSE).


State 389

  212 iteration_statement: WHILE W OPENRB X changetable M expression CLOSERB • M loop_statement
  213                    | WHILE W OPENRB X changetable M expression CLOSERB • OPENCB M block_item_list_opt CLOSECB
  234 M: ε •  [BREAK, CASE, CONTINUE, DEFAULT, DO, FOR, GOTO, IF, RETURN, SIZEOF, SWITCH, WHILE, IDENTIFIER, INTEGER_CONST, CHAR_CONST, FLOAT_CONST, STRING_LITERAL, OPENRB, PLUSPLUS, MINUSMINS, BAND, KSTAR, PLUS, MINUS, TILDA, NOT, SEMICOLON]

    OPENCB  shift, and go to state 395

    $default  reduce using rule 234 (M)

    M  go to state 396


State 390

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  215 iteration_statement: DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB • expression CLOSERB SEMICOLON

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 397


State 391

  214 iteration_statement: DO D M loop_statement M WHILE OPENRB expression CLOSERB • SEMICOLON

    SEMICOLON  shift, and go to state 398


State 392

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  216 iteration_statement: FOR F OPENRB X changetable declaration M expression_statement M • expression N CLOSERB M loop_statement
  218                    | FOR F OPENRB X changetable declaration M expression_statement M • expression N CLOSERB M OPENCB block_item_list_opt CLOSECB

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 399


State 393

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  217 iteration_statement: FOR F OPENRB X changetable expression_statement M expression_statement M • expression N CLOSERB M loop_statement
  219                    | FOR F OPENRB X changetable expression_statement M expression_statement M • expression N CLOSERB M OPENCB block_item_list_opt CLOSECB

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 400


State 394

  210 selection_statement: IF OPENRB expression N CLOSERB M statement N ELSE • M statement
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 401


State 395

  213 iteration_statement: WHILE W OPENRB X changetable M expression CLOSERB OPENCB • M block_item_list_opt CLOSECB
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 402


State 396

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  192 loop_statement: • labeled_statement
  193               | • expression_statement
  194               | • selection_statement
  195               | • iteration_statement
  196               | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  212                    | WHILE W OPENRB X changetable M expression CLOSERB M • loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    RETURN          shift, and go to state 269
    SIZEOF          shift, and go to state 85
    SWITCH          shift, and go to state 270
    WHILE           shift, and go to state 271
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    loop_statement             go to state 403
    labeled_statement          go to state 353
    expression_statement       go to state 354
    selection_statement        go to state 355
    iteration_statement        go to state 356
    jump_statement             go to state 357


State 397

   80 expression: expression • COMMA assignment_expression
  215 iteration_statement: DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression • CLOSERB SEMICOLON

    CLOSERB  shift, and go to state 404
    COMMA    shift, and go to state 225


State 398

  214 iteration_statement: DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON •

    $default  reduce using rule 214 (iteration_statement)


State 399

   80 expression: expression • COMMA assignment_expression
  216 iteration_statement: FOR F OPENRB X changetable declaration M expression_statement M expression • N CLOSERB M loop_statement
  218                    | FOR F OPENRB X changetable declaration M expression_statement M expression • N CLOSERB M OPENCB block_item_list_opt CLOSECB
  239 N: ε •  [CLOSERB]

    COMMA  shift, and go to state 225

    $default  reduce using rule 239 (N)

    N  go to state 405


State 400

   80 expression: expression • COMMA assignment_expression
  217 iteration_statement: FOR F OPENRB X changetable expression_statement M expression_statement M expression • N CLOSERB M loop_statement
  219                    | FOR F OPENRB X changetable expression_statement M expression_statement M expression • N CLOSERB M OPENCB block_item_list_opt CLOSECB
  239 N: ε •  [CLOSERB]

    COMMA  shift, and go to state 225

    $default  reduce using rule 239 (N)

    N  go to state 406


State 401

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  210                    | IF OPENRB expression N CLOSERB M statement N ELSE M • statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    RETURN          shift, and go to state 269
    SIZEOF          shift, and go to state 85
    SWITCH          shift, and go to state 270
    WHILE           shift, and go to state 271
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    statement                  go to state 407
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 402

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  201 block_item_list: • block_item
  202                | • block_item_list M block_item
  203 block_item_list_opt: • block_item_list
  204                    | ε •  [CLOSECB]
  205 block_item: • declaration
  206           | • statement
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  213                    | WHILE W OPENRB X changetable M expression CLOSERB OPENCB M • block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    AUTO            shift, and go to state 1
    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    REGISTER        shift, and go to state 7
    FLOAT           shift, and go to state 8
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    INLINE          shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    RESTRICT        shift, and go to state 12
    RETURN          shift, and go to state 269
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 85
    STATIC          shift, and go to state 15
    STRUCT          shift, and go to state 16
    SWITCH          shift, and go to state 270
    UNION           shift, and go to state 17
    UNSIGNED        shift, and go to state 18
    VOID            shift, and go to state 19
    VOLATILE        shift, and go to state 20
    WHILE           shift, and go to state 271
    _BOOL           shift, and go to state 21
    _COMPLEX        shift, and go to state 22
    _IMAGINARY      shift, and go to state 23
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 408
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 403

  212 iteration_statement: WHILE W OPENRB X changetable M expression CLOSERB M loop_statement •

    $default  reduce using rule 212 (iteration_statement)


State 404

  215 iteration_statement: DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB • SEMICOLON

    SEMICOLON  shift, and go to state 409


State 405

  216 iteration_statement: FOR F OPENRB X changetable declaration M expression_statement M expression N • CLOSERB M loop_statement
  218                    | FOR F OPENRB X changetable declaration M expression_statement M expression N • CLOSERB M OPENCB block_item_list_opt CLOSECB

    CLOSERB  shift, and go to state 410


State 406

  217 iteration_statement: FOR F OPENRB X changetable expression_statement M expression_statement M expression N • CLOSERB M loop_statement
  219                    | FOR F OPENRB X changetable expression_statement M expression_statement M expression N • CLOSERB M OPENCB block_item_list_opt CLOSECB

    CLOSERB  shift, and go to state 411


State 407

  210 selection_statement: IF OPENRB expression N CLOSERB M statement N ELSE M statement •

    $default  reduce using rule 210 (selection_statement)


State 408

  213 iteration_statement: WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt • CLOSECB

    CLOSECB  shift, and go to state 412


State 409

  215 iteration_statement: DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON •

    $default  reduce using rule 215 (iteration_statement)


State 410

  216 iteration_statement: FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB • M loop_statement
  218                    | FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB • M OPENCB block_item_list_opt CLOSECB
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 413


State 411

  217 iteration_statement: FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB • M loop_statement
  219                    | FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB • M OPENCB block_item_list_opt CLOSECB
  234 M: ε •

    $default  reduce using rule 234 (M)

    M  go to state 414


State 412

  213 iteration_statement: WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB •

    $default  reduce using rule 213 (iteration_statement)


State 413

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  192 loop_statement: • labeled_statement
  193               | • expression_statement
  194               | • selection_statement
  195               | • iteration_statement
  196               | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  216                    | FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M • loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  218                    | FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M • OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    RETURN          shift, and go to state 269
    SIZEOF          shift, and go to state 85
    SWITCH          shift, and go to state 270
    WHILE           shift, and go to state 271
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 415
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    loop_statement             go to state 416
    labeled_statement          go to state 353
    expression_statement       go to state 354
    selection_statement        go to state 355
    iteration_statement        go to state 356
    jump_statement             go to state 357


State 414

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
  192 loop_statement: • labeled_statement
  193               | • expression_statement
  194               | • selection_statement
  195               | • iteration_statement
  196               | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  217                    | FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M • loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M • OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    RETURN          shift, and go to state 269
    SIZEOF          shift, and go to state 85
    SWITCH          shift, and go to state 270
    WHILE           shift, and go to state 271
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 417
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    loop_statement             go to state 418
    labeled_statement          go to state 353
    expression_statement       go to state 354
    selection_statement        go to state 355
    iteration_statement        go to state 356
    jump_statement             go to state 357


State 415

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  201 block_item_list: • block_item
  202                | • block_item_list M block_item
  203 block_item_list_opt: • block_item_list
  204                    | ε •  [CLOSECB]
  205 block_item: • declaration
  206           | • statement
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  218                    | FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB • block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    AUTO            shift, and go to state 1
    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    REGISTER        shift, and go to state 7
    FLOAT           shift, and go to state 8
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    INLINE          shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    RESTRICT        shift, and go to state 12
    RETURN          shift, and go to state 269
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 85
    STATIC          shift, and go to state 15
    STRUCT          shift, and go to state 16
    SWITCH          shift, and go to state 270
    UNION           shift, and go to state 17
    UNSIGNED        shift, and go to state 18
    VOID            shift, and go to state 19
    VOLATILE        shift, and go to state 20
    WHILE           shift, and go to state 271
    _BOOL           shift, and go to state 21
    _COMPLEX        shift, and go to state 22
    _IMAGINARY      shift, and go to state 23
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 419
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 416

  216 iteration_statement: FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement •

    $default  reduce using rule 216 (iteration_statement)


State 417

    2 constant: • INTEGER_CONST
    3         | • FLOAT_CONST
    4         | • CHAR_CONST
    5         | • STRING_LITERAL
    6 primary_expression: • IDENTIFIER
    7                   | • constant
    8                   | • OPENRB expression CLOSERB
    9 postfix_expression: • primary_expression
   10                   | • postfix_expression OPENSB expression CLOSESB
   11                   | • postfix_expression OPENRB argument_expression_list_opt CLOSERB
   12                   | • postfix_expression DOT IDENTIFIER
   13                   | • postfix_expression RIGHTARROW IDENTIFIER
   14                   | • postfix_expression PLUSPLUS
   15                   | • postfix_expression MINUSMINS
   16                   | • OPENRB type_name CLOSERB OPENCB initializer_list CLOSECB
   17                   | • OPENRB type_name CLOSERB OPENCB initializer_list COMMA CLOSECB
   22 unary_expression: • postfix_expression
   23                 | • PLUSPLUS unary_expression
   24                 | • MINUSMINS unary_expression
   25                 | • unary_operator cast_expression
   26                 | • SIZEOF unary_expression
   27                 | • SIZEOF OPENRB type_name CLOSERB
   28 unary_operator: • BAND
   29               | • KSTAR
   30               | • PLUS
   31               | • MINUS
   32               | • TILDA
   33               | • NOT
   34 cast_expression: • unary_expression
   35                | • OPENRB type_name CLOSERB cast_expression
   36 multiplicative_expression: • cast_expression
   37                          | • multiplicative_expression KSTAR cast_expression
   38                          | • multiplicative_expression DIVIDE cast_expression
   39                          | • multiplicative_expression MODULO cast_expression
   40 additive_expression: • multiplicative_expression
   41                    | • additive_expression PLUS multiplicative_expression
   42                    | • additive_expression MINUS multiplicative_expression
   43 shift_expression: • additive_expression
   44                 | • shift_expression LEFTS additive_expression
   45                 | • shift_expression RIGHTS additive_expression
   46 relational_expression: • shift_expression
   47                      | • relational_expression LESSTHAN shift_expression
   48                      | • relational_expression GREATERTHAN shift_expression
   49                      | • relational_expression LESSEQUAL shift_expression
   50                      | • relational_expression GREATEREQUAL shift_expression
   51 equality_expression: • relational_expression
   52                    | • equality_expression EQUALEQUAL relational_expression
   53                    | • equality_expression NOTEQUAL relational_expression
   54 and_expression: • equality_expression
   55               | • and_expression BAND equality_expression
   56 exclusive_or_expression: • and_expression
   57                        | • exclusive_or_expression XOR and_expression
   58 inclusive_or_expression: • exclusive_or_expression
   59                        | • inclusive_or_expression BITWISEOR exclusive_or_expression
   60 logical_and_expression: • inclusive_or_expression
   61                       | • logical_and_expression AND M inclusive_or_expression
   62 logical_or_expression: • logical_and_expression
   63                      | • logical_or_expression OR M logical_and_expression
   64 conditional_expression: • logical_or_expression
   65                       | • logical_or_expression QUESTIONMARK expression COLON conditional_expression
   66 assignment_expression: • conditional_expression
   67                      | • unary_expression assignment_operator assignment_expression
   79 expression: • assignment_expression
   80           | • expression COMMA assignment_expression
   82 declaration: • declaration_specifiers init_declarator_list_opt SEMICOLON
   85 declaration_specifiers: • storage_class_specifier declaration_specifiers_opt
   86                       | • type_specifier declaration_specifiers_opt
   87                       | • type_qualifier declaration_specifiers_opt
   88                       | • function_specifier declaration_specifiers_opt
   95 storage_class_specifier: • EXTERN
   96                        | • STATIC
   97                        | • AUTO
   98                        | • REGISTER
   99 type_specifier: • VOID
  100               | • CHAR
  101               | • SHORT
  102               | • INT
  103               | • LONG
  104               | • FLOAT
  105               | • DOUBLE
  106               | • SIGNED
  107               | • UNSIGNED
  108               | • _BOOL
  109               | • _COMPLEX
  110               | • _IMAGINARY
  111               | • enum_specifier
  112               | • struct_or_union_specifier
  117 struct_or_union_specifier: • struct_or_union OPENCB struct_declaration_list CLOSECB
  118                          | • struct_or_union IDENTIFIER OPENCB struct_declaration_list CLOSECB
  119                          | • struct_or_union IDENTIFIER
  120 struct_or_union: • STRUCT
  121                | • UNION
  131 enum_specifier: • ENUM identifier_opt OPENCB enumerator_list CLOSECB
  132               | • ENUM identifier_opt OPENCB enumerator_list COMMA CLOSECB
  133               | • ENUM IDENTIFIER
  140 type_qualifier: • CONST
  141               | • RESTRICT
  142               | • VOLATILE
  143 function_specifier: • INLINE
  186 statement: • labeled_statement
  187          | • compound_statement
  188          | • expression_statement
  189          | • selection_statement
  190          | • iteration_statement
  191          | • jump_statement
  197 labeled_statement: • IDENTIFIER COLON M statement
  198                  | • CASE constant_expression COLON statement
  199                  | • DEFAULT COLON statement
  200 compound_statement: • OPENCB X changetable block_item_list_opt CLOSECB
  201 block_item_list: • block_item
  202                | • block_item_list M block_item
  203 block_item_list_opt: • block_item_list
  204                    | ε •  [CLOSECB]
  205 block_item: • declaration
  206           | • statement
  207 expression_statement: • SEMICOLON
  208                     | • expression SEMICOLON
  209 selection_statement: • IF OPENRB expression N CLOSERB M statement N
  210                    | • IF OPENRB expression N CLOSERB M statement N ELSE M statement
  211                    | • SWITCH OPENRB expression CLOSERB statement
  212 iteration_statement: • WHILE W OPENRB X changetable M expression CLOSERB M loop_statement
  213                    | • WHILE W OPENRB X changetable M expression CLOSERB OPENCB M block_item_list_opt CLOSECB
  214                    | • DO D M loop_statement M WHILE OPENRB expression CLOSERB SEMICOLON
  215                    | • DO D OPENCB M block_item_list_opt CLOSECB M WHILE OPENRB expression CLOSERB SEMICOLON
  216                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M loop_statement
  217                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement
  218                    | • FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | • FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB
  219                    | FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB • block_item_list_opt CLOSECB
  220 jump_statement: • GOTO IDENTIFIER SEMICOLON
  221               | • CONTINUE SEMICOLON
  222               | • BREAK SEMICOLON
  223               | • RETURN expression SEMICOLON
  224               | • RETURN SEMICOLON

    AUTO            shift, and go to state 1
    BREAK           shift, and go to state 261
    CASE            shift, and go to state 262
    CHAR            shift, and go to state 2
    CONST           shift, and go to state 3
    CONTINUE        shift, and go to state 263
    DEFAULT         shift, and go to state 264
    DO              shift, and go to state 265
    DOUBLE          shift, and go to state 4
    ENUM            shift, and go to state 5
    EXTERN          shift, and go to state 6
    REGISTER        shift, and go to state 7
    FLOAT           shift, and go to state 8
    FOR             shift, and go to state 266
    GOTO            shift, and go to state 267
    IF              shift, and go to state 268
    INLINE          shift, and go to state 9
    INT             shift, and go to state 10
    LONG            shift, and go to state 11
    RESTRICT        shift, and go to state 12
    RETURN          shift, and go to state 269
    SHORT           shift, and go to state 13
    SIGNED          shift, and go to state 14
    SIZEOF          shift, and go to state 85
    STATIC          shift, and go to state 15
    STRUCT          shift, and go to state 16
    SWITCH          shift, and go to state 270
    UNION           shift, and go to state 17
    UNSIGNED        shift, and go to state 18
    VOID            shift, and go to state 19
    VOLATILE        shift, and go to state 20
    WHILE           shift, and go to state 271
    _BOOL           shift, and go to state 21
    _COMPLEX        shift, and go to state 22
    _IMAGINARY      shift, and go to state 23
    IDENTIFIER      shift, and go to state 272
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    OPENRB          shift, and go to state 91
    OPENCB          shift, and go to state 273
    PLUSPLUS        shift, and go to state 93
    MINUSMINS       shift, and go to state 94
    BAND            shift, and go to state 95
    KSTAR           shift, and go to state 96
    PLUS            shift, and go to state 97
    MINUS           shift, and go to state 98
    TILDA           shift, and go to state 99
    NOT             shift, and go to state 100
    SEMICOLON       shift, and go to state 274

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 101
    primary_expression         go to state 102
    postfix_expression         go to state 103
    unary_expression           go to state 104
    unary_operator             go to state 105
    cast_expression            go to state 106
    multiplicative_expression  go to state 107
    additive_expression        go to state 108
    shift_expression           go to state 109
    relational_expression      go to state 110
    equality_expression        go to state 111
    and_expression             go to state 112
    exclusive_or_expression    go to state 113
    inclusive_or_expression    go to state 114
    logical_and_expression     go to state 115
    logical_or_expression      go to state 116
    conditional_expression     go to state 117
    assignment_expression      go to state 146
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 420
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286


State 418

  217 iteration_statement: FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M loop_statement •

    $default  reduce using rule 217 (iteration_statement)


State 419

  218 iteration_statement: FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt • CLOSECB

    CLOSECB  shift, and go to state 421


State 420

  219 iteration_statement: FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt • CLOSECB

    CLOSECB  shift, and go to state 422


State 421

  218 iteration_statement: FOR F OPENRB X changetable declaration M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB •

    $default  reduce using rule 218 (iteration_statement)


State 422

  219 iteration_statement: FOR F OPENRB X changetable expression_statement M expression_statement M expression N CLOSERB M OPENCB block_item_list_opt CLOSECB •

    $default  reduce using rule 219 (iteration_statement)
